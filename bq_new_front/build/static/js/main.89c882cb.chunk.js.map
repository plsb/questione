{"version":3,"sources":["theme/palette.js","theme/typography.js","theme/overrides/MuiIconButton.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","components/StatusBullet/StatusBullet.js","services/auth.js","components/RouteWithLayout/RouteWithLayout.js","components/SearchInput/SearchInput.js","components/DialogQuestione/index.js","components/StartEvaluationCard/StartEvaluationCard.js","pages/Administrator/Course/CourseTable/components/CourseToolbar/CourseToolbar.js","components/TableQuestione/TableQuestione.js","services/api.js","components/QuestionCard/QuestionCard.js","layouts/Main/components/Footer/Footer.js","helpers/chartjs.js","helpers/getInitials.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","pages/PageNotFound/PageNotFound.js","pages/Unauthorized/Unauthorized.js","pages/AccountDetails/AccountDetails.js","pages/UserRequestCourse/UserRequestCourseTable/components/UserRequestCourseToolbar/UserRequestCourseToolbar.js","pages/UserRequestCourse/UserRequestCourseTable/UserRequestCourseTable.js","pages/UserRequestCourse/UserRequestCourseDetails/UserRequestCourseDetails.js","pages/Dashboard/components/TotalQuestion/TotalQuestion.js","pages/Dashboard/components/TasksProgress/TasksProgress.js","pages/Dashboard/components/TotalEvaluation/TotalEvaluation.js","pages/Dashboard/components/TotalProfessor/TotalProfessor.js","pages/Dashboard/components/TotalStudent/TotalStudent.js","pages/Dashboard/Dashboard.js","services/seacrhQuestions.js","pages/SignIn/SignIn.js","common/mask.js","pages/SignUp/SignUp.js","pages/RedifinePassword/RedefinePassword.js","pages/ResetPassword/ResetPassword.js","pages/Administrator/UserTable/components/UsersToolbar/UsersToolbar.js","pages/Administrator/UserTable/UsersTable.js","pages/Administrator/RequestUser/RequestUserTable/components/RequestUsersToolbar/RequestUsersToolbar.js","pages/Administrator/RequestUser/RequestUserTable/RequestUsersTable.js","pages/Administrator/RequestUser/RequestUserDetails/RequestUserDetails.js","pages/Administrator/Skill/SkillTable/components/SkillToolbar/SkillToolbar.js","pages/Administrator/Skill/SkillTable/SkillTable.js","pages/Administrator/Skill/SkillDetails/SkillDetails.js","pages/Administrator/Object/ObjectTable/components/ObjectToolbar/ObjectToolbar.js","pages/Administrator/Object/ObjectTable/ObjectTable.js","pages/Administrator/Object/ObjectDetails/ObjectDetails.js","pages/Administrator/Course/CourseTable/CourseTable.js","pages/Administrator/Course/CourseDetails/CourseDetails.js","pages/Professor/Evaluation/EvaluationTable/components/EvaluationToolbar/EvaluationToolbar.js","pages/Professor/Evaluation/EvaluationCard/EvaluationCard.js","pages/Professor/EvaluationApplication/EvaluationApplicationTable/components/EvaluationApplicationToolbar/EvaluationApplicationToolbar.js","pages/Professor/EvaluationApplication/EvaluationApplicationCard/EvaluationApplicationCard.js","pages/Professor/EvaluationApplication/EvaluationApplicationTable/EvaluationApplicationTable.js","pages/Professor/Evaluation/EvaluationTable/EvaluationTable.js","pages/Professor/Evaluation/EvaluationArchiveTable/components/EvaluationToolbar/EvaluationToolbar.js","pages/Professor/Evaluation/EvaluationArchiveTable/EvaluationArchiveTable.js","pages/Professor/Evaluation/EvaluationDetails/EvaluationDetails.js","pages/Professor/Evaluation/EvaluationQuestions/components/EvaluationQuestionCard.js","pages/Professor/Evaluation/EvaluationQuestions/EvaluationQuestions.js","pages/Professor/EvaluationApplication/EvaluationApplicationDetails/EvaluationApplicationDetails.js","pages/Professor/EvaluationApplication/EvaluationApplicationResults/EvaluationApplicationResultsOverViewQuestion/EvaluationApplicationResultsOverviewQuestion.js","pages/Professor/EvaluationApplication/EvaluationApplicationResults/EvaluationApplicationResultsSkillObjects/EvaluationApplicationResultsSkillObjects.js","pages/Professor/EvaluationApplication/EvaluationApplicationResults/EvaluationApplicationResults.js","components/Timer/Timer.jsx","components/Timer/index.js","pages/Student/DoEvaluation/DoEvaluation.js","pages/Student/StartEvaluation/StartEvaluation.js","pages/Student/EvaluationsResult/EvaluationsResultTable/EvaluationResultToolbar/EvaluationResultStudentToolbar.js","pages/Student/EvaluationsResult/EvaluationsResultTable/EvaluationsResultStudentTable.js","pages/Student/EvaluationsResult/EvaluationResultDetails/EvaluationsResultDetails.js","pages/Administrator/TypeOfEvaluation/TypeOfEvaluationTable/components/TypeOfEvaluationToolbar/TypeOfEvaluationToolbar.js","pages/Administrator/TypeOfEvaluation/TypeOfEvaluationTable/TypeOfEvaluationTable.js","pages/Administrator/TypeOfEvaluation/TypeOfEvaluationDetails/TypeOfEvaluationDetails.js","pages/EvaluationPractice/EvaluationPracticeTable/components/EvaluationToolbar/EvaluationToolbar.js","pages/EvaluationPractice/EvaluationPracticeCard/EvaluationPracticeCard.js","pages/EvaluationPractice/EvaluationPracticeTable/EvaluationPracticeTable.js","pages/EvaluationPractice/EvaluationPracticeArchiveTable/components/EvaluationToolbar/EvaluationToolbar.js","pages/EvaluationPractice/EvaluationPracticeArchiveTable/EvaluationPracticeArchiveTable.js","hooks/useTypeOfEvaluations.js","pages/EvaluationPractice/EvaluationPracticeDetails/EvaluationPracticeDetails.js","pages/EvaluationPractice/GenerateEvaluation/GenerateEvaluation.jsx","pages/EvaluationPractice/components/QuestionItem/QuestionItem.js","pages/EvaluationPractice/EvaluationPracticeQuestions/EvaluationPracticeQuestions.js","pages/EvaluationPractice/EvaluationPracticeQuestions/index.js","pages/EvaluationPractice/EvaluationPracticeApplication/EvaluationApplicationTable/components/EvaluationApplicationToolbar/EvaluationApplicationToolbar.js","pages/EvaluationPractice/EvaluationPracticeApplication/EvaluationApplicationCard/EvaluationApplicationCard.js","pages/EvaluationPractice/EvaluationPracticeApplication/EvaluationApplicationTable/EvaluationApplicationTable.js","pages/EvaluationPractice/EvaluationPracticeApplication/EvaluationApplicationDetails/EvaluationApplicationDetails.js","pages/EvaluationPractice/EvaluationPracticeApplication/EvaluationApplicationResults/EvaluationApplicationResultsOverViewQuestion/EvaluationApplicationResultsOverviewQuestion.js","pages/EvaluationPractice/EvaluationPracticeApplication/EvaluationApplicationResults/EvaluationApplicationResultsSkillObjects/EvaluationApplicationResultsSkillObjects.js","pages/EvaluationPractice/EvaluationPracticeApplication/EvaluationApplicationResults/EvaluationApplicationResults.js","pages/Professor/Question/QuestionTable/components/QuestionToolbar/QuestionToolbar.js","pages/Professor/Question/QuestionTable/QuestionTable.js","pages/Professor/Question/QuestionDetails/QuestionItens/index.js","pages/Professor/Question/QuestionDetails/QuestionSkill/index.js","pages/Professor/Question/QuestionDetails/QuestionKeywords/index.js","pages/Professor/Question/QuestionDetails/QuestionDetails.js","routes/routes.js","App.js","index.js"],"names":["white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","root","backgroundColor","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","typography","borderBottom","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","useStyles","makeStyles","display","borderRadius","flexGrow","flexShrink","sm","height","spacing","width","md","lg","neutral","danger","StatusBullet","props","className","size","rest","classes","clsx","defaultProps","TOKEN_KEY","NAME_USER","login","token","name","email","level","id","showTour","externalQuestion","localStorage","setItem","updateNameUser","logout","removeItem","RouteWithLayout","Layout","layout","Component","component","typeUser","needToBeLogged","typeStorage","getItem","useEffect","render","matchProps","to","pathname","state","from","location","alignItems","padding","flexBasis","marginRight","input","SearchInput","onChange","value","style","Paper","Input","disableUnderline","type","DialogQuestione","open","handleClose","mesage","title","onClickAgree","onClickDisagree","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","codeContainer","margin","gridInputCodeContainer","inputCode","border","textAlign","fontFamily","buttonCode","textDecoration","textShadow","statsItem","statsIcon","withRouter","history","colorBox","useState","codigo","setCodigo","a","toast","push","Card","Box","bgcolor","CardContent","Grid","container","justify","item","Tooltip","TransitionComponent","Zoom","placement","placeholder","event","target","autoComplete","Divider","CardActions","Typography","variant","row","marginTop","spacer","importButton","exportButton","searchInput","onClickSearch","onChangeSearch","searchText","e","paddingLeft","paddingRight","content","inner","minWidth","nameContainer","avatar","headTable","actions","justifyContent","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","response","data","status","window","href","message","marginRigth","marginLeft","head","paddingBottom","paddingTop","chipGreen","chipRed","expand","transform","transition","transitions","duration","shortest","paperWrong","paperRight","position","flex","labelRank","lineQuestion","colorLabelDifficulty","colorLabelDifficultyWithoutAnswer","question","setRefresh","refresh","id_evaluation","React","anchorEl","setAnchorEl","expanded","setExpanded","openDeleteQuestionEvaluation","setOpenDeleteQuestionEvaluation","openDeleteQuestion","setOpenDeleteQuestion","openEnableQuestion","setOpenEnableQuestion","evaluations","setEvaluations","rank","setRank","qtRank","setQtRank","rankUserQuestion","setRankUserQuestion","get","loadRank","fk_user_id","avg","count","fk_question_id","post","errors","loadEvaluations","onClickCloseDialogQEvaluation","onClickCloseDialogQuestion","onClickCloseDialogEnableQuestion","url","delete","fk_evaluation_id","validated","put","openEvalationChoose","setOpenEvalationChoose","handleChooseEvaluationExit","evaluation","porc","totalCorrect","CardHeader","skill","knowledge_objects","question_items","length","course","description","Chip","label","difficulty","total_answers","Math","round","porc_correct","action","p","m","IconButton","aria-label","parseInt","PlaylistAdd","Switch","checked","inputProps","Edit","flexDirection","alignSelf","currentTarget","MoreVert","Rating","newValue","modifyRank","precision","disabled","year","fk_type_of_evaluation_id","type_of_evaluation","map","ReactHtmlParser","keywords","keyword","base_text","disableSpacing","expandOpen","aria-expanded","ExpandMoreRounded","Collapse","in","timeout","unmountOnExit","stem","correct_item","elevation","Menu","keepMounted","Boolean","MenuItem","fullScreen","AppBar","Toolbar","edge","List","ListItem","handleListItemClick","key","ListItemText","moment","created_at","format","Footer","logoImage","alt","src","Link","maxHeight","replace","split","slice","v","toUpperCase","join","minHeight","tour","Profile","openTour","user","Avatar","getInitials","direction","RouterLink","clickable","onDelete","deleteIcon","fontWeightMedium","active","CustomRouterLink","forwardRef","ref","SidebarNav","pages","useHistory","preventDefault","page","disableGutters","activeClassName","media","breakpoints","up","nav","pagesAdm","Note","EmojiObjects","AccountBox","pagesProfessor","Ballot","Assessment","pagesUser","Drawer","anchor","level_user","handlePage","signOutButton","Topbar","setBackground","indexOf","onSidebarOpen","Hidden","lgUp","shiftContent","stepsGeneral","selector","stepsProfessor","stepsStudent","Main","children","isTourOpen","setIsTourOpen","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","steps","isOpen","onRequestClose","setShowTourFalseAPI","Minimal","grid","quoteContainer","quote","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","quoteText","quoteSubText","contentContainer","contentHeader","contentBody","person","schema","presence","allowEmpty","minimum","maximum","AccountDetails","isValid","values","touched","formState","setFormState","validate","handleChange","hasError","field","goBack","subheader","xs","TextField","fullWidth","helperText","InputProps","readOnly","comboboxSearch","statusColors","statusContainer","UserRequestCourseTable","couserProfessor","setCourseProfessor","rowsPerPage","setRowsPerPage","setPage","total","setTotal","loadCourseProfessor","situation","Table","TableHead","TableRow","TableCell","TableBody","cp","tableRow","hover","valid","TablePagination","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","fk_course_id","numericality","onlyInteger","greaterThan","UserRequestCourseDetails","courses","setCourses","file","setFile","formData","FormData","append","loadCourses","select","SelectProps","native","getUploadParams","onChangeStatus","meta","maxSizeBytes","submitButtonContent","maxFiles","inputContent","inputWithFilesContent","accept","styles","dropzone","difference","differenceIcon","differenceValue","TotalQuestion","load","progress","TotalEvaluation","TotalProfessor","TotalStudent","gridStartEvaluation","Dashboard","xl","searchQuestions","object","searchQuestionsPage","password","paddingBototm","form","down","socialButtons","socialIcon","sugestion","textField","signInButton","persist","acess_level","show_tour","add_external_question","alert","onSubmit","cpfMask","policy","policyCheckbox","signUpButton","cpf","autoClose","match","params","confirmPassword","UsersTable","users","setUsers","setSearchText","loadUsers","updateExternalQuestions","userId","lastUserList","bind","index","avatarUrl","Checkbox","RequestUsersTable","buttonEdit","RequestUserDetails","codigoCourseProfessor","recepit","setReceipt","responseType","then","URL","createObjectURL","Blob","document","createElement","setAttribute","body","appendChild","click","catch","console","log","receipt","findCourseProfessor","buttonSeacrh","option","SkillTable","skills","setSkills","idSkillDelete","setIdSkillDelete","setOpen","loadSkill","onClickCloseDialog","buttonDelete","SkillDetails","codigoSkill","saveSkillDetails","acao","findASkill","ObjectTable","objects","setObjects","idObjectDelete","setIdObjectDelete","loadObject","ObjectDetails","codigoObject","saveObjectDetails","findAObject","CourseTable","idCourseDelete","setIdCourseDelete","initials","CourseDetails","codigoCourse","findACourse","chip","fieldsDialog","setTabValue","descriptionNewApplication","setDescriptionNewApplication","changeStatus","setOpenNewApplication","openNewApplication","handleNewApplicationExit","chipred","chipgreen","chip_brown","chip_amber","chipyellow","chipblue","application","setState","evaluationApplication","setEvaluationApplication","new_evaluation","FormatListBulleted","id_application","random_questions","date_start","time_to_finalize","date_finish","show_results","release_preview_question","EvaluationApplicationTable","evaluationsApplications","setEvaluationsApplications","loadEvaluationsApplications","handlePageChange","handleRowsPerPageChange","LinearProgress","TabPanel","other","role","hidden","EvaluationTable","tabValue","LinkTab","Tab","a11yProps","Tabs","rel","EvaluationArchiveTable","fab","labelRed","EvaluationDetails","codigoEvaluation","questions","setQuestions","loadQuestionsEvaluation","findAEvaluation","questionActions","deleteButton","correct","hasApplication","lastQuestions","filter","currentQuestion","ml","headQuestion","boxSizing","percentageRed","percentageGreen","percentageNull","answerCorrect","answerIncorrect","answerNull","lineItemQuestion","incorrect","bgCorrect","bgIncorrect","paperWrongFont","paperRightFont","tituloCard","withStyles","tooltip","maxWidth","pxToRem","EvaluationsResultDetails","evaluationId","setHasApplication","evaluationDescription","setEvaluationDescription","evaluation_questions","has_application","i","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","EvaluationQuestionCard","inputInline","subGroup","TooltipCustomized","EvaluationApplicationDetails","idApplication","checkedRandom","setCheckedRandom","checkedShowResult","setCheckedShowResult","checkedReleasePreviewQuestion","setCheckedReleasePreviewQuestion","checkedDefineDateAndHourInitial","setCheckedDefineDateAndHourInitial","checkedDefineDateAndHourFinal","setCheckedDefineDateAndHourFinal","checkedDefineDuration","setCheckedDefineDuration","date","hour","hour_finish","date_release_results","time_release_results","time_start","time_finish","findAApplication","Fragment","FormControlLabel","control","disablePadding","nested","InputLabelProps","shrink","percentageOrange","checkedCancel","EvaluationApplicationResultsOverviewQuestion","result","numberQuestion","cancel","checkedA","checkedB","total_asnwer","percentage_correct","idQuestion","itens","flexWrap","ordem","total_answer_item","percentage_answer","EvaluationApplicationResultsSkillObjects","setValue","total_questions","total_answer","headStudent","whiteSpace","overflow","textOverflow","headPercentage","bodyStudent","bodyPercentage","labelStudent","EvaluationApplicationResults","avgCorrectQuestions","setAvgCorrectQuestions","totalVarianceQuestions","setTotalVarianceQuestions","totalVarianceStudents","setTotalVarianceStudents","answerStudents","setAnswerStudents","overviewQuestions","setOverviewQuestions","overviewQuestionsHead","setOverviewQuestionsHead","setValueTab","variance_total","students","avg_correct_question","findResults","findOverviewQuestions","findResultsSkill","findResultsObjects","description_application","qtdQuestions","qtdStudents","percentagem_geral_correct_evaluation","toFixed","align","student","hr_start","utc","hr_finished","total_time","finished_automatically","variance","percentage_correct_round","quest","itemSelected","Block","ordemQuestion","Done","Timer","expiryTimestamp","onExpire","setShowTimeDialog","useTimer","autoStart","seconds","minutes","hours","days","addZeroToLeft","getTimeColor","buttons","hide","opacity","DoEvaluation","codeAplication","setApplication","answers","setAnswers","totalAnswers","setTotalAnswers","dateTimeToFinalized","setDateTimeToFinalized","Date","setDateServer","dialogStart","setDialogStart","dialogFinish","setDialogFinish","enableButtonStart","setEnableButtonStart","openBackdrop","setOpenBackdrop","show","timer","useRef","startEvaluation","current","setTimeout","updateEvaluation","closed","totalAlreadyAnswer","forEach","answer","date_time_to_finalized","answerId","itemQuestionSelected","element","array","listApplication","onClickCloseDialogStart","onClickOpenDialogFinsh","onClickCloseDialogFinish","Backdrop","backdrop","CircularProgress","practice","timestampTime","time","setSeconds","getSeconds","floor","getExpiryTimestamp","getTime","student_started","stopPropagation","onFocus","evaluation_question_without_correct","question_without_correct","question_items_without_correct","selected","StartEvaluation","chippurple","dFlex","releaseResultsMessage","top","left","EvaluationsResultStudentTable","newPage","responseHead","evaluation_application","canShowResults","finalized_at","idHead","PlayArrow","setHead","applicationDescription","setApplicationDescription","showQuestionPreview","setShowQuestionPreview","question_preview","findHead","qtdCorrect","qtdIncorrect","items","TypeOfEvaluationTable","typeOfEvaluations","setTypeOfEvaluations","idTypeOfEvaluationDelete","setIdTypeOfEvaluationDelete","loadTypeOfEvaluations","typeOfEvaluation","typeOfEvaluationCode","findATypeOfEvaluation","hasQuestions","setHasQuestions","evaluationQuestions","checkHasQuestion","EvaluationPracticeTable","EvaluationPracticeArchiveTable","useTypeOfEvaluation","typeList","setTypeList","loadAllTypeOfEvaluations","useCallback","selectGroup","EvaluationPracticeDetails","useTypeOfEvaluations","area","GenerateEvaluation","typeOfEvaluationList","openReference","setReferenceOpen","openSkills","setSkillsOpen","areaIsOpen","setAreaIsOpen","areaList","setAreaList","skillList","setSkillList","amountQuestions","setAmountQuestions","renderConfigArea","setRenderConfigArea","renderConfigSkills","setRenderConfigSkills","renderConfigQuestions","setRenderConfigQuestions","referenceId","areaId","skillId","lenght","amount_questions","initial_period","final_period","fk_type_evaluation_id","qtQuestions","year_start","year_end","fk_skill_id","Select","labelId","onOpen","getSkills","questionInfo","card","QuestionItem","question_with_skill_and_objects","EvaluationPracticeQuestions","loadQuestions","onClickHandleNewApplication","setStatus","responseStatus","loadStatus","reload","reference","onClickCleanSearch","courseSelect","setCourseSelect","setObjectSelect","setSkillSelect","setIdSelect","keywordsAll","setKeywordsAll","setValueSelect","loadKeywordsAll","loadObjects","loadSkills","inputValue","setInputValue","FormControl","RadioGroup","Radio","fk_object_id","Autocomplete","onInputChange","newInputValue","QuestionTable","QUESTION_SEARCH_TYPE","QUESTION_SEARCH_COURSE","QUESTION_SEARCH_SKILL","QUESTION_SEARCH_OBJECT","QUESTION_SEARCH_KEYWORD","QUESTION_SEARCH_ID","Number","btRemove","btnRemoveWrapper","imageUploadHandler","idItem","inputItens","setInputItens","btAddItem","setBtAddItem","setBtRemoveItem","itemDelete","loadItens","handleRemoveItem","splice","elements","inputField","apiKey","init","menubar","file_picker_types","images_upload_url","images_upload_handler","automatic_uploads","plugins","toolbar","onEditorChange","indexEdit","handleChangeItem","indexCorrect","handleChangeCorrect","endIcon","deleteItem","saveItem","skillSelect","objectSelected","inputObjects","setInputObjects","btAddObject","setBtAddObject","setBtRemoveObject","setQuestion","objectsDelete","setObjectsDelete","objectLoading","setObjectLoading","loadObjectsSelectQuestion","fk_knowledge_object","deleteObject","loadQuestion","idObject","handleInputChangeObject","lastObjectsDelete","lastObjects","uniqueId","now","saveSkill","reduced","findIndex","redItem","saveObject","mb1","textButton","textButtonLarge","keywordsQuestion","setKeywordsQuestion","keyWordNew","setKeyWordNew","loadKeywordsQuestion","addKeyWord","autoSelect","options","getOptionLabel","selectKeyWord","deleteKeyword","tabItens","setTabItens","tabSkill","setTabSkill","openYear","setYearOpen","baseText","setBaseText","setStem","setReference","setYear","yearList","setYearList","setValidated","idQuestionNew","setIdQuestionNew","blobInfo","failure","blob","filename","url_image","getYearList","currentYear","getFullYear","findAQuestion","saveQuestion","Routes","exact","MainLayout","path","SignUp","MinimalLayout","SignIn","RedefinePassword","ResetPassword","GenerateEvaluationQuestions","EvaluationPracticeApplicationTable","EvaluationPracticeApplicationDetails","EvaluationPracticeApplicationResults","EvaluationsResultStudent","EvaluationsResultStudentDetails","TypeOfEvaluationDetails","UserTable","RequestUserTable","EvaluationQuestions","QuestionDetails","Unauthorized","PageNotFound","browserHistory","createBrowserHistory","App","ThemeProvider","ReactDOM","getElementById"],"mappings":"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gBAAgB,EAChBD,UAAW,EACXH,OAAQugC,GACRC,KAAK,cACT,kBAAC,EAAD,CACItgC,UAAWoZ,GACXgnB,OAAK,EACLlgC,gBAAgB,EAChBD,UAAW,EACXH,OAAQugC,GACRC,KAAK,iBAET,kBAAC,EAAD,CACItgC,UAAWw0B,GACX4L,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,UAAW,EACXqgC,KAAK,yBACT,kBAAC,EAAD,CACItgC,UAAWy0B,GACX2L,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,UAAW,EACXqgC,KAAK,iCACT,kBAAC,EAAD,CACItgC,UAAWg1B,GACXoL,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,oDACT,kBAAC,EAAD,CACItgC,UAAWm1B,GACXiL,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,4CACT,kBAAC,EAAD,CACItgC,UAAW4gC,GACXR,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,qDAET,kBAAC,EAAD,CACItgC,UAAW6gC,GACXT,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,gEACT,kBAAC,EAAD,CACItgC,UAAW8gC,GACXV,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,0FACT,kBAAC,EAAD,CACItgC,UAAW+gC,GACXX,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,wEAET,kBAAC,EAAD,CACItgC,UAAWmyB,GACXiO,OAAK,EACLtgC,OAAQ0gC,GACRtgC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,8BACT,kBAAC,EAAD,CACItgC,UAAWghC,GACXZ,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,gCACT,kBAAC,EAAD,CACItgC,UAAWihC,GACXb,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,gDACT,kBAAC,EAAD,CACItgC,UAAW0uB,GACX0R,OAAK,EACLtgC,OAAQ0gC,GACRtgC,gBAAgB,EAChBD,UAAW,EACXqgC,KAAK,0BAjJb,IAmJI,kBAAC,EAAD,CACItgC,UAAW8gB,GACXsf,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,aACT,kBAAC,EAAD,CACItgC,UAAWkhB,GACXkf,OAAK,EACLtgC,OAAQugC,GACRpgC,SAAU,EACVC,gBAAgB,EAChBogC,KAAK,mCACT,kBAAC,EAAD,CACItgC,UAAW2zB,GACXyM,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,wBACT,kBAAC,EAAD,CACItgC,UAAWkhC,GACXd,OAAK,EACLtgC,OAAQugC,GACRpgC,SAAU,EACVC,gBAAgB,EAChBogC,KAAK,uDACT,kBAAC,EAAD,CACItgC,UAAWsf,GACX8gB,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,YACT,kBAAC,EAAD,CACItgC,UAAW+f,GACXqgB,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,iCACT,kBAAC,EAAD,CACItgC,UAAWogB,GACXggB,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,aACT,kBAAC,EAAD,CACItgC,UAAW0gB,GACX0f,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,mCACT,kBAAC,EAAD,CACItgC,UAAWmhC,GACXf,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,SAAU,EACVqgC,KAAK,WACT,kBAAC,EAAD,CACItgC,UAAWohC,GACXhB,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,SAAU,EACVqgC,KAAK,oBACT,kBAAC,EAAD,CACItgC,UAAWge,GACXoiB,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,SAAU,EACVqgC,KAAK,2CAET,kBAAC,EAAD,CACItgC,UAAW4jB,GACXwc,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,SAAU,EACVqgC,KAAK,iBACT,kBAAC,EAAD,CACItgC,UAAWmkB,GACXic,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,SAAU,EACVqgC,KAAK,yBACT,kBAAC,EAAD,CACItgC,UAAWqhC,GACXjB,OAAK,EACLlgC,gBAAgB,EAChBJ,OAAQugC,GACRpgC,SAAU,EACVqgC,KAAK,wCACT,kBAAC,EAAD,CACItgC,UAAWskB,GACX8b,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,2CACT,kBAAC,EAAD,CACItgC,UAAWijB,GACXmd,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,6BACT,kBAAC,EAAD,CACItgC,UAAW0nB,GACX0Y,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,oDACT,kBAAC,EAAD,CACItgC,UAAWmrB,GACXiV,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,oDACT,kBAAC,EAAD,CACItgC,UAAWw5B,GACX4G,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,eACT,kBAAC,EAAD,CACItgC,UAAWshC,GACXlB,OAAK,EACLtgC,OAAQugC,GACRngC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,mCAET,kBAAC,EAAD,CACItgC,UAAWuhC,GACXnB,OAAK,EACLtgC,OAAQ0gC,GACRtgC,gBAAgB,EAChBD,SAAU,EACVqgC,KAAK,kBACT,kBAAC,EAAD,CACIA,KAAK,IACLxgC,OAAQ0gC,GACRtgC,gBAAgB,EAChBF,UAAWwhC,Q,UCzVrBC,GAAiBC,eAEFC,G,4JACjB,WAEI,OADAljB,SAAS3c,MAAQ,mBAEb,kBAAC8/B,EAAA,EAAD,CAAe3kC,MAAOA,GAClB,kBAAC,KAAD,CAAgB6f,UAAW,IAAMtU,SAAS,kBAC1C,kBAAC,IAAD,CAAQ/E,QAASg+B,IACb,kBAAC,GAAD,CAAQh+B,QAASg+B,W,GAPJ1hC,aCRjC8hC,IAASvhC,OAAO,kBAAC,GAAD,MAASme,SAASqjB,eAAe,W","file":"static/js/main.89c882cb.chunk.js","sourcesContent":["import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-block',\n    borderRadius: '50%',\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  sm: {\n    height: theme.spacing(1),\n    width: theme.spacing(1)\n  },\n  md: {\n    height: theme.spacing(2),\n    width: theme.spacing(2)\n  },\n  lg: {\n    height: theme.spacing(3),\n    width: theme.spacing(3)\n  },\n  neutral: {\n    backgroundColor: theme.palette.neutral\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  info: {\n    backgroundColor: theme.palette.info.main\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.main\n  },\n  danger: {\n    backgroundColor: theme.palette.error.main\n  },\n  success: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n\nconst StatusBullet = props => {\n  const { className, size, color, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <span\n      {...rest}\n      className={clsx(\n        {\n          [classes.root]: true,\n          [classes[size]]: size,\n          [classes[color]]: color\n        },\n        className\n      )}\n    />\n  );\n};\n\nStatusBullet.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'neutral',\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'danger'\n  ]),\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\n\nStatusBullet.defaultProps = {\n  size: 'md',\n  color: 'default'\n};\n\nexport default StatusBullet;\n","export const TOKEN_KEY = '@Questione-token';\nexport const ID_USER = '@Questione-id-user';\nexport const NAME_USER = '@Questione-name-user';\nexport const EMAIL_USER = '@Questione-email-user';\nexport const LEVEL_USER = '@Questione-acess-level-user';\nexport const SHOW_TOUR = '@Questione-acess-show-tour';\nexport const EXTERNAL_QUESTION = '@Questione-external-question';\n\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\n\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\n\nexport const login = (token, name, email, level, id, showTour, externalQuestion) => {\n    localStorage.setItem(TOKEN_KEY, token);\n    localStorage.setItem(NAME_USER, name);\n    localStorage.setItem(EMAIL_USER, email);\n    localStorage.setItem(LEVEL_USER, level);\n    localStorage.setItem(ID_USER, id);\n    localStorage.setItem(SHOW_TOUR, showTour);\n    localStorage.setItem(EXTERNAL_QUESTION, externalQuestion);\n};\n\nexport const updateNameUser = (name) => {\n    localStorage.setItem(NAME_USER, name);\n};\n\nexport const updateShowTour = (showTour) => {\n    localStorage.setItem(SHOW_TOUR, showTour);\n};\n\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(NAME_USER);\n    localStorage.removeItem(EMAIL_USER);\n    localStorage.removeItem(LEVEL_USER);\n    localStorage.removeItem(ID_USER);\n    localStorage.removeItem(EXTERNAL_QUESTION);\n};\n","import React, {useEffect} from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {isAuthenticated} from \"./../../services/auth\";\nimport validate from \"validate.js\";\n\n\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, typeUser, needToBeLogged, ...rest } = props;\n  /* typeUser -1 vai servir para identificar um componente que todos precisam ter acesso.\n    typeUser 1 somente administrador acessa.\n    typeUser 2 somente professor acessa.\n                                 */\n    const typeStorage = localStorage.getItem('@Questione-acess-level-user');\n\n    useEffect(() => {\n\n    }, [typeStorage]);\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n          needToBeLogged ? (\n               isAuthenticated() ? (\n                   typeUser==typeStorage || typeUser==-1 ?\n                       <Layout>\n                           <Component {...matchProps} />\n                       </Layout>\n                       :\n                       <Redirect to={{ pathname: \"/Unauthorized\", state: { from: props.location } }} />\n\n              ) : (\n                  <Redirect to={{ pathname: \"/sign-in\", state: { from: props.location } }} />\n              )\n\n          ) : (\n              <Layout>\n                  <Component {...matchProps} />\n              </Layout>\n          )\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  needToBeLogged: PropTypes.any.isRequired,\n  path: PropTypes.string,\n  typeUser: PropTypes.number,\n\n};\n\nexport default RouteWithLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: '4px',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    display: 'flex',\n    flexBasis: 420\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  input: {\n    flexGrow: 1,\n    fontSize: '14px',\n    lineHeight: '16px',\n    letterSpacing: '-0.05px'\n  }\n}));\n\nconst SearchInput = props => {\n  const { className, onChange, value, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n      style={style}>\n      {/*<SearchIcon className={classes.icon} /> */}\n      <Input\n        {...rest}\n        className={classes.input}\n        disableUnderline\n        onChange={onChange}\n        type=\"text\"\n        value={value || ''}/>\n    </Paper>\n  );\n};\n\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  style: PropTypes.object,\n  value: PropTypes.object\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {Button} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nconst DialogQuestione = props => {\n    const { className, open, handleClose, mesage, title,onClickAgree, onClickDisagree,...rest } = props;\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {mesage}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClickAgree} color=\"primary\">\n                        Sim\n                    </Button>\n                    <Button onClick={onClickDisagree} color=\"primary\" autoFocus>\n                        Não\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n  );\n}\n\nDialogQuestione.propTypes = {\n    handleClose: PropTypes.func,\n    open: PropTypes.object,\n    onClickAgree: PropTypes.func,\n    onClickDisagree: PropTypes.func,\n    mesage: PropTypes.string,\n    title: PropTypes.string,\n};\n\nexport default DialogQuestione;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  Divider,\n  Box,\n    Tooltip,\n    Zoom\n} from '@material-ui/core';\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\nimport { toast } from 'react-toastify';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n  },\n  codeContainer: {\n    margin: 20\n  },\n  gridInputCodeContainer: {\n    marginBottom: 20\n  },\n  inputCode: {\n    width: 270,\n    height: 45,\n    border: '1px solid #2c2b2b',\n    background: '#FFFFFF',\n    boxShadow: '1px 1px 1px #2c2b2b',\n    borderRadius: 8,\n    textAlign: 'center',\n    fontSize: 28,\n    fontWeight: 'bold',\n    fontFamily: 'OCR A Std, monospace'//'Miriam Libre, sans-serif'\n  },\n  buttonCode: {\n    background: 'linear-gradient(to bottom, #2c2b2b 5%, #2c2b2b 100%)',\n    display: 'inline-block',\n    border: '1px solid #ffffff',\n    backgroundColor: '#2c2b2b',\n    padding: '6px 24px',\n    borderRadius: '6px',\n    color: '#ffffff',\n    fontFamily: 'Miriam Libre, sans-serif',\n    fontSize: 22,\n    fontWeight: 'bold',\n    textDecoration: 'none',\n    textShadow: '0px 1px 0px #0a1c2e',\n    boxShadow: 'inset 0px 1px 0px 0px #ffffff'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  },\n  margin: {\n    margin: theme.spacing(1),\n    width: '100px'\n  },\n}));\n\nconst StartEvaluationCard = props => {\n  const { className, history, colorBox, ...rest } = props;\n  const [codigo, setCodigo] = useState('');\n\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setCodigo(event.target.value);\n  }\n\n  async function onClickButton() {\n    if(codigo == ''){\n      toast.error('Informe o código da avaliação.');\n    } else {\n      history.push('/code/'+codigo);\n    }\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <Box width=\"100%\" height=\"100%\" bgcolor={colorBox}>\n      <CardContent>\n          <div className={classes.codeContainer}>\n              <Grid container\n                    spacing={1}\n                    justify=\"center\"\n                    className={classes.gridInputCodeContainer}>\n                <Grid item>\n                  <Tooltip TransitionComponent={Zoom} placement=\"top\"\n                           title=\"Informe o código de alguma avaliação que deseja responder, depois é só clicar no botão Participar!\">\n                    <input\n                        className={classes.inputCode}\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"código?\"\n                        onChange={handleChange}\n                        autoComplete=\"off\"/>\n                  </Tooltip>\n\n                </Grid>\n                <Grid item>\n                </Grid>\n              </Grid>\n            <Grid container\n                  spacing={1}\n                  justify=\"center\">\n              <button\n                  type=\"button\"\n                  className={classes.buttonCode}\n                  onClick={onClickButton}>Participar!</button>\n            </Grid>\n          </div>\n      </CardContent>\n      </Box>\n      <Divider />\n      <CardActions>\n        <Grid\n          container\n          justify=\"space-between\">\n          <Grid\n            className={classes.statsItem}\n            item>\n              <Typography\n                  display=\"inline\"\n                  variant=\"body2\">\n                Infome o código da avaliação.\n              </Typography>\n          </Grid>\n          <Grid\n              className={classes.statsItem}\n              item>\n            <QuestionAnswer className={classes.statsIcon} />\n            <Typography\n                display=\"inline\"\n                variant=\"body2\">\n              Aqui é o lugar certo para você ser questionado.\n            </Typography>\n          </Grid>\n\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nStartEvaluationCard.propTypes = {\n  className: PropTypes.string,\n  history: PropTypes.object,\n  colorBox: PropTypes.string\n};\n\nexport default withRouter(StartEvaluationCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport { SearchInput } from '../../../../../../components';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst CourseToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/users/requests');\n  }\n\n  const onClickNewCourse = e => {\n    history.push('/course-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Lista de Cursos'}</Typography>\n        <span className={classes.spacer} />\n        <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={onClickNewCourse}>\n          Novo Curso\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nCourseToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(CourseToolbar);\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/styles\";\nimport UsersToolbar from \"../../pages/Administrator/Course/CourseTable/components/CourseToolbar/CourseToolbar\";\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Table,\n    TablePagination,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2)\n    },\n    content: {\n        padding: 0,\n        marginTop: theme.spacing(2)\n    },\n    inner: {\n        minWidth: 1050\n    },\n    nameContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    avatar: {\n        marginRight: theme.spacing(2)\n    },\n    headTable: {\n        fontWeight: \"bold\"\n    },\n    actions: {\n        justifyContent: 'flex-end'\n    },\n    row: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    importButton: {\n        marginRight: theme.spacing(1)\n    },\n    searchInput: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst TableQuestione = props => {\n  const { className, total, handlePageChange, handleRowsPerPageChange,\n      page, rowsPerPage, children, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div>\n        <div className={classes.root}>\n\n            <div className={classes.content}>\n                <Card\n                    className={clsx(classes.root, className)}>\n                    <CardContent className={classes.content}>\n                        <PerfectScrollbar>\n                            <Table>\n                                {children}\n                            </Table>\n\n                        </PerfectScrollbar>\n                    </CardContent>\n                    <CardActions className={classes.actions}>\n                        <TablePagination\n                            component=\"div\"\n                            count={total}\n                            onChangePage={handlePageChange}\n                            onChangeRowsPerPage={handleRowsPerPageChange}\n                            page={page}\n                            rowsPerPage={rowsPerPage}\n                            rowsPerPageOptions={[10]}\n                        />\n                    </CardActions>\n                </Card>\n            </div>\n        </div>\n\n    </div>\n  );\n};\n\nTableQuestione.propTypes = {\n    handlePageChange: PropTypes.func,\n    handleRowsPerPageChange: PropTypes.func,\n    rowsPerPages: PropTypes.func,\n    total: PropTypes.number,\n    className: PropTypes.string,\n    children: PropTypes.node,\n};\n\nexport default TableQuestione;\n","import axios from 'axios';\nimport {getToken, logout} from \"./auth\";\nimport React from \"react\";\nimport { toast } from 'react-toastify';\n\nconst api = axios.create({\n   baseURL: 'https://bancodequestoes.ifce.edu.br/api',\n  //baseURL: 'https://200.17.32.102/api',\n   //baseURL: 'http://127.0.0.1:8000/api',\n  /*headers: {\n    'Content-Type': 'application/json'\n  }*/\n});\n\napi.interceptors.request.use(async config=> {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\n\napi.interceptors.response.use(async response => {\n\n  return response;\n}, function (error) {\n  const { response: { data, status } } = error;\n\n  //verifica se o código de resposta é 401 (não autorizado ou 500 (erro interno no servidor)\n  if (status === 401) {\n    toast.error('Não autorizado.');\n    logout();\n    window.location.href = '/sign-in';\n    return false;\n  } else if (status === 500) {\n    toast.error('Erro interno no servidor da API.');\n    logout();\n    window.location.href = '/sign-in';\n    return false;\n  }\n  if(data) {\n    toast.error(data.message);\n  } else {\n    toast.error(error);\n  }\n\n\n});\n\nexport default api;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    IconButton,\n    MenuItem, Menu,\n    CardContent,\n    Typography,\n    CardActions,\n    Tooltip,\n    Collapse,\n    Paper,\n    Chip,\n    Switch, ListItem, ListItemText,\n    List,\n    Dialog, AppBar, Toolbar, Box\n} from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport {MoreVert, PlaylistAdd, ExpandMoreRounded, Edit} from '@material-ui/icons';\nimport {withRouter} from \"react-router-dom\";\nimport ReactHtmlParser from 'react-html-parser';\nimport api from \"../../services/api\";\nimport {DialogQuestione} from \"../index\";\nimport AssignmentTurnedIn from '@material-ui/icons/AssignmentTurnedIn';\nimport moment from \"moment\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 5,\n    marginBottom: 10,\n      marginRigth: 0,\n      marginLeft: 5,\n      width: '100%'\n  },\n    head: {\n        paddingBottom: 0,\n        paddingTop: 10\n    },\n    chipGreen:{\n      backgroundColor: '#4db6ac',\n      color: '#ffffff',\n        marginRight: 2\n    },\n    chipRed:{\n        backgroundColor: '#f44336',\n        color: '#ffffff',\n        marginRight: 2\n    },\n  spacer: {\n    flexGrow: 1\n  },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    paper: {\n        display: 'flex',\n        marginBottom: 10,\n        '& > *': {\n            margin: theme.spacing(2),\n        },\n    },\n    paperWrong: {\n        backgroundColor: '#ef9a9a',\n        color: '#212121',\n        margin: 3,\n        padding: 8\n    },\n    paperRight: {\n        backgroundColor: '#80cbc4',\n        color: '#212121',\n        margin: 3,\n        padding: 8\n    },\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n        fontWeight: 'bold',\n        color: '#ffffff'\n    },\n    labelRank: {\n      textAlign: 'right'\n    },\n    lineQuestion: {\n        marginLeft: 20,\n    },\n    colorLabelDifficulty: {\n        color: '#3f51b5',\n        fontSize: 16,\n        fontWeight: 'bold'\n    },\n    colorLabelDifficultyWithoutAnswer:{\n        color: '#f44336',\n        fontSize: 16,\n        fontWeight: 'bold'\n    }\n}));\n\nconst QuestionCard = props => {\n  const { className, history, question, setRefresh, refresh, id_evaluation, ...rest } = props;\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [expanded, setExpanded] = React.useState(false);\n    const [openDeleteQuestionEvaluation, setOpenDeleteQuestionEvaluation] = React.useState(false);\n    const [openDeleteQuestion, setOpenDeleteQuestion] = React.useState(false);\n    const [openEnableQuestion, setOpenEnableQuestion] = React.useState(false);\n    const [evaluations, setEvaluations] = React.useState([]);\n    const [rank, setRank] = React.useState(0);\n    const [qtRank, setQtRank] = React.useState(0);\n    //constante definirá nota de classificação para a questão\n    const [rankUserQuestion, setRankUserQuestion] = React.useState(0);\n\n  const classes = useStyles();\n\n    async function loadEvaluations(){\n        try {\n            let url = '/evaluation/choose';\n\n            const response = await api.get(url);\n            if(response.status == 200) {\n                setEvaluations(response.data);\n            }\n        } catch (error) {\n            setEvaluations([]);\n        }\n    }\n\n    async function loadRank(){\n        try {\n            let response = await api.get('/rank/by-user?fk_question_id='+question.id);\n            //verifica se usuário já classificou\n            let rank = 0;\n            if(response.status == 200) {\n                if (response.data.id) {\n                    rank = response.data.rank;\n                    setRankUserQuestion(response.data.rank);\n                }\n                if (rank > 0 || question.fk_user_id == localStorage.getItem(\"@Questione-id-user\")) {\n                    response = await api.get('/rank/by-question?fk_question_id=' + question.id);\n                    rank = response.data[0].avg;\n                    setQtRank(response.data[0].count);\n                }\n            }\n            setRank(rank);\n\n        } catch (error) {\n\n        }\n    }\n\n    async function modifyRank(rank){\n        setRank(rank);\n        try {\n            const fk_question_id = question.id;\n            const data = {\n                fk_question_id,\n                rank\n            }\n            let url = '/rank';\n\n            const response = await api.post(url, data);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                } else if(response.data.errors[0].rank){\n                    toast.error(response.data.errors[0].rank);\n                } if(response.data.errors[0].fk_question_id){\n                    toast.error(response.data.errors[0].fk_question_id);\n                }\n            } else {\n                toast.success('Classificação cadastrada.');\n            }\n        } catch (error) {\n            setEvaluations([]);\n        }\n    }\n\n   /* function loadRank(){\n\n        if(question.rank_avg.length !== 0){\n            setRank(question.rank_avg[0].rank_avg);\n        }\n        if(question.rank_by_user_active.length == 0 &&\n            question.fk_user_id !== localStorage.getItem(\"@Questione-id-user\")) {\n            setRank(0)\n        }\n        setQtRank(question.rank_count);\n    }*/\n\n    useEffect(() => {\n        loadRank();\n    }, [question, rank]);\n\n    useEffect(() => {\n\n    }, [rank]);\n\n    useEffect(() => {\n\n    }, [openDeleteQuestionEvaluation]);\n\n    useEffect(() => {\n        loadRank();\n        loadEvaluations();\n\n    }, []);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const onClickOpenDialogQEvaluation = () => {\n        setOpenDeleteQuestionEvaluation(true);\n    }\n\n    const onClickCloseDialogQEvaluation = () => {\n        setOpenDeleteQuestionEvaluation(false);\n    }\n\n    const onClickOpenDialogQuestion = () => {\n        setOpenDeleteQuestion(true);\n    }\n\n    const onClickCloseDialogQuestion = () => {\n        setOpenDeleteQuestion(false);\n    }\n\n    const onClickOpenDialogEnableQuestion = () => {\n        setOpenEnableQuestion(true);\n    }\n\n    const onClickCloseDialogEnableQuestion = () => {\n        setOpenEnableQuestion(false);\n    }\n\n    async function deleteQuestion(){\n        setOpenDeleteQuestion(false);\n        try {\n            let url = 'question/'+question.id;\n\n            const response = await api.delete(url);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Questão excluída.');\n                setRefresh(refresh+1);\n            }\n            handleClose();\n        } catch (error) {\n\n        }\n    }\n\n    async function deleteQuestionEvaluation() {\n        setOpenDeleteQuestionEvaluation(false);\n        try {\n            let url = 'evaluation/deletequestion/'+question.id+'+?fk_evaluation_id='+id_evaluation;\n            const fk_evaluation_id = id_evaluation;\n            const data = {\n                fk_evaluation_id\n            }\n            const response = await api.delete(url);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Questão excluída da avaliação.');\n                setRefresh(refresh+1);\n            }\n\n            handleClose();\n        } catch (error) {\n\n        }\n    }\n\n    const onEditQuestion = (id) => {\n        history.push('/question-details/' + id);\n    }\n\n    async function handleChangeValidated() {\n        if(question.validated == 1){\n            toast.error('Uma questão que já foi habilitada não pode ser desabilitada.');\n            return ;\n        }\n        try {\n            let url = 'question/validate/'+question.id;\n            const response = await api.put(url);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Questão habilitada.');\n                setRefresh(refresh+1);\n            }\n        } catch (error) {\n\n        }\n        setOpenEnableQuestion(false);\n    }\n\n    async function duplicateQuestion() {\n        try {\n            let url = 'question/duplicate/'+question.id;\n            const response = await api.post(url);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Questão duplicada.');\n                setRefresh(refresh+1);\n            }\n\n            handleClose();\n        } catch (error) {\n\n        }\n    }\n\n    const [openEvalationChoose, setOpenEvalationChoose] = React.useState(false);\n\n    const handleChooseEvaluation = () => {\n        if(question.fk_user_id !== parseInt(localStorage.getItem(\"@Questione-id-user\")) && rank == 0){\n            toast.error('Antes de aplicar a questão, você deve avaliá-la escolhendo de 1 a 5 estrelas.')\n            return;\n        }\n        setOpenEvalationChoose(true);\n    };\n\n    const handleChooseEvaluationExit = () => {\n        setOpenEvalationChoose(false);\n    }\n\n    async function handleListItemClick (evaluation) {\n        try {\n            let url = '/evaluation/addquestion';\n            const fk_question_id = question.id;\n            const fk_evaluation_id = evaluation.id;\n            const data = {\n                fk_question_id, fk_evaluation_id\n            }\n\n            const response = await api.post(url, data);\n\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Questão adicionada na avaliação.');\n            }\n        } catch (error) {\n\n        }\n\n        setOpenEvalationChoose(false);\n\n    }\n\n    const difficulty = (porc, totalCorrect) => {\n        if(totalCorrect < 20){\n            return \"\"\n        }\n        if (porc >= 0.86) {\n            return 'Muito Fácil'\n        } else if(porc >= 0.61 && porc <= 0.85){\n            return 'Fácil'\n        } else if(porc >= 0.41 && porc <= 0.60){\n            return 'Média'\n        } else if(porc >= 0.16 && porc <= 0.40){\n            return 'Difícil'\n        } else if(porc <= 0.15){\n            return 'Muito Difícil'\n        }\n        return '';\n    }\n\n  return (\n      <div className={classes.content}>\n            <Card\n              {...rest}\n              className={classes.root}>\n                <CardHeader\n                    avatar={\n                        <div>\n                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                                {\n                                    question.id < 10 ? 'Questão - 00000' + question.id :\n                                        question.id < 100 ? 'Questão - 0000' + question.id :\n                                            question.id < 1000 ? 'Questão - 000' + question.id :\n                                                question.id < 10000 ? 'Questão - 00' + question.id :\n                                                    question.id < 100000 ? 'Questão - 0' + question.id :\n                                                        question.id\n                                }\n                                { question.skill !== null && question.knowledge_objects[0] &&\n                                question.question_items.length >= 2 && question.course  !== null\n                                    ?\n                                    <Tooltip title=\"Esta questão é completa. Possui texto-base, enunciado,\n                                            pelo menos duas alternativas,\n                                            um curso associado, uma competência associada e pelo menos um\n                                            objeto de conhecimento associado.\">\n                                        <AssignmentTurnedIn\n                                            color=\"secondary\"\n                                            fontSize=\"small\"/>\n\n                                    </Tooltip>\n                                    :\n                                    null }\n                            </Typography>\n                            { question.course  !== null ?\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"h2\">\n                                {'Área de origem: '+question.course.description}\n                            </Typography> : null }\n                            <div>\n                                { question.fk_user_id == localStorage.getItem(\"@Questione-id-user\") ?\n                                    <Chip label=\"Inserida por você\" className={clsx(classes.chipGreen, className)} size=\"small\"/> : null}\n                                { question.validated == 1 ?\n                                    <Chip label=\"Ativa\" className={clsx(classes.chipGreen, className)} size=\"small\"/> :\n                                    <Chip label=\"Inativa\" className={clsx(classes.chipRed, className)} size=\"small\"/>}\n                            </div>\n                            <div>\n                                { question.difficulty.total_answers == 0 ?\n                                    <p className={clsx(classes.colorLabelDifficultyWithoutAnswer)}>\n                                        {\"Esta questão ainda não foi respondida em uma avaliação.\"}\n                                    </p>\n                                    :\n                                    <p className={clsx(classes.colorLabelDifficulty)}>\n                                        { question.difficulty.total_answers == 1 ?\n                                            \"Esta questão só foi respondida \"+question.difficulty.total_answers\n                                            +\" vez.\"\n                                            :\n                                            \"Das avaliações aplicadas, \"+Math.round(question.difficulty.porc_correct*100)+ \"% das \"\n                                            +\" respostas para esta questão foram corretas.\"}\n                                    </p>\n                                }\n                            </div>\n                            <div>\n                                { question.difficulty.total_answers > 20 ?\n                                    <p className={clsx(classes.colorLabelDifficulty)}>\n                                        {'Dificuldade: '+difficulty(question.difficulty.porc_correct,\n                                                    question.difficulty.total_answers)+'.'}\n                                    </p>\n                                    :\n                                    <p className={clsx(classes.colorLabelDifficultyWithoutAnswer)}>\n                                    {\"Não foi possível calcular a dificuldade.\"}\n                                    </p>\n                                }\n\n\n                            </div>\n\n\n                        </div>\n                    }\n                    action={\n                        <div>\n                            <Box display=\"flex\" justifyContent=\"flex-end\" p={1} m={1} bgcolor=\"background.paper\">\n                                { !id_evaluation && question.validated == 1 ?\n                                <Tooltip title=\"Aplicar questão em avaliação\">\n                                    <IconButton\n                                        className={classes.labelRank}\n                                        aria-label=\"copy\"\n                                        onClick={handleChooseEvaluation}>\n                                        <PlaylistAdd />\n                                    </IconButton>\n                                </Tooltip> : null }\n                                { question.validated == 0 && question.fk_user_id == localStorage.getItem(\"@Questione-id-user\") ?\n                                <Tooltip title=\"Habilite a questão para aplicações\">\n                                        <Switch\n                                            checked={question.validated}\n                                            onChange={onClickOpenDialogEnableQuestion}\n                                            color=\"primary\"\n                                            name=\"checkedB\"\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        />\n                                </Tooltip> : null }\n                                { question.fk_user_id == localStorage.getItem(\"@Questione-id-user\") ?\n                                    <Tooltip title=\"Editar Questão\">\n                                        <IconButton className={classes.labelRank}\n                                            aria-label=\"copy\"\n                                            onClick={() => onEditQuestion(question.id)}>\n                                            <Edit />\n                                        </IconButton>\n                                    </Tooltip> : null }\n                                <Tooltip title=\"Opções\">\n                                    <Box flexDirection=\"row\" alignSelf=\"flex-end\">\n                                        <IconButton className={classes.labelRank} aria-label=\"settings\"\n                                                    onClick={handleClick}>\n                                            <MoreVert />\n                                        </IconButton>\n                                    </Box>\n                                </Tooltip>\n                            </Box>\n                            <Box display=\"flex\" flexDirection=\"flex-end\" p={1} m={1}>\n                                <Tooltip title=\"Avaliação da questão\">\n                                    {parseInt(question.fk_user_id) != parseInt(localStorage.getItem(\"@Questione-id-user\")) && parseInt(rank) == 0 ?\n                                        <div>\n                                            <Rating\n                                                name={question.id}\n                                                value={rank}\n                                                onChange={(event, newValue) => {\n                                                    modifyRank(newValue);\n                                                }}/>\n\n                                        </div>   :\n                                        <div>\n                                            <Rating\n                                                name=\"simple-controlled\"\n                                                value={rank}\n                                                precision={1} disabled/>\n                                            <Typography className={classes.labelRank} variant=\"caption\" color=\"textSecondary\" component=\"p\">\n                                                { qtRank < 2 ?  qtRank + ' Classificação.' : qtRank + ' Classificações.'}\n                                            </Typography>\n                                            <Typography className={classes.labelRank} variant=\"caption\" color=\"textSecondary\" component=\"p\">\n                                                { rank > 0 ?  'Média: ' + rank + ' estrela(s).' : null}\n                                            </Typography>\n                                            <Typography className={classes.labelRank} variant=\"caption\" color=\"textSecondary\" component=\"p\">\n                                                { rankUserQuestion > 0 ?  'Sua classificação: ' + rankUserQuestion + ' estrela(s).' : ''}\n                                            </Typography>\n                                        </div> }\n\n                                </Tooltip>\n                            </Box>\n                        </div>\n                    }/>\n                <CardContent>\n                    <div className={classes.lineQuestion}>\n\n                         { question.year !== '' && question.year !== null ?\n                            <div>\n                                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                    Ano:\n                                </Typography>\n                                <div> { question.year }\n                                    { question.fk_type_of_evaluation_id !== '' && question.fk_type_of_evaluation_id !== null ?\n                                              ' - '+question.type_of_evaluation.description\n                                        : null}\n                                </div>\n\n                                <br />\n                            </div>\n                            : null}\n                        { question.skill  !== null ?\n                            <div>\n                                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                    Competência:\n                                </Typography>\n                                <div> { question.skill.description } </div>\n                                <br />\n                            </div>\n                            : null}\n                        { question.knowledge_objects[0] ?\n                            <div>\n                                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                    Objeto(s) de conhecimento:\n                                </Typography>\n                                {question.knowledge_objects.map(item => (\n                                    <div> { ReactHtmlParser (item.description) } </div>\n                                ))}\n                                <br />\n                            </div>\n                            : null}\n\n                        { question.keywords[0] ?\n                            <div>\n                                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                    Palavra(s)-chave:\n                                </Typography>\n                                {question.keywords.map(item => (\n                                      ReactHtmlParser (item.keyword) + '; '\n                                ))}\n                                <br /> <br />\n                            </div>\n                            : null}\n\n\n\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Texto base:\n                        </Typography>\n                        <br />\n                        <div> { ReactHtmlParser (question.base_text) } </div>\n                    </div>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Tooltip title=\"Expandir a questão\">\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\">\n                            <ExpandMoreRounded />\n                        </IconButton>\n                    </Tooltip>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent className={classes.lineQuestion}>\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Enunciado:\n                        </Typography>\n                        <br />\n                        <div> { ReactHtmlParser (question.stem) } </div>\n                        <br />\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Alternativas:\n                        </Typography>\n                        <br />\n                        {question.question_items.map(item => (\n                            item.correct_item == 1 ?\n                                <Paper className={clsx(classes.paper, classes.paperRight)} elevation={3} variant=\"outlined\"> { ReactHtmlParser (item.description)  }</Paper>\n                                : <Paper className={clsx(classes.paper, classes.paperWrong)} variant=\"outlined\"> { ReactHtmlParser (item.description) } </Paper>\n                        ))}\n\n                    </CardContent>\n                </Collapse>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}>\n                    { !id_evaluation ? <MenuItem onClick={duplicateQuestion}>Duplicar</MenuItem> : null }\n                    {/* exclui de questão de avaliação */}\n                    { id_evaluation ? <MenuItem onClick={onClickOpenDialogQEvaluation}>Excluir da Avaliação</MenuItem> : null }\n                    {/* exclui de questão */}\n                    { !id_evaluation && question.validated == 0\n                            && question.fk_user_id == localStorage.getItem(\"@Questione-id-user\")\n                        ? <MenuItem onClick={onClickOpenDialogQuestion}>Excluir</MenuItem> : null }\n                </Menu>\n                <DialogQuestione handleClose={onClickCloseDialogQEvaluation}\n                                 open={openDeleteQuestionEvaluation}\n                                 onClickAgree={deleteQuestionEvaluation}\n                                 onClickDisagree={onClickCloseDialogQEvaluation}\n                                 mesage={'Deseja excluir a questão selecionada da avaliação?'}\n                                 title={'Excluir Questão da Avaliaçao'}/>\n                <DialogQuestione handleClose={onClickCloseDialogQuestion}\n                                 open={openDeleteQuestion}\n                                 onClickAgree={deleteQuestion}\n                                 onClickDisagree={onClickCloseDialogQuestion}\n                                 mesage={'Deseja excluir a questão selecionada?'}\n                                 title={'Excluir Questão'}/>\n                <DialogQuestione handleClose={onClickCloseDialogEnableQuestion}\n                                 open={openEnableQuestion}\n                                 onClickAgree={handleChangeValidated}\n                                 onClickDisagree={onClickCloseDialogEnableQuestion}\n                                 mesage={'Depois de habilitada, a questão não poderá ser deletada e não poderá sofrer mudanças no texto base, enunciado e alternativas. Deseja habilitar?'}\n                                 title={'Habilitar Questão'}/>\n                {/* Dialog de escolha da avaliação */}\n                <Dialog fullScreen onClose={handleChooseEvaluationExit} aria-labelledby=\"simple-dialog-title\" open={openEvalationChoose}>\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleChooseEvaluationExit} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h5\" className={classes.title}>\n                                Selecione a avaliação para aplicar a questão\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <List>\n                        {evaluations.map((evaluation) => (\n                            <ListItem button onClick={() => handleListItemClick(evaluation)} key={evaluation.id}>\n                                <ListItemText primary={\"Descrição: \"+evaluation.description}\n                                              secondary={\"Criada em: \"+  moment(evaluation.created_at).format('DD/MM/YYYY')}/>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Dialog>\n\n            </Card>\n      </div>\n  );\n};\n\nQuestionCard.propTypes = {\n    className: PropTypes.string,\n    question: PropTypes.object,\n    id_evaluation: PropTypes.object,\n    evaluations: PropTypes.object,\n    history: PropTypes.object,\n    setRefresh: PropTypes.func,\n    refresh: PropTypes.number,\n\n};\n\nexport default withRouter(QuestionCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4),\n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n        <div className={classes.logoImage}>\n            <img\n                alt=\"Logo\"\n                src=\"/images/leds.png\" className=\"leds\"/>\n            <img\n                alt=\"Logo\"\n                src=\"/images/gipea.png\" style={{marginLeft: '15px'}} className=\"gipea\"/>\n\n            <Link\n                component=\"a\"\n                href=\"https://www.ifce.edu.br/\"\n                target=\"_blank\">\n                <img\n                    alt=\"Logo\"\n                    src=\"/images/ifce.png\" style={{marginLeft: '15px'}}/>\n            </Link>\n\n            <Link\n                component=\"a\"\n                href=\"https://www.great.ufc.br/\"\n                target=\"_blank\">\n                <img\n                    alt=\"Logo\"\n                    src=\"/images/great.png\" style={{marginLeft: '15px', maxHeight: '35px' }}/>\n            </Link>\n        </div>\n      <Typography variant=\"body1\">\n        Desenvolvido com recursos do Instituto Federal de Educação, Ciência e Tecnologia do Ceará.\n          &copy;{' '}\n          <Link\n              component=\"a\"\n              href=\"https://www.ifce.edu.br/\"\n              target=\"_blank\">\n              IFCE\n          </Link>\n          . 2021\n      </Typography>\n        <Typography variant=\"body1\">\n            Para saber mais informações sobre o Questione\n            {' '}\n            <Link\n                component=\"a\"\n                href=\"https://docs.google.com/document/d/1TJC9SdqLpPEOb67vN8TKRxgTg33KVC9_L6CoKRYmt4A/edit?usp=sharing\"\n                target=\"_blank\">\n                clique aqui\n            </Link>\n            {' '}ou assista as videoaulas {' '}\n            <Link\n                component=\"a\"\n                href=\"https://www.youtube.com/playlist?list=PL0ZUkjE-wwutUN4Xebv7VSn870Qp82mQQ\"\n                target=\"_blank\">\n                clicando aqui\n            </Link>\n            .\n        </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft =\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight =\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom =\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nexport default {\n  draw\n};\n","export default (name = '') =>\n  name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n","import React, {useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {Avatar, Grid, Link, Tooltip, Typography, Zoom} from '@material-ui/core';\nimport {getInitials} from \"../../../../../../helpers\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Chip from '@material-ui/core/Chip';\nimport PlayCircleOutline from '@material-ui/icons/PlayCircleOutline';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n    },\n    avatar: {\n    width: 60,\n    height: 60\n    },\n    name: {\n    marginTop: theme.spacing(1)\n    },\n    tour: {\n        backgroundColor: '#5DE2A5',\n        display: 'block',\n        margin: '8px',\n        padding: '0 4px',\n        textAlign: 'center',\n        color: '#fff',\n        borderRadius: 4\n    }\n}));\n\nconst Profile = props => {\n  const { className, openTour, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: localStorage.getItem(\"@Questione-name-user\"),\n    avatar: '/images/avatars/avatar_11.png',\n    email: localStorage.getItem('@Questione-email-user'),\n    level: localStorage.getItem('@Questione-acess-level-user')===\"1\"\n        ? \"Administrador\" : localStorage.getItem('@Questione-acess-level-user')===\"2\"\n           ? \"Professor(a)\" : \"Usuário\"\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n        <Avatar\n            className={classes.avatar}\n            src={user.avatar}>\n            {getInitials(user.name)}\n        </Avatar>\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\">\n          <Typography\n            className={classes.name}\n            variant=\"body2\">\n            {user.name}\n          </Typography>\n        </Grid>\n      <Typography variant=\"body2\">{user.email}</Typography>\n      <Typography variant=\"body2\">{user.level}</Typography>\n        <Tooltip TransitionComponent={Zoom} placement=\"top\"\n                 title=\"Você pode modificar o seu nome ou solicitar acesso para contribuir com alguma área, clicando aqui.\">\n          <Typography\n              variant=\"body2\">\n                Atualize seu Perfil {' '}\n                <Link\n                    component={RouterLink}\n                    to=\"/account\"\n                    variant=\"body2\" className=\"update-profile\">\n                  clicando aqui.\n                </Link>\n          </Typography>\n        </Tooltip>\n        { localStorage.getItem(\"@Questione-acess-level-user\") != 1 ?\n        <Chip\n            className=\"tour-questione\"\n            size=\"small\"\n            label=\"Tour Questione\"\n            clickable\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={openTour}\n            onDelete={openTour}\n            deleteIcon={<PlayCircleOutline />}\n            style={{marginTop: '5px'}}\n        /> : null }\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n    openTour: PropTypes.func,\n};\n\nexport default Profile;\n","import React, {forwardRef, useState} from 'react';\nimport {NavLink as RouterLink, useHistory} from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {List, ListItem, Button, colors} from '@material-ui/core';\nimport {logout} from \"../../../../../../services/auth\";\nimport ExitToApp from '@material-ui/icons/ExitToApp';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\n\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [isTourOpen, setIsTourOpen] = useState(true);\n\n  const history = useHistory();\n\n  async function handleLogout(event) {\n    event.preventDefault();\n\n    logout();\n    history.push('/');\n  }\n\n  return (\n      <div>\n        <List\n          {...rest}\n          className={clsx(classes.root, className)}>\n          {pages.map(page => (\n              <div className={page.className}>\n                <ListItem\n                  className={classes.item}\n                  disableGutters\n                  key={page.title}>\n                  <Button\n                    activeClassName={classes.active}\n                    className={classes.button}\n                    component={CustomRouterLink}\n                    to={page.href}>\n                    <div className={classes.icon}>{page.icon}</div>\n                    {page.title}\n                  </Button>\n                </ListItem>\n              </div>\n          ))}\n          <div className=\"exit\">\n            <ListItem\n                className={classes.item}\n                disableGutters\n                key=\"btExit\">\n              <Button\n                  activeClassName={classes.active}\n                  className={classes.button}\n                  onClick={handleLogout}>\n                <div className={classes.icon}><ExitToApp /></div>\n                Sair\n              </Button>\n            </ListItem>\n          </div>\n        </List>\n      </div>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired,\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: colors.grey[50]\n  },\n  media: {\n    paddingTop: theme.spacing(2),\n    height: 80,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    padding: theme.spacing(1, 2),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst UpgradePlan = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.media}>\n        <img\n          alt=\"Upgrade to PRO\"\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h6\"\n        >\n          Upgrade to PRO\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to Devias Kit PRO and get even more components\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component=\"a\"\n          href=\"https://devias.io/products/devias-kit-pro\"\n          variant=\"contained\"\n        >\n          Upgrade\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUpgradePlan.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UpgradePlan;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ClassIcon from '@material-ui/icons/Class';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\n// import PeopleIcon from '@material-ui/icons/People';\nimport { Note, Ballot, EmojiObjects, AccountBox, Assignment, Assessment } from '@material-ui/icons';\n\nimport { Profile, SidebarNavAdm } from './components';\n// import {logout} from \"../../../../services/auth\";\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    marginTop: '20px',\n    paddingLeft: '8px',\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, history, openTour, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const pagesAdm = [\n    {\n      title: 'Cursos',\n      href: '/courses',\n      icon: <DashboardIcon />\n    },\n    {\n      title: 'Tipos de avaliação',\n      href: '/type-of-evaluation',\n      icon: <ClassIcon />\n    },\n    {\n      title: 'Competências',\n      href: '/skills',\n      icon: <Note />\n    },\n    {\n      title: 'Obj. Conhecimento',\n      href: '/objects',\n      icon: <EmojiObjects />\n    },\n    {\n      title: 'Usuários',\n      href: '/users',\n      icon: <AccountBox />\n    },\n  ];\n\n  const pagesProfessor = [\n    {\n      title: 'Questões',\n      href: '/questions',\n      icon: <QuestionAnswerIcon />,\n      className: 'question-professor',\n    },\n    {\n      title: 'Avaliações',\n      href: '/evaluations',\n      icon: <Ballot />,\n      className: 'evaluation-professor',\n    },\n    // {\n    //   title: 'Aplicações',\n    //   href: '/applications-evaluation',\n    //   icon: <Assignment />,\n    //   className: 'applications-professor',\n    // },\n    {\n      title: 'Pratique',\n      href: '/evaluation-practice',\n      icon: <ExtensionIcon />,\n      className: 'practice',\n    },\n    {\n      title: 'Avaliações respondidas',\n      href: '/student/result-evaluations',\n      icon: <Assessment />,\n      className: 'result-evaluations',\n    },\n  ];\n\n  const pagesUser = [\n    {\n      title: 'Pratique',\n      href: '/evaluation-practice',\n      icon: <ExtensionIcon />,\n      className: 'practice',\n    },\n    {\n      title: 'Avaliações respondidas',\n      href: '/student/result-evaluations',\n      icon: <Assessment />,\n      className: 'result-evaluations',\n    },\n  ];\n\n  function handlePage(event) {\n    const level_user = localStorage.getItem(\"@Questione-acess-level-user\");\n    if(level_user == 1){\n      return pagesAdm;\n    } else if(level_user == 2){\n      return pagesProfessor;\n    }\n    return pagesUser;\n  }\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}>\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}>\n        <Profile openTour={openTour}/>\n        <Divider className={classes.divider} />\n        <SidebarNavAdm\n            className={classes.nav}\n            pages={handlePage()}\n        />\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  openTour: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default withRouter(Sidebar);\n","import React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InputIcon from '@material-ui/icons/Input';\nimport { logout } from \"../../../../services/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none',\n    // backgroundColor: window.location.pathname.replace('/', '') === 'evaluation-practice' ? '#00e676' : '#3a7cf7',\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const history = useHistory();\n\n  const [background, setBackground] = useState('#3a7cf7');\n\n  useEffect(() => {\n    if (window.location.pathname.indexOf('/evaluation-practice') !== -1) {\n      setBackground('#4a148c');\n    } else {\n      setBackground('#3a7cf7');\n    }\n  }, [window.location.pathname]);\n\n  const { className, onSidebarOpen, ...rest } = props;\n\n  const classes = useStyles();\n\n  async function handleLogout(event) {\n    event.preventDefault();\n\n    logout();\n    history.push('/sign-in');\n  }\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      style={{ background }}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logo.png\"\n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        {/*} <Hidden mdDown>\n            <IconButton\n              className={classes.signOutButton}\n              color=\"inherit\"\n              onClick={handleLogout}>\n              <InputIcon />\n            </IconButton>\n        </Hidden>*/}\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onSidebarOpen}>\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func,\n  history: PropTypes.object\n};\n\nexport default Topbar;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport Tour from 'reactour';\n\nimport { Sidebar, Topbar, Footer } from './components';\nimport {login, TOKEN_KEY, updateShowTour} from \"../../services/auth\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%',\n  }\n}));\n\nconst Main = props => {\n    const { children } = props;\n\n    const [isTourOpen, setIsTourOpen] =\n                useState(localStorage.getItem('@Questione-acess-show-tour') == 1);\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n    });\n\n    const [openSidebar, setOpenSidebar] = useState(false);\n\n    const handleSidebarOpen = () => {\n        setOpenSidebar(true);\n    };\n\n    const handleSidebarClose = () => {\n        setOpenSidebar(false);\n    };\n\n    useEffect(() => {\n\n    }, []);\n\n    const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n    async function setShowTourFalseAPI() {\n        try {\n            const response = await api.post('all/set-show-tour-false');\n\n        } catch (error) {\n\n        }\n    }\n\n    const closeTour = () => {\n        setIsTourOpen(false);\n        if(localStorage.getItem('@Questione-acess-show-tour') == 1){\n            setShowTourFalseAPI();\n        }\n        updateShowTour(0);\n    }\n\n    const openTour = () => {\n        setIsTourOpen(true);\n    }\n\n    return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}>\n        <Tour\n            steps={ localStorage.getItem(\"@Questione-acess-level-user\") == 2 ? stepsProfessor :\n                        localStorage.getItem(\"@Questione-acess-level-user\") == 0 ? stepsStudent : null}\n            isOpen={isTourOpen}\n            onRequestClose={closeTour} />\n      <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n        openTour={openTour}\n      />\n      <main className={classes.content}>\n        {children}\n      </main>\n      <Footer />\n\n    </div>\n    );\n};\n\nconst stepsGeneral = [\n    {\n        selector: '.practice',\n        content: 'O módulo Pratique permite que o usuário gere avaliações por área e competência para testar seus conhecimentos.',\n    },\n    {\n        selector: '.start-evaluation-card',\n        content: 'Para responder uma avaliação é necessário que você informe o código da aplicação neste card fornecido por um professor.' +\n            ' Uma aplicação só poderá ser respondida se ela estiver ativa e não estiver arquivada.',\n    },\n    {\n        selector: '.total-question',\n        content: 'Nest card é possível visualizar o total de questões cadastradas no sistema Questione.',\n    },\n    {\n        selector: '.total-student',\n        content: 'Nest card é possível visualizar o total de estudantes cadastrados no sistema Questione.',\n    },\n    {\n        selector: '.total-professor',\n        content: 'Nest card é possível visualizar o total de professores cadastrados no sistema Questione.',\n    },\n    {\n        selector: '.total-evaluation',\n        content: 'Nest card é possível visualizar o total de avaliações cadastradas no sistema Questione.',\n    },\n    {\n        selector: '.leds',\n        content: 'O projeto Laboratório de Engenharia e Desenvolvimento de Software - LEDS, é um projeto de cunho educacional ' +\n            'que buscar fornecer um espaço para a prática e o aprendizado de engenharia de software e desenvolvimento de ' +\n            'sistemas (web, desktop e mobile) para os alunos dos cursos de Bacharelado em Sistemas de Informação, ' +\n            'Integrado de Informática e Tecnologia Mecatrônica Industrial. O LEDS funciona no Instituto Federal do Ceará - campus Cedro.',\n    },\n    {\n        selector: '.gipea',\n        content: 'O Grupo Interdisciplinar de Pesquisa em Ensino e Aprendizagem, atua nas linhas de pesquisa: Políticas, práticas ' +\n            'institucionais, inclusão e aprendizagem de pessoas com necessidades especiais; Práticas de ensino e aprendizagem em Ciências e ' +\n            'Matemática; Tecnologia da informação e comunicação; e Trabalho docente, formação de professores e políticas educacionais. O GIPEA ' +\n            'possui suas atividades no Instituto Federal do Ceará - campus Cedro.',\n    },\n    {\n        selector: '.update-profile',\n        content: 'Ao clicar em atualização de perfil, você poderá alterar seu nome e caso seja professor de qualquer Institução ' +\n            ' de ensino, poderá solicitar acesso ao banco de questões de um ou mais cursos. Para solicitar acesso aos cursos, basta enviar um comprovante' +\n            ' que comprove que você é professor de um determinado curso.',\n    },\n    {\n        selector: '.tour-questione',\n        content: 'Clique aqui para rever o tour quantas vezes quiser.',\n    },\n    {\n        selector: '.exit',\n        content: 'Clique aqui para sair do sistema.',\n    }\n];\n\n\nconst stepsProfessor = [\n    {\n        selector: '.question-professor',\n        content: 'Na opção Questões, você poderá inserir, editar, excluir, duplicar e classificar suas questões.' +\n            ' Você também poderá buscar suas questões ou questões de outros usuários já validadas. A busca pode ser' +\n            ' realizada por curso, competência, objetos de conhecimento ou palavra-chave. É através desta opção que você poderá' +\n            ' escolher quais questões irão compor determinada avaliação. Você só poderá aplicar em uma avaliação, questões que já foram validadas. Depois ' +\n            ' de validar uma questão, o sistema não irá mais permitir que você edite o texto-base, enunciado e alternativas.',\n    },\n    {\n        selector: '.evaluation-professor',\n        content: 'Na opção Avaliações, você poderá criar, arquivar ou excluir avaliações. Uma avaliação só poderá ser excluída caso não tenha' +\n            ' nenhuma aplicação cadastrada. As questões só poderão ser adicionadas à avaliação pelo menu Questões. Mas as questões da avaliação podem' +\n            ' ser visualizadas na opção editar avaliação. Aqui também é possível cadastrar novas aplicações para avaliações. Uma mesma' +\n            ' avaliação poderá ser aplicada várias vezes.'+\n            ' Na opção Aplicações, você poderá editar e ativar aplicações de uma avaliação. Uma aplicação só poderá ser respondida pelos' +\n            ' estudantes caso esteja Ativa. Você também poderá escolher opções para sua aplicação, como: se as questões da prova serão distribuída de forma' +\n            ' randômica; se permite mostrar o gabarito para os estudantes após a finalização; configurar uma data e hora para iniciar a avaliação; ' +\n            'e configurar a quantidade de horas de duração da avaliação.' +\n            ' Aqui também é possível visualizar os resultados da aplicação por aluno, por questão,' +\n            ' por competência e objeto de conhecimento.',\n    },\n    /*{\n        selector: '.applications-professor',\n        content: 'Na opção Aplicações, você poderá editar e ativar aplicações de uma avaliação. Uma aplicação só poderá ser respondida pelos' +\n            ' estudantes caso esteja Ativa. Você também poderá escolher opções para sua aplicação, como: se as questões da prova serão distribuída de forma' +\n            ' randômica; se permite mostrar o gabarito para os estudantes após a finalização; configurar uma data e hora para iniciar a avaliação; ' +\n            'e configurar a quantidade de horas de duração da avaliação.' +\n            ' Aqui também é possível visualizar os resultados da aplicação por aluno, por questão,' +\n            ' por competência e objeto de conhecimento.',\n    },*/\n    {\n        selector: '.result-evaluations',\n        content: 'Na opção Avaliações respondidas, você poderá visualizar o gabarito das avaliações que você respondeu. O conteúdo da questão' +\n            ' não é apresentado.',\n    },\n    ...stepsGeneral,\n];\n\nconst stepsStudent = [\n    {\n        selector: '.result-evaluations',\n        content: 'Na opção Avaliações respondidas, você poderá visualizar o gabarito das avaliações que você respondeu. O conteúdo da questão' +\n            ' não é apresentado.',\n    },\n    ...stepsGeneral,\n];\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none',\n    backgroundColor: '#3a7cf7',\n  }\n}));\n\nconst Topbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logo.png\"\n          />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid, Link,\n  Typography\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%',\n    width: '100%',\n    flexGrow: 1,\n    flexDirection: 'row',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.black\n  },\n  quoteContainer: {\n\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.black,\n    fontWeight: 1000,\n    paddingBottom: 15\n  },\n  quoteSubText: {\n    color: theme.palette.black,\n    fontWeight: 200\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    paddingTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentBody: {\n    height: '100%',\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst PageNotFound = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n          className={classes.grid}\n          container>\n        <Grid\n            className={classes.quoteContainer}\n            item\n            lg={5}>\n          <div className={classes.content}>\n            <div className={classes.contentBody}>\n              <div className={classes.logoImage}>\n                <img\n                    alt=\"Logo\"\n                    src=\"/images/logo_black_blue_270.png\"/>\n              </div>\n            </div>\n          </div>\n\n        </Grid>\n        <Grid\n            className={classes.quoteContainer}\n            item\n            lg={5}>\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              <Typography\n                  className={classes.quoteText}\n                  variant=\"h1\">\n                Página não encontrada.\n              </Typography>\n              <Typography\n                  className={classes.quoteSubText}\n                  variant=\"h4\">\n                A página que você está procurando não foi encontrada.\n              </Typography>\n              <div className={classes.person}>\n                <Typography\n                    className={classes.name}\n                    variant=\"body1\">\n                 Vá para a{' '}\n                  <Link\n                      component={RouterLink}\n                      to=\"/home\"\n                      variant=\"h6\">\n                    Home.\n                  </Link>\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nPageNotFound.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(PageNotFound);\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid, Link,\n  Typography\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%',\n    width: '100%',\n    flexGrow: 1,\n    flexDirection: 'row',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.black\n  },\n  quoteContainer: {\n\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.black,\n    fontWeight: 1000,\n    paddingBottom: 15\n  },\n  quoteSubText: {\n    color: theme.palette.black,\n    fontWeight: 200\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    paddingTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentBody: {\n    height: '100%',\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst Unauthorized = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n          className={classes.grid}\n          container>\n        <Grid\n            className={classes.quoteContainer}\n            item\n            lg={5}>\n          <div className={classes.content}>\n            <div className={classes.contentBody}>\n              <div className={classes.logoImage}>\n                <img\n                    alt=\"Logo\"\n                    src=\"/images/logo_black_blue_270.png\"/>\n              </div>\n            </div>\n          </div>\n\n        </Grid>\n        <Grid\n            className={classes.quoteContainer}\n            item\n            lg={5}>\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              <Typography\n                  className={classes.quoteText}\n                  variant=\"h1\">\n                Não permitido.\n              </Typography>\n              <Typography\n                  className={classes.quoteSubText}\n                  variant=\"h4\">\n                Você não tem acesso a este recurso.\n              </Typography>\n              <div className={classes.person}>\n                <Typography\n                    className={classes.name}\n                    variant=\"body1\">\n                 Vá para a{' '}\n                  <Link\n                      component={RouterLink}\n                      to=\"/home\"\n                      variant=\"h6\">\n                    Home.\n                  </Link>\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nUnauthorized.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(Unauthorized);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n  IconButton, Zoom, Tooltip\n} from '@material-ui/core';\nimport api from \"../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport {logout, updateNameUser} from \"../../services/auth\";\n\nconst schema = {\n  name: {\n    presence: { allowEmpty: false, message: 'O nome é obrigatório.' },\n    length: {\n      minimum: 8,\n      maximum: 50,\n      message: 'O nome deve conter no mínimo 8 e no máximo 50 caracteres.'\n    }\n  },\n  email: {\n    presence: { allowEmpty: false, message: 'O e-mail é obrigatório.' },\n    email: true,\n    length: {\n      maximum: 64,\n      message: 'O e-mail deve conter no máximo 64 caracteres.'\n    }\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const { className, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function saveDetails(){\n    try {\n      const name = formState.values.name;\n      const data = {\n         name\n      }\n      const response = await api.put('all/update-profile-user', data);\n      if (response.status === 200) {\n        updateNameUser(response.data[0].name);\n        toast.success('Perfil de '+name+' atualizado.');\n        history.push('/home');\n      } else if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].name){\n          toast.error(response.data.errors[0].name);\n        }\n      }\n\n    } catch (error) {\n      logout();\n      history.push('/');\n\n    }\n  }\n\n  useEffect(() => {\n    setFormState(formState => ({\n      values: {\n        'name': localStorage.getItem(\"@Questione-name-user\"),\n        'email' : localStorage.getItem(\"@Questione-email-user\"),\n        'id': localStorage.getItem(\"@Questione-id-user\")\n      },\n      touched: {\n        ...formState.touched,\n      }\n    }));\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course==0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const onRequest = () => {\n    history.push('/requests');\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"Atualize seus dados.\"\n          title=\"Perfil do Usuário\"/>\n        <Divider />\n        <CardContent>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('name')}\n                helperText={\n                  hasError('name') ? formState.errors.name[0] : null\n                }\n                label=\"Nome\"\n                margin=\"dense\"\n                name=\"name\"\n                onChange={handleChange}\n                value={formState.values.name || ''}\n                variant=\"outlined\"\n              />\n            </Grid>\n          <Grid\n              item\n              md={6}\n              xs={12}>\n            <TextField\n                fullWidth\n                error={hasError('email')}\n                helperText={\n                  'O e-mail não pode ser alterado.'\n                }\n                label=\"E-mail\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                value={formState.values.email || ''}\n                variant=\"filled\"\n                InputProps={{\n                  readOnly: true,\n                }}/>\n          </Grid>\n        </CardContent>\n\n        <Divider />\n        <CardActions>\n          <Grid\n              container\n              justify=\"space-between\">\n            <Grid\n                className={classes.statsItem}\n                item>\n              <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={saveDetails}\n                  disabled={!formState.isValid}>\n                Salvar\n              </Button>\n            </Grid>\n            <Grid\n                className={classes.statsItem}\n                item>\n              <Tooltip TransitionComponent={Zoom} placement=\"top\"\n                       title=\"Você pode solicitar acesso a uma determinada área para contribuir com novas questões, ou aplicar avaliações.\">\n                <Button color=\"primary\" onClick={onRequest}>\n                  Solicitar Acesso para áreas\n                </Button>\n              </Tooltip>\n            </Grid>\n\n          </Grid>\n\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AccountDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  comboboxSearch: {\n    width: '40%'\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst UserRequestCourseToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickNewRequest = () => {\n    history.push('/new-request');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Solicitações de Áreas'}</Typography>\n        <span className={classes.spacer} />\n        <Button className={classes.exportButton}\n                onClick={onClickNewRequest} variant=\"contained\"\n                color=\"primary\">Nova Solicitação</Button>\n      </div>\n      <div className={classes.row}>\n\n      </div>\n    </div>\n  );\n};\n\nUserRequestCourseToolbar.propTypes = {\n  className: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(UserRequestCourseToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination\n} from '@material-ui/core';\nimport moment from 'moment';\nimport api from '../../../services/api';\nimport { StatusBullet } from '../../../components';\nimport { toast } from 'react-toastify';\nimport RequestUsersToolbar from \"./components/UserRequestCourseToolbar\";\nimport PropTypes from \"prop-types\";\n\nconst statusColors = {\n  '1': 'success',\n  '0': 'info',\n  '-1': 'danger'\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n}));\n\nconst UserRequestCourseTable = props => {\n  const { className, history } = props;\n\n  const [couserProfessor, setCourseProfessor] = useState([]);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState(0);\n\n  async function loadCourseProfessor(page, situation){\n    try {\n      let url = 'course-professor/user?page='+page;\n      const response = await api.get(url);\n      if(response.status == 200) {\n        setTotal(response.data.total);\n        setCourseProfessor(response.data.data);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadCourseProfessor(1, searchText);\n  }, []);\n\n  const handlePageChange = (event, page) => {\n    loadCourseProfessor(page+1, searchText)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <RequestUsersToolbar />\n      <div className={classes.content}>\n        <Card\n            className={clsx(classes.root, className)}>\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.headTable}>Área</TableCell>\n                      <TableCell className={classes.headTable}>Dt. Solicitação</TableCell>\n                      <TableCell className={classes.headTable}>Situação</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {couserProfessor.map(cp => (\n                        <TableRow\n                            className={classes.tableRow}\n                            hover\n                            key={cp.id}>\n                          <TableCell>{cp.course.description}</TableCell>\n                          <TableCell>{moment(cp.created_at).format('DD/MM/YYYY')}</TableCell>\n                          <TableCell className={classes.row}>\n                            <div className={classes.statusContainer}>\n                              <StatusBullet\n                                  className={classes.status}\n                                  color={statusColors[cp.valid]}\n                                  size=\"sm\"\n                              />\n                              {cp.valid == 1 ? 'Aceito' :\n                                  cp.valid == -1 ? 'Recusado' : 'Aguardando'}\n                            </div>\n                          </TableCell>\n\n                        </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n            />\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nUserRequestCourseTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default UserRequestCourseTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton\n} from '@material-ui/core';\nimport api from \"../../../services/api\";\nimport { toast } from 'react-toastify';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport validate from \"validate.js\";\nimport Dropzone from 'react-dropzone-uploader';\nimport 'react-dropzone-uploader/dist/styles.css';\n\nconst schema = {\n  fk_course_id: {\n    presence: { allowEmpty: false, message: 'A área é obrigatório.' },\n    numericality: {\n      onlyInteger: true,\n      greaterThan: 0,\n      message: 'Escolha uma área.',\n    }\n  }\n};\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst UserRequestCourseDetails = props => {\n  const { className, history, ...rest } = props;\n  const [courses, setCourses] = useState([{'id': '0', 'description': '- Escolha uma área -'}]);\n  const [file, setFile] = useState(null);\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function loadCourses(){\n    try {\n      const response = await api.get('all/courses');\n      if(response.status == 200) {\n        setCourses([...courses, ...response.data]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function storeCourseProfessorDetails(){\n    if(!formState.values.fk_course_id){\n      toast.error('Informe a área.');\n      return ;\n    }\n\n    if(file == null){\n      toast.error('Selecione o comprovante.');\n      return ;\n    }\n    try {\n      const fk_course_id = formState.values.fk_course_id;\n      const formData = new FormData();\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      }\n      formData.append('fk_course_id', fk_course_id);\n      formData.append('receipt', file);\n\n      const response = await api.post('course-professor', formData, config);\n\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].valid){\n          toast.error(response.data.errors[0].valid);\n        }\n      } else {\n        toast.success('Solicitação cadastrada.');\n        history.push('/requests');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadCourses();\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course==0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const getUploadParams = () => {\n    return { url: 'https://httpbin.org/post' }\n  }\n\n  const handleChangeStatus = (event, { meta }, status) => {\n    if(status[0]) {\n      setFile(status[0].file);\n    }\n\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"Selecione abaixo a área que deseja ter permissão para contribuir com questões. O comprovante\n              deverá está no formato PDF. São exemplos de comprovantes: declaração assinada pela coordenação de curso,\n              portarias (NDE, Colegiado ou outras que comprovem a atuação como professor), diário de classe do sistema acadêmico,\n              ou outro documento que comprove que você é professor da área solicitada.\"\n          title=\"Solicitação para área\"/>\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                label=\"Área\"\n                margin=\"dense\"\n                name=\"fk_course_id\"\n                onChange={handleChange}\n                error={hasError('fk_course_id')}\n                helperText={\n                  hasError('fk_course_id') ? formState.errors.fk_course_id[0] : null\n                }\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={formState.values.fk_course_id}\n                variant=\"outlined\">\n                {courses.map(course => (\n                  <option\n                    key={course.id}\n                    value={course.id}>\n                    {course.description}\n                  </option>\n                ))}\n              </TextField>\n              <div>\n                <Dropzone\n                    getUploadParams={getUploadParams}\n                    onChangeStatus={handleChangeStatus}\n                    maxSizeBytes={3000000}\n                    submitButtonContent=\"Salvar\"\n                    maxFiles={1}\n                    inputContent=\"Arraste arquivos ou clique para procurar\"\n                    inputWithFilesContent=\"Adicionar Arquivo\"\n                    accept=\"application/pdf\"\n                    styles={{ dropzone: { minHeight: 100, maxHeight: 250 } }}\n                />\n\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={storeCourseProfessorDetails}>\n            Salvar\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nUserRequestCourseDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default UserRequestCourseDetails;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\nimport api from \"../../../../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.primary.dark\n  },\n  differenceValue: {\n    color: theme.palette.primary.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalQuestion = props => {\n  const { className, ...rest } = props;\n  const [total, setTotal] = useState(0);\n\n  const classes = useStyles();\n\n  async function load(){\n    try {\n      const response = await api.get('public/total-questions');\n      if(response.status == 200) {\n        setTotal(response.data);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              QUESTÕES\n            </Typography>\n            <Typography variant=\"h3\">{total}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <QuestionAnswer className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\">\n            Total de questões validadas.\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalQuestion.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalQuestion;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n  LinearProgress\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  progress: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst TasksProgress = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TASKS PROGRESS\n            </Typography>\n            <Typography variant=\"h3\">75.5%</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <LinearProgress\n          className={classes.progress}\n          value={75.5}\n          variant=\"determinate\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport Ballot from '@material-ui/icons/Ballot';\nimport api from \"../../../../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.white,\n    color: theme.palette.primary.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst TotalEvaluation = props => {\n  const { className, ...rest } = props;\n\n  const [total, setTotal] = useState(0);\n\n  const classes = useStyles();\n\n  async function load(){\n    try {\n      const response = await api.get('public/total-evaluations');\n      if(response.status == 200) {\n        setTotal(response.data);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"inherit\"\n              gutterBottom\n              variant=\"body2\">\n              AVALIAÇÕES\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"h3\">\n              {total}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <Ballot className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalEvaluation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalEvaluation;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleAlt';\nimport api from \"../../../../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalProfessor = props => {\n  const { className, ...rest } = props;\n\n  const [total, setTotal] = useState(0);\n\n  const classes = useStyles();\n\n  async function load(){\n    try {\n      const response = await api.get('public/total-professors');\n      if(response.status == 200) {\n        setTotal(response.data);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, []);\n\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              PROFESSORES\n            </Typography>\n            <Typography variant=\"h3\">{total}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\">\n            Total de professores cadastrados.\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfessor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfessor;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/EmojiPeople';\nimport api from \"../../../../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalStudent = props => {\n  const { className, ...rest } = props;\n\n  const [total, setTotal] = useState(0);\n\n  const classes = useStyles();\n\n  async function load(){\n    try {\n      const response = await api.get('public/total-students');\n      if(response.status == 200) {\n        setTotal(response.data);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              ESTUDANTES\n            </Typography>\n            <Typography variant=\"h3\">{total}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\">\n            Total de estudantes cadastrados.\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalStudent.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalStudent;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport {\n  TotalQuestion,\n  TotalStudent,\n  TotalProfessor,\n  TotalEvaluation,\n} from './components';\n\nimport { StartEvaluationCard } from './../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  gridStartEvaluation: {\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n          container\n          spacing={1}\n          className={classes.gridStartEvaluation}>\n        <Grid\n            item\n            xs={12}>\n          <StartEvaluationCard colorBox=\"#03a9f4\" className=\"start-evaluation-card\"/>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        spacing={4}>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}>\n          <TotalQuestion className=\"total-question\"/>\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}>\n          <TotalStudent className=\"total-student\"/>\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}>\n          <TotalProfessor className=\"total-professor\"/>\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}>\n          <TotalEvaluation className=\"total-evaluation\"/>\n        </Grid>\n        {/*<Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}>\n          <LatestSales />\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}>\n          <UsersByDevice />\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}>\n          <LatestProducts />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <LatestOrders />\n        </Grid>*/}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","export const QUESTION_SEARCH_TYPE = '@Questione-search-type';\nexport const QUESTION_SEARCH_ID = '@Questione-search-id';\nexport const QUESTION_SEARCH_COURSE = '@Questione-search-course';\nexport const QUESTION_SEARCH_SKILL = '@Questione-search-skill';\nexport const QUESTION_SEARCH_OBJECT = '@Questione-search-object';\nexport const QUESTION_SEARCH_KEYWORD = '@Questione-search-show-keyword';\nexport const QUESTION_SEARCH_PAGE = '@Questione-search-page';\n\nexport const searchQuestions = (type, id, course, skill, object, keyword) => {\n    localStorage.setItem(QUESTION_SEARCH_TYPE, type);\n    localStorage.setItem(QUESTION_SEARCH_ID, id);\n    localStorage.setItem(QUESTION_SEARCH_COURSE, course);\n    localStorage.setItem(QUESTION_SEARCH_SKILL, skill);\n    localStorage.setItem(QUESTION_SEARCH_OBJECT, object);\n    localStorage.setItem(QUESTION_SEARCH_KEYWORD, keyword);\n};\n\nexport const searchQuestionsPage = (page) => {\n    localStorage.setItem(QUESTION_SEARCH_PAGE, page);\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  TextField,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { login } from \"../../services/auth\";\nimport {searchQuestions, searchQuestionsPage} from \"../../services/seacrhQuestions\";\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'O e-mail é obrigatório.'  },\n    email: true,\n    length: {\n      maximum: 64,\n      message: 'O e-mail deve conter no máximo 64 caracteres.'\n    },\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'A senha é obrigatória.'  },\n    length: {\n\n    }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //backgroundColor: theme.palette.background.default,\n    height: '100%',\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    paddingTop: theme.spacing(3),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    justifyContent: 'center',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    fontWeight: 'bold'\n  },\n  socialButtons: {\n    marginTop: theme.spacing(3)\n  },\n  socialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  sugestion: {\n    marginTop: theme.spacing(2)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  signInButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignIn = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  async function handleSignIn(event) {\n    event.preventDefault();\n    try {\n      const email = formState.values.email;\n      const password = formState.values.password;\n\n      const data = {\n        email, password\n      };\n\n      const response = await api.post('login', data);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        searchQuestions('S', '', 0,\n            0, 0, '');\n        searchQuestionsPage(0);\n\n        login(response.data.token, response.data[0].name,\n                response.data[0].email, response.data[0].acess_level,\n                response.data[0].id, response.data[0].show_tour, response.data[0].add_external_question);\n\n        toast.info(response.data[0].name+', seja bem-vindo!');\n        history.push('/home');\n      }\n\n      history.push('/home');\n    } catch (error) {\n      alert('Erro de autenticação', error);\n    }\n  }\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.content}>\n        <div className={classes.contentBody}>\n          <form\n            className={classes.form}\n            onSubmit={handleSignIn}>\n            <div className={classes.logoImage}>\n              <img\n                   alt=\"Logo\"\n                   src=\"/images/logomarca.png\"/>\n            </div>\n            <Typography\n              className={classes.title}\n              variant=\"h4\">\n              Login\n            </Typography>\n            <TextField\n              className={classes.textField}\n              error={hasError('email')}\n              fullWidth\n              helperText={\n                hasError('email') ? formState.errors.email[0] : null\n              }\n              label=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              type=\"text\"\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Senha\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n              margin=\"normal\"\n            />\n            <Button\n              className={classes.signInButton}\n              color=\"primary\"\n              disabled={!formState.isValid}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\">\n              Entrar\n            </Button>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body1\">\n              Você não tem conta?{' '}\n              <Link\n                component={RouterLink}\n                to=\"/sign-up\"\n                variant=\"h6\">\n                Cadastre-se.\n              </Link>\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body1\">\n              Esqueceu sua senha?{' '}\n              <Link\n                component={RouterLink}\n                to=\"/redefine-password\"\n                variant=\"h6\">\n                Redefina aqui.\n              </Link>\n            </Typography>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignIn);\n","export const cpfMask = value => {\n    return value\n        .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\n        .replace(/(\\d{3})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n}\n\nexport default {\n    cpfMask\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  TextField,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { cpfMask } from './../../common/mask'\nimport { ToastContainer } from 'react-toastify';\n\nconst schema = {\n  name: {\n    presence: { allowEmpty: false, message: 'O nome é obrigatório.' },\n    length: {\n      minimum: 8,\n      maximum: 50,\n      message: 'O nome deve conter no mínimo 8 e no máximo 50 caracteres.'\n    }\n  },\n  email: {\n    presence: { allowEmpty: false, message: 'O e-mail é obrigatório.' },\n    email: true,\n    length: {\n      maximum: 64,\n      message: 'O e-mail deve conter no máximo 64 caracteres.'\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'A senha é obrigatória.' },\n    length: {\n      minimum: 6,\n      maximum: 10,\n      message: 'A senha deve conter no mínimo 6 e no máximo 10 caracteres.'\n    }\n  },\n  /*policy: {\n    presence: { allowEmpty: false, message: 'is required' },\n    checked: true\n  }*/\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    paddingTop: theme.spacing(3),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    fontWeight: 'bold'\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  policy: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  signUpButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignUp = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n            event.target.name === 'cpf'\n                ? formState.values.cpf = cpfMask(event.target.value)\n                : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n\n  };\n\n  async function handleSignUp(e){\n    e.preventDefault();\n    try {\n      const name = formState.values.name;\n      const cpf = formState.values.cpf;\n      const email = formState.values.email;\n      const password = formState.values.password;\n\n      const data = {\n        name, cpf, email, password\n      };\n\n      const response = await api.post('register', data);\n\n      if (response.status === 202) {\n\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n\n        if(response.data.errors[0].name){\n          toast.error(response.data.errors[0].name[0]);\n        }\n\n        if(response.data.errors[0].cpf){\n          toast.error(response.data.errors[0].cpf[0]);\n        }\n\n        if(response.data.errors[0].email){\n          toast.error(response.data.errors[0].email[0]);\n        }\n\n        if(response.data.errors[0].password){\n          toast.error(response.data.errors[0].password[0]);\n        }\n      } else {\n        toast.success(response.data[0].name+', cadastrado!');\n        history.push('/sign-in');\n      }\n    } catch (error) {\n\n    }\n  }\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.content}>\n        <div className={classes.contentBody}>\n          <form\n            className={classes.form}\n            onSubmit={handleSignUp}>\n            <div className={classes.logoImage}>\n              <img\n                  alt=\"Logo\"\n                  src=\"/images/logomarca.png\"/>\n            </div>\n            <Typography\n              className={classes.title}\n              variant=\"h5\">\n              Crie uma nova conta\n            </Typography>\n            <TextField\n              className={classes.textField}\n              error={hasError('name')}\n              fullWidth\n              helperText={\n                hasError('name') ? formState.errors.name[0] : null\n              }\n              label=\"Nome\"\n              name=\"name\"\n              onChange={handleChange}\n              type=\"text\"\n              value={formState.values.name || ''}\n              variant=\"outlined\"\n            />\n            {/* <TextField\n              className={classes.textField}\n              error={hasError('cpf')}\n              fullWidth\n              helperText={\n                hasError('cpf') ? formState.errors.cpf[0] : null\n              }\n              label=\"Cpf\"\n              name=\"cpf\"\n              onChange={handleChange}\n              type=\"text\"\n              value={formState.values.cpf || ''}\n              variant=\"outlined\"\n            /> */}\n            <TextField\n              className={classes.textField}\n              error={hasError('email')}\n              fullWidth\n              helperText={\n                hasError('email') ? formState.errors.email[0] : null\n              }\n              label=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              type=\"text\"\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Senha\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n            <Button\n              className={classes.signUpButton}\n              color=\"primary\"\n              disabled={!formState.isValid}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\">\n              Cadastre-se\n            </Button>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body1\">\n              Já tem uma conta?{' '}\n              <Link\n                component={RouterLink}\n                to=\"/sign-in\"\n                variant=\"h6\">\n                Login\n              </Link>\n            </Typography>\n          </form>\n        </div>\n      </div>\n      <ToastContainer autoClose={8000} position=\"bottom-center\"/>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignUp);\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  TextField,\n  Typography,\n  IconButton\n} from '@material-ui/core';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst schema = {\n  email: {\n    presence: {allowEmpty: false, message: 'O e-mail é obrigatório.'},\n    email: true,\n    length: {\n      maximum: 64,\n      message: 'O e-mail deve conter no máximo 64 caracteres.'\n    }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(2),\n\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    fontWeight: 'bold'\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  signInButton: {\n    margin: theme.spacing(2, 0)\n  },\n  logoImage: {\n    paddingTop: theme.spacing(3),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n}));\n\nconst RedefinePassword = props => {\n  const { history } = props;\n  const { id } = props.match.params;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  async function handleRedefinePassword(event) {\n    event.preventDefault();\n    try {\n      const email = formState.values.email;\n\n      const data = {\n        email\n      };\n\n      const response = await api.post('redefinepw', data);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].email){\n          toast.error(response.data.errors[0].email);\n        }\n      } else {\n        toast.success(response.data.message);\n        history.push('/home');\n      }\n    } catch (error) {\n\n    }\n  }\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.content}>\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <div className={classes.contentBody}>\n          <form\n            className={classes.form}\n            onSubmit={handleRedefinePassword}>\n            <div className={classes.logoImage}>\n              <img\n                  alt=\"Logo\"\n                  src=\"/images/logomarca.png\"/>\n            </div>\n            <Typography\n              className={classes.title}\n              variant=\"h5\">\n              Redefinir Senha\n            </Typography>\n            <TextField\n              className={classes.textField}\n              error={hasError('email')}\n              fullWidth\n              helperText={\n                hasError('email') ? formState.errors.email[0] : null\n              }\n              label=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              type=\"text\"\n              value={formState.values.email || ''}\n              variant=\"outlined\"/>\n            <Button\n              className={classes.signInButton}\n              color=\"primary\"\n              disabled={!formState.isValid}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\">\n              Enviar\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRedefinePassword.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(RedefinePassword);\n","import React, { useState, useEffect } from 'react';\nimport {Link as RouterLink, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  TextField,\n  Typography,\n  Link\n} from '@material-ui/core';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'O e-mail é obrigatório.' },\n    email: true,\n    length: {\n      maximum: 64,\n      message: 'O e-mail deve conter no máximo 64 caracteres.'\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'A senha é obrigatória.' },\n    length: {\n      minimum: 6,\n      maximum: 10,\n      message: 'A senha deve conter no mínimo 6 e no máximo 10 caracteres.'\n    }\n  },\n  confirmPassword: {\n    presence: { allowEmpty: false, message: 'A confirmação da senha é obrigatória.' },\n    length: {\n      minimum: 6,\n      maximum: 10,\n      message: 'A confirmação da senha deve conter no mínimo 6 e no máximo 10 caracteres.'\n    }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    fontWeight: 'bold'\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  signInButton: {\n    margin: theme.spacing(2, 0)\n  },\n  logoImage: {\n    paddingTop: theme.spacing(3),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n}));\n\nconst ResetPassword = props => {\n  const { history } = props;\n  const { token } = props.match.params;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  async function handleResetPassword(event) {\n    event.preventDefault();\n\n    try {\n      const email = formState.values.email;\n      const password = formState.values.password;\n      const confirmPassword = formState.values.confirmPassword;\n\n      if(password !== confirmPassword){\n        toast.error(\"A confirmação da senha está incorreta.\");\n        return ;\n      }\n\n      const data = {\n        email, password, token\n      };\n\n      const response = await api.post('resetpw', data);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].email){\n          toast.error(response.data.errors[0].email);\n        } else if(response.data.errors[0].password){\n          toast.error(response.data.errors[0].password);\n        } else if(response.data.errors[0].token){\n          toast.error(response.data.errors[0].token);\n        }\n      } else {\n        toast.success(response.data.message);\n        history.push('/home');\n      }\n    } catch (error) {\n\n    }\n  }\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.content}>\n        <div className={classes.contentBody}>\n          <form\n            className={classes.form}\n            onSubmit={handleResetPassword}>\n            <div className={classes.logoImage}>\n              <img\n                  alt=\"Logo\"\n                  src=\"/images/logomarca.png\"/>\n            </div>\n            <Typography\n              className={classes.title}\n              variant=\"h5\">\n              Redefinir Senha\n            </Typography>\n            <TextField\n              className={classes.textField}\n              error={hasError('email')}\n              fullWidth\n              helperText={\n                hasError('email') ? formState.errors.email[0] : null\n              }\n              label=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              type=\"text\"\n              value={formState.values.email || ''}\n              variant=\"outlined\"/>\n            <TextField\n                className={classes.textField}\n                error={hasError('password')}\n                fullWidth\n                helperText={\n                  hasError('password') ? formState.errors.password[0] : null\n                }\n                label=\"Nova Senha\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={formState.values.password || ''}\n                variant=\"outlined\"\n            />\n            <TextField\n                className={classes.textField}\n                error={hasError('confirmPassword')}\n                fullWidth\n                helperText={\n                  hasError('confirmPassword') ? formState.errors.confirmPassword[0] : null\n                }\n                label=\"Cofirmar Senha\"\n                name=\"confirmPassword\"\n                onChange={handleChange}\n                type=\"password\"\n                value={formState.values.confirmPassword || ''}\n                variant=\"outlined\"\n            />\n            <Button\n              className={classes.signInButton}\n              color=\"primary\"\n              disabled={!formState.isValid}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\">\n              Redefinir\n            </Button>\n            <Typography\n                color=\"textSecondary\"\n                variant=\"body1\">\n              Vá para a página de{' '}\n              <Link\n                  component={RouterLink}\n                  to=\"/sign-in\"\n                  variant=\"h6\">\n                Login.\n              </Link>\n            </Typography>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nResetPassword.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(ResetPassword);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport { SearchInput } from '../../../../../components';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/users/requests');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Lista de Usuários'}</Typography>\n        <span className={classes.spacer} />\n        <Button className={classes.exportButton}\n          onClick={onClickRequestUsers}>Solicitações dos Professores</Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(UsersToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination,\n  Checkbox\n} from '@material-ui/core';\nimport api from '../../../services/api';\nimport { getInitials } from '../../../helpers';\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/UsersToolbar\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersTable = props => {\n  const { className } = props;\n\n  const [users, setUsers] = useState([]);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n\n  async function loadUsers(page){\n    try {\n      let url = 'user?page='+page;\n      if(searchText != ''){\n        url += '&name='+searchText;\n      }\n      const response = await api.get(url);\n\n      if(response.status == 200) {\n        setTotal(response.data.total);\n      }\n      setUsers(response.data.data);\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadUsers(1);\n  }, []);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadUsers(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadUsers(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const updateExternalQuestions = async (event, userId, checked) => {\n    const add_external_question = event.target.checked;\n\n    setUsers((lastUserList) => lastUserList.map((user) => {\n      if (user.id == userId) {\n        user.add_external_question = checked;\n      }\n      return user;\n    }));\n\n    try {\n      let url = 'user/add-external-questions/'+userId;\n      const response = await api.put(url, {\n        add_external_question: add_external_question,\n      });\n    } catch (error) {\n      setUsers((lastUserList) => lastUserList.map((user) => {\n        if (user.id == userId) {\n          user.add_external_question = !checked;\n        }\n        return user;\n      }));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <UsersToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}/>\n      <div className={classes.content}>\n        <Card\n            className={clsx(classes.root, className)}>\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.headTable}>Nome</TableCell>\n                      <TableCell className={classes.headTable}>Email</TableCell>\n                      <TableCell className={classes.headTable}>Nível de Acesso</TableCell>\n                      <TableCell className={classes.headTable}>Questões externas</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {users.map((user, index) => (\n                        <TableRow\n                            className={classes.tableRow}\n                            hover\n                            key={user.id}>\n                          <TableCell>\n                            <div className={classes.nameContainer}>\n                              <Avatar\n                                  className={classes.avatar}\n                                  src={user.avatarUrl}>\n                                {getInitials(user.name)}\n                              </Avatar>\n                              <Typography variant=\"body1\">{user.name}</Typography>\n                            </div>\n                          </TableCell>\n                          <TableCell>{user.email}</TableCell>\n                          <TableCell>\n                            {user.acess_level === 0 ? \"Aluno\" :\n                              user.acess_level === 1 ? \"Administrador\" :\n                                user.acess_level === 2 ? \"Professor\" : \"\"}\n                          </TableCell>\n                          <TableCell>\n                            {user.acess_level === 2 ?\n                              <Checkbox\n                                checked={user.add_external_question}\n                                onChange={(event, checked) => updateExternalQuestions(event, user.id, checked)}\n                              /> : null }\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n            />\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nUsersTable.propTypes = {\n\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  comboboxSearch: {\n    width: '40%'\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst RequestUsersToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onCLickUsers = () => {\n    history.push('/users');\n  }\n\n  const situations = [\n    {\n      value: '0',\n      label: 'Aguardando'\n    },\n    {\n      value: '1',\n      label: 'Aceitos'\n    },\n    {\n      value: '-1',\n      label: 'Recusados'\n    }\n  ];\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Lista de Solicitações dos Usuários'}</Typography>\n        <span className={classes.spacer} />\n        <Button className={classes.exportButton}\n            onClick={onCLickUsers}>Lista de Usuários</Button>\n      </div>\n      <div className={classes.row}>\n        <div className={classes.comboboxSearch}>\n          <TextField\n              fullWidth\n              label=\"Situação\"\n              margin=\"dense\"\n              name=\"valid\"\n              onChange={onChangeSearch}\n              select\n              // eslint-disable-next-line react/jsx-sort-props\n              SelectProps={{ native: true }}\n              value={searchText}\n              variant=\"outlined\">\n            {situations.map(situation => (\n                <option\n                    key={situation.value}\n                    value={situation.value}>\n                  {situation.label}\n                </option>\n            ))}\n          </TextField>\n        </div>\n        {/*<SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />*/}\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nRequestUsersToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(RequestUsersToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination, Button, Tooltip\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport { StatusBullet } from '../../../../components';\nimport { toast } from 'react-toastify';\nimport RequestUsersToolbar from \"./components/RequestUsersToolbar\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nconst statusColors = {\n  '1': 'success',\n  '0': 'info',\n  '-1': 'danger'\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n}));\n\nconst RequestUsersTable = props => {\n  const { className, history } = props;\n\n  const [couserProfessor, setCourseProfessor] = useState([]);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState(0);\n\n  async function loadCourseProfessor(page, situation){\n    try {\n      let url = 'course-professor?page='+page+'&valid='+situation;\n      const response = await api.get(url);\n      if(response.status == 200) {\n        setTotal(response.data.total);\n        setCourseProfessor(response.data.data);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadCourseProfessor(1, searchText);\n  }, []);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadCourseProfessor(1, searchText);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadCourseProfessor(page+1, searchText)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const onClickEdit = (id) => {\n    history.push('/users/requests/'+id);\n  }\n\n  return (\n    <div className={classes.root}>\n      <RequestUsersToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}/>\n      <div className={classes.content}>\n        <Card\n            className={clsx(classes.root, className)}>\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.headTable}>Nome</TableCell>\n                      <TableCell className={classes.headTable}>Email</TableCell>\n                      <TableCell className={classes.headTable}>Curso Solicitado</TableCell>\n                      <TableCell className={classes.headTable}>Dt. Solicitação</TableCell>\n                      <TableCell className={classes.headTable}>Situação</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {couserProfessor.map(cp => (\n                        <TableRow\n                            className={classes.tableRow}\n                            hover\n                            key={cp.id}>\n                          <TableCell>{cp.user.name}</TableCell>\n                          <TableCell>{cp.user.email}</TableCell>\n                          <TableCell>{cp.course.description}</TableCell>\n                          <TableCell>{moment(cp.created_at).format('DD/MM/YYYY')}</TableCell>\n                          <TableCell className={classes.row}>\n                            <div className={classes.statusContainer}>\n                              <StatusBullet\n                                  className={classes.status}\n                                  color={statusColors[cp.valid]}\n                                  size=\"sm\"\n                              />\n                              {cp.valid == 1 ? 'Aceito' :\n                                  cp.valid == -1 ? 'Recusado' : 'Aguardando'}\n                            </div>\n                            <Tooltip title=\"Editar\">\n                              <Button\n                                  className={classes.buttonEdit}\n                                  onClick={() => onClickEdit(cp.id)}>\n                                <Edit fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                          </TableCell>\n\n                        </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n            />\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nRequestUsersTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default RequestUsersTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton, Link\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst RequestUserDetails = props => {\n  const { className, history, ...rest } = props;\n  const { codigoCourseProfessor } = props.match.params;\n  const [recepit, setReceipt] = useState('');\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function updateCourseProfessorDetails(){\n    try {\n      const valid = formState.values.valid;\n      const data = {\n        valid\n      }\n\n      const response = await api.put('course-professor/'+codigoCourseProfessor, data);\n      if (response.status == 202) {\n        if(response.data.message){\n          toast.error( response.data.message);\n        } else if(response.data.errors[0].valid){\n          toast.error(response.data.errors[0].valid);\n        }\n      } else {\n        toast.success( 'Solicitação atualizada.');\n        history.push('/users/requests/');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function viewReceipt(){\n    try {\n      api.get('course-professor/download-receipt?file='+recepit,\n          {\n            responseType: 'arraybuffer',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/pdf'\n            }\n          })\n          .then((response) => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', 'comprovante_questione.pdf'); //or any other extension\n            document.body.appendChild(link);\n            link.click();\n          })\n          .catch((error) => console.log(error));\n    } catch (error) {\n\n    }\n  }\n\n  async function findCourseProfessor(id){\n    try {\n      const response = await api.get('course-professor/show/'+id);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setReceipt(response.data[0].receipt);\n        setFormState(formState => ({\n          values: {\n            'user': response.data[0].user.name,\n            'course' : response.data[0].course.description,\n            'id': response.data[0].id,\n            'valid': response.data[0].valid\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    if(codigoCourseProfessor){\n      findCourseProfessor(codigoCourseProfessor);\n    }\n\n  }, []);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const situations = [\n    {\n      value: '0',\n      label: 'Aguardando'\n    },\n    {\n      value: '1',\n      label: 'Aceitar'\n    },\n    {\n      value: '-1',\n      label: 'Recusar'\n    }\n  ];\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"O professor(a) abaixo solicitou acesso para construir questões no curso selecionado.\"\n          title=\"Permissão para curso\"/>\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                label=\"Usuário\"\n                margin=\"dense\"\n                name=\"user\"\n                onChange={handleChange}\n                value={formState.values.user || ''}\n                variant=\"outlined\"\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Grid>\n            <Grid\n                item\n                md={6}\n                xs={12}>\n              <TextField\n                  fullWidth\n                  label=\"Curso\"\n                  margin=\"dense\"\n                  name=\"course\"\n                  onChange={handleChange}\n                  value={formState.values.course || ''}\n                  variant=\"outlined\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                label=\"Situação\"\n                margin=\"dense\"\n                name=\"valid\"\n                onChange={handleChange}\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={formState.values.valid}\n                variant=\"outlined\">\n                {situations.map(situation => (\n                  <option\n                    key={situation.value}\n                    value={situation.value}>\n                    {situation.label}\n                  </option>\n                ))}\n              </TextField>\n\n            </Grid>\n            <Grid\n                item\n                md={12}\n                xs={12}>\n              {recepit ?\n                  <Link href=\"#\" onClick={viewReceipt}>\n                    Clique aqui para visualizar o comprovante\n                  </Link> : null }\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={updateCourseProfessorDetails}>\n            Salvar\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nRequestUserDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RequestUserDetails;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, MenuItem, TextField, Typography} from '@material-ui/core';\nimport api from \"../../../../../../services/api\";\nimport FindInPage from '@material-ui/icons/SearchSharp';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  comboboxSearch: {\n    width: '60%'\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  buttonSeacrh: {\n    marginLeft: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst SkillToolbar = props => {\n  const { className, onChangeSearch, onClickSearch, history, searchText, ...rest } = props;\n  const [courses, setCourses] = useState([{'id': '0', 'description': 'Todos os cursos'}]);\n\n  const classes = useStyles();\n\n  async function loadCourses(){\n    try {\n      const response = await api.get('all/courses');\n      if(response.status == 200) {\n        setCourses([...courses, ...response.data]);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  const onClickNewProfile = e => {\n    history.push('/skill-details');\n  }\n\n  useEffect(() => {\n    loadCourses();\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Lista de Competências'}</Typography>\n        <span className={classes.spacer} />\n        <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={onClickNewProfile}>\n          Nova Competência\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <TextField\n            id=\"filled-select-currency\"\n            select\n            label=\"Selecione o curso\"\n            value={searchText}\n            onChange={onChangeSearch}\n            helperText=\"Selecione o curso que deseja pesquisar.\"\n            variant=\"outlined\"\n            margin=\"dense\">\n          {courses.map((option) => (\n              <MenuItem key={option.id} value={option.id}>\n                {option.description}\n              </MenuItem>\n          ))}\n        </TextField>\n        <Button\n            className={classes.buttonSeacrh}\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nSkillToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(SkillToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination, Tooltip, Button\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport { toast } from 'react-toastify';\nimport SkillToolbar from \"./components/SkillToolbar\";\nimport PropTypes from \"prop-types\";\nimport {DialogQuestione} from \"../../../../components\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst SkillTable = props => {\n  const { className, history } = props;\n\n  const [skills, setSkills] = useState([]);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [idSkillDelete, setIdSkillDelete] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  async function loadSkill(page){\n    try {\n      let url = 'skill?page='+page;\n      if(searchText!=0){\n        url += '&fk_course_id='+searchText;\n      }\n      const response = await api.get(url);\n      if(response.status == 200) {\n        setTotal(response.data.total);\n        setSkills(response.data.data);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadSkill(1);\n  }, []);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickOpenDialog = (id) => {\n    setIdSkillDelete(id);\n    setOpen(true);\n  }\n\n  const onClickCloseDialog = () => {\n    setOpen(false);\n    setIdSkillDelete(0);\n  }\n\n  async function onDeleteSkill(){\n    try {\n      let url = 'skill/'+idSkillDelete;\n      const response = await api.delete(url);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        toast.success('Competência excluída.');\n        loadSkill(page+1);\n      }\n    } catch (error) {\n\n    }\n    setOpen(false);\n  }\n\n  const onClickEdit = (id) => {\n    history.push('/skill-details/'+id);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadSkill(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadSkill(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SkillToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}/>\n      <div className={classes.content}>\n        <Card\n            className={clsx(classes.root, className)}>\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.headTable}>Descrição</TableCell>\n                      <TableCell className={classes.headTable}>Curso</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {skills.map(skill => (\n                        <TableRow\n                            className={classes.tableRow}\n                            hover\n                            key={skill.id}>\n                          <TableCell>\n                            <div className={classes.nameContainer}>\n                              <Typography variant=\"body1\">{skill.description}</Typography>\n                            </div>\n                          </TableCell>\n                          <TableCell>{skill.course.description}</TableCell>\n                          <TableCell className={classes.row}>\n                            <Tooltip title=\"Deletar\">\n                              <Button\n                                  className={classes.buttonDelete}\n                                  onClick={() => onClickOpenDialog(skill.id)}>\n                                <Delete fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                            <Tooltip title=\"Editar\">\n                              <Button\n                                  className={classes.buttonEdit}\n                                  onClick={() => onClickEdit(skill.id)}>\n                                <Edit fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n            />\n          </CardActions>\n        </Card>\n      </div>\n      <DialogQuestione handleClose={onClickCloseDialog}\n                       open={open}\n                       onClickAgree={onDeleteSkill}\n                       onClickDisagree={onClickCloseDialog}\n                       mesage={'Deseja excluir a competência selecionada?'}\n                       title={'Excluir Competência'}/>\n    </div>\n  );\n};\n\nSkillTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default SkillTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false,  message: 'A descrição é obrigatória.'},\n    length: {\n      minimum: 10,\n      maximum: 300,\n      message: 'A descrição deve conter no mínimo 10 e no máximo 300 caracteres.'\n    }\n  },\n  course: {\n    presence: { allowEmpty: false, message: 'O curso é obrigatório.' },\n    numericality: {\n      onlyInteger: true,\n      greaterThan: 0,\n      message: 'Escolha um curso.',\n    }\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst SkillDetails = props => {\n  const { className, history, ...rest } = props;\n  const [courses, setCourses] = useState([{'id': '0', 'description': '- Escolha um curso -'}]);\n  const { codigoSkill } = props.match.params;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function loadCourses(){\n    try {\n      const response = await api.get('all/courses');\n      if(response.status == 200) {\n        setCourses([...courses, ...response.data]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function saveSkillDetails(){\n    try {\n      const fk_course_id = formState.values.course;\n      const description = formState.values.description;\n      const id = formState.values.id;\n      const data = {\n        description, fk_course_id\n      }\n      let response= {};\n      let acao = \"\";\n      if(!id) {\n         response = await api.post('skill', data);\n        acao = \"cadastrada\";\n      } else {\n         response = await api.put('skill/'+id, data);\n        acao = \"atualizada\";\n      }\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].description){\n          toast.error(response.data.errors[0].description);\n        } if(response.data.errors[0].fk_course_id){\n          toast.error(response.data.errors[0].fk_course_id);\n        }\n      } else {\n        toast.success('Competência '+acao+'.');\n        history.push('/skills');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function findASkill(id){\n    try {\n      const response = await api.get('skill/show/'+id);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setFormState(formState => ({\n          values: {\n            'description': response.data[0].description,\n            'course' : response.data[0].fk_course_id,\n            'id': response.data[0].id\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n      }\n    } catch (error) {\n\n    }\n  }\n\n\n  useEffect(() => {\n    loadCourses();\n\n    if(codigoSkill){\n      findASkill(codigoSkill);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course==0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\"\n        onSubmit={saveSkillDetails}>\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Competência\"/>\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('description')}\n                helperText={\n                  hasError('description') ? formState.errors.description[0] : null\n                }\n                label=\"Descrição\"\n                margin=\"dense\"\n                name=\"description\"\n                onChange={handleChange}\n                value={formState.values.description || ''}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('course')}\n                helperText={\n                  hasError('course') ? formState.errors.course[0] : null\n                }\n                label=\"\"\n                margin=\"dense\"\n                name=\"course\"\n                onChange={handleChange}\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={formState.values.course}\n                variant=\"outlined\">\n                {courses.map(course => (\n                  <option\n                    key={course.id}\n                    value={course.id}>\n                    {course.description}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={saveSkillDetails}\n            disabled={!formState.isValid}>\n            Salvar\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nSkillDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default SkillDetails;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, MenuItem, TextField, Typography} from '@material-ui/core';\nimport api from \"../../../../../../services/api\";\nimport FindInPage from '@material-ui/icons/SearchSharp';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  comboboxSearch: {\n    width: '60%'\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  buttonSeacrh: {\n    marginLeft: theme.spacing(1),\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst ObjectToolbar = props => {\n  const { className, onChangeSearch, onClickSearch, history,\n                                searchText, ...rest } = props;\n  const [courses, setCourses] = useState([{'id': '0', 'description': 'Todos os cursos'}]);\n\n  const classes = useStyles();\n\n  const onClickNewObject = e => {\n    history.push('/object-details');\n  }\n\n  async function loadCourses(){\n    try {\n      const response = await api.get('all/courses');\n      setCourses([...courses, ...response.data]);\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadCourses();\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Lista de Objetos de Conhecimento'}</Typography>\n        <span className={classes.spacer} />\n        <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={onClickNewObject}>\n          Novo Objeto\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <TextField\n            id=\"filled-select-currency\"\n            select\n            label=\"Selecione o curso\"\n            value={searchText}\n            onChange={onChangeSearch}\n            helperText=\"Selecione o curso que deseja pesquisar.\"\n            variant=\"outlined\"\n            margin=\"dense\">\n          {courses.map((option) => (\n              <MenuItem key={option.id} value={option.id}>\n                {option.description}\n              </MenuItem>\n          ))}\n        </TextField>\n        <Button\n            className={classes.buttonSeacrh}\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nObjectToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(ObjectToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination, Tooltip, Button\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport { toast } from 'react-toastify';\nimport ObjectToolbar from \"./components/ObjectToolbar\";\nimport PropTypes from \"prop-types\";\nimport {DialogQuestione} from \"../../../../components\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ObjectTable = props => {\n  const { className, history } = props;\n\n  const [objects, setObjects] = useState([]);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [idObjectDelete, setIdObjectDelete] = React.useState(0);\n\n  async function loadObject(page){\n    try {\n      let url = 'object?page='+page;\n      if(searchText!=0){\n        url += '&fk_course_id='+searchText;\n      }\n      const response = await api.get(url);\n      setTotal(response.data.total);\n      setObjects(response.data.data);\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadObject(1);\n  }, []);\n\n  const onClickOpenDialog = (id) => {\n    setIdObjectDelete(id);\n    setOpen(true);\n  }\n\n  const onClickCloseDialog = () => {\n    setOpen(false);\n    setIdObjectDelete(0);\n  }\n\n  async function onDeleteObject(){\n    try {\n      let url = 'object/'+idObjectDelete;\n      const response = await api.delete(url);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        toast.success('Objeto de Conhecimento excluído.');\n        loadObject(page+1);\n      }\n    } catch (error) {\n\n    }\n    setOpen(false);\n  }\n\n  const onClickEdit = (id) => {\n    history.push('/object-details/'+id);\n  }\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadObject(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadObject(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ObjectToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}/>\n      <div className={classes.content}>\n        <Card\n            className={clsx(classes.root, className)}>\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.headTable}>Descrição</TableCell>\n                      <TableCell className={classes.headTable}>Curso</TableCell>\n                      <TableCell></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {objects.map(object => (\n                        <TableRow\n                            className={classes.tableRow}\n                            hover\n                            key={object.id}>\n                          <TableCell>\n                            <div className={classes.nameContainer}>\n                              <Typography variant=\"body1\">{object.description}</Typography>\n                            </div>\n                          </TableCell>\n                          <TableCell>{object.course.description}</TableCell>\n                          <TableCell className={classes.row}>\n                            <Tooltip title=\"Deletar\">\n                              <Button\n                                  className={classes.buttonDelete}\n                                  onClick={() => onClickOpenDialog(object.id)}>\n                                <Delete fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                            <Tooltip title=\"Editar\">\n                              <Button\n                                  className={classes.buttonEdit}\n                                  onClick={() => onClickEdit(object.id)}>\n                                <Edit fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n            />\n          </CardActions>\n        </Card>\n      </div>\n      <DialogQuestione handleClose={onClickCloseDialog}\n                       open={open}\n                       onClickAgree={onDeleteObject}\n                       onClickDisagree={onClickCloseDialog}\n                       mesage={'Deseja excluir o objeto de conhecimento selecionado?'}\n                       title={'Excluir Objeto de Conhecimento'}/>\n    </div>\n  );\n};\n\nObjectTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default ObjectTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false,  message: 'A descrição é obrigatória.'},\n    length: {\n      minimum: 5,\n      maximum: 300,\n      message: 'A descrição deve conter no mínimo 5 e no máximo 300 caracteres.'\n    }\n  },\n  course: {\n    presence: { allowEmpty: false, message: 'O curso é obrigatório.' },\n    numericality: {\n      onlyInteger: true,\n      greaterThan: 0,\n      message: 'Escolha um curso.',\n    }\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ObjectDetails = props => {\n  const { className, history, ...rest } = props;\n  const [courses, setCourses] = useState([{'id': '0', 'description': '- Escolha um curso -'}]);\n  const { codigoObject } = props.match.params;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function loadCourses(){\n    try {\n      const response = await api.get('all/courses');\n\n      setCourses([...courses, ...response.data]);\n    } catch (error) {\n      toast.error('Erro de conexão.');\n    }\n  }\n\n  async function saveObjectDetails(){\n    try {\n      const fk_course_id = formState.values.course;\n      const description = formState.values.description;\n      const id = formState.values.id;\n      const data = {\n        description, fk_course_id\n      }\n      let response= {};\n      let acao = \"\";\n      if(!id) {\n         response = await api.post('object', data);\n         acao = \"cadastrado\";\n      } else {\n         response = await api.put('object/'+id, data);\n        acao = \"atualizado\";\n      }\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].description){\n          toast.error(response.data.errors[0].description);\n        } if(response.data.errors[0].fk_course_id){\n          toast.error(response.data.errors[0].fk_course_id);\n        }\n      } else {\n        toast.success('Objeto de Conhecimento '+acao+'.');\n        history.push('/objects');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function findAObject(id){\n    try {\n      const response = await api.get('object/show/'+id);\n\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setFormState(formState => ({\n          values: {\n            'description': response.data[0].description,\n            'course' : response.data[0].fk_course_id,\n            'id': response.data[0].id\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadCourses();\n\n    if(codigoObject){\n      findAObject(codigoObject);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course==0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\"\n        onSubmit={saveObjectDetails}>\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Objeto de Conhecimento\"/>\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('description')}\n                helperText={\n                  hasError('description') ? formState.errors.description[0] : null\n                }\n                label=\"Descrição\"\n                margin=\"dense\"\n                name=\"description\"\n                onChange={handleChange}\n                value={formState.values.description || ''}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('course')}\n                helperText={\n                  hasError('course') ? formState.errors.course[0] : null\n                }\n                label=\"\"\n                margin=\"dense\"\n                name=\"course\"\n                onChange={handleChange}\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={formState.values.course}\n                variant=\"outlined\">\n                {courses.map(course => (\n                  <option\n                    key={course.id}\n                    value={course.id}>\n                    {course.description}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={saveObjectDetails}\n            disabled={!formState.isValid}>\n            Salvar\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nObjectDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default ObjectDetails;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination, Tooltip, Button\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/CourseToolbar\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport {DialogQuestione, TableQuestione} from \"../../../../components\";\nimport PropTypes from \"prop-types\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst CourseTable = props => {\n  const { className, history } = props;\n\n  const [courses, setCourses] = useState([]);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [idCourseDelete, setIdCourseDelete] = React.useState(0);\n\n  async function loadCourses(page){\n    try {\n      let url = 'course?page='+page;\n      if(searchText != ''){\n        url += '&description='+searchText;\n      }\n      const response = await api.get(url);\n      setTotal(response.data.total);\n      setCourses(response.data.data);\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadCourses(1);\n  }, []);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadCourses(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadCourses(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const onClickOpenDialog = (id) => {\n    setIdCourseDelete(id);\n    setOpen(true);\n  }\n\n  const onClickCloseDialog = () => {\n    setOpen(false);\n    setIdCourseDelete(0);\n  }\n\n  async function onDeleteObject(){\n    try {\n      let url = 'course/'+idCourseDelete;\n      const response = await api.delete(url);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        toast.success('Curso excluído.');\n        loadCourses(page+1);\n      }\n    } catch (error) {\n\n    }\n    setOpen(false);\n  }\n\n  const onClickEdit = (id) => {\n    history.push('/course-details/'+id);\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n      <UsersToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}/>\n      <div className={classes.content}>\n        <Card\n            className={clsx(classes.root, className)}>\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.headTable}>Sigla</TableCell>\n                      <TableCell className={classes.headTable}>Descrição</TableCell>\n                      <TableCell className={classes.headTable}></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {courses.map(course => (\n                        <TableRow\n                            className={classes.tableRow}\n                            hover\n                            key={course.id}>\n                          <TableCell>{course.initials}</TableCell>\n                          <TableCell>{course.description}</TableCell>\n                          <TableCell className={classes.row}>\n                            <Tooltip title=\"Deletar\">\n                              <Button\n                                  className={classes.buttonDelete}\n                                  onClick={() => onClickOpenDialog(course.id)}>\n                                <Delete fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                            <Tooltip title=\"Editar\">\n                              <Button\n                                  className={classes.buttonEdit}\n                                  onClick={() => onClickEdit(course.id)}>\n                                <Edit fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n            />\n          </CardActions>\n        </Card>\n         <DialogQuestione handleClose={onClickCloseDialog}\n                       open={open}\n                       onClickAgree={onDeleteObject}\n                       onClickDisagree={onClickCloseDialog}\n                       mesage={'Deseja excluir o curso selecionado?'}\n                       title={'Excluir Curso'}/>\n      </div>\n\n    </div>\n    </div>\n  );\n};\n\nCourseTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default CourseTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton, Tooltip\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false,  message: 'A descrição é obrigatória.'},\n    length: {\n      minimum: 4,\n      maximum: 100,\n      message: 'A descrição deve conter no mínimo 4 e no máximo 100 caracteres.'\n    }\n  },\n  initials: {\n    presence: { allowEmpty: false,  message: 'A sigla é obrigatória.'},\n    length: {\n      minimum: 2,\n      maximum: 8,\n      message: 'A sigla do curso deve conter no mínimo 2 e no máximo 8 caracteres.'\n    }\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst CourseDetails = props => {\n  const { className, history, ...rest } = props;\n  const { codigoCourse } = props.match.params;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function saveCourseDetails(){\n    try {\n      const fk_course_id = formState.values.course;\n      const description = formState.values.description;\n      const initials = formState.values.initials;\n      const id = formState.values.id;\n      const data = {\n        description, fk_course_id, initials\n      }\n      let response= {};\n      let acao = \"\";\n      if(!id) {\n        response = await api.post('course', data);\n        acao = \"cadastrado\";\n      } else {\n        response = await api.put('course/'+id, data);\n        acao = \"atualizado\";\n      }\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].description){\n          toast.error(response.data.errors[0].description);\n        } if(response.data.errors[0].fk_course_id){\n          toast.error( response.data.errors[0].fk_course_id);\n        }\n      } else {\n        toast.success('Curso '+acao+'.');\n        history.push('/courses');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function findACourse(id){\n    try {\n      const response = await api.get('course/show/'+id);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setFormState(formState => ({\n          values: {\n            'description': response.data.description,\n            'initials': response.data.initials,\n            'id': response.data.id\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    if(codigoCourse){\n      findACourse(codigoCourse);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course==0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n      <Card\n          {...rest}\n          className={clsx(classes.root, className)}>\n        <form\n            autoComplete=\"off\">\n          <div className={classes.contentHeader}>\n            <IconButton onClick={handleBack}>\n              <ArrowBackIcon />\n            </IconButton>\n          </div>\n          <CardHeader\n              subheader=\"\"\n              title=\"Curso\"/>\n          <Divider />\n          <CardContent>\n            <Grid\n                container\n                spacing={3}>\n              <Grid\n                  item\n                  md={6}\n                  xs={12}>\n                <TextField\n                    fullWidth\n                    error={hasError('initials')}\n                    helperText={\n                      hasError('initials') ? formState.errors.initials[0] : null\n                    }\n                    label=\"Sigla\"\n                    margin=\"dense\"\n                    name=\"initials\"\n                    onChange={handleChange}\n                    value={formState.values.initials || ''}\n                    variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                  item\n                  md={6}\n                  xs={12}>\n                <TextField\n                    fullWidth\n                    error={hasError('description')}\n                    helperText={\n                      hasError('description') ? formState.errors.description[0] : null\n                    }\n                    label=\"Descrição\"\n                    margin=\"dense\"\n                    name=\"description\"\n                    onChange={handleChange}\n                    value={formState.values.description || ''}\n                    variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            <Tooltip title=\"Clique aqui para solicitar acesso para cursos\" aria-label=\"add\">\n              <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  disabled={!formState.isValid}\n                  onClick={saveCourseDetails}>\n                Salvar\n              </Button>\n            </Tooltip>\n          </CardActions>\n        </form>\n      </Card>\n  );\n};\n\nCourseDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default CourseDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport { SearchInput } from '../../../../../../components';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst EvaluationToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/evaluations-archive');\n  }\n\n  const onClickNewCourse = e => {\n    history.push('/evaluation-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Avaliações'}</Typography>\n        <span className={classes.spacer} />\n        <Button className={classes.exportButton}\n                onClick={onClickRequestUsers}>Arquivadas</Button>\n      </div>\n      <div className={classes.row}>\n        <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={onClickNewCourse}>\n          Cadastrar\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar por descrição\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nEvaluationToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(EvaluationToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    IconButton,\n    Typography,\n    CardContent,\n    MenuItem,\n    Menu, Tooltip, Chip, Dialog, AppBar, Toolbar,\n    TextField, Button\n} from '@material-ui/core';\nimport { MoreVert, Edit } from '@material-ui/icons';\nimport moment from 'moment';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport {withRouter} from \"react-router-dom\";\nimport {DialogQuestione} from \"../../../../components\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginBottom: 8,\n  },\n    head: {\n        paddingBottom: 0,\n        paddingTop: 10\n    },\n    chip:{\n      backgroundColor: '#e57373',\n      color: '#ffebee',\n    },\n  spacer: {\n    flexGrow: 1\n  },\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: 2,\n        flex: 1,\n        fontWeight: 'bold',\n        color: '#ffffff'\n    },\n    fieldsDialog: {\n      marginTop: 20\n    }\n}));\n\nconst EvaluationCard = props => {\n  const { className, history, refresh, setRefresh, evaluation, setTabValue, ...rest } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n    const [descriptionNewApplication, setDescriptionNewApplication] = React.useState('');\n\n  const classes = useStyles();\n\n  const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n      setAnchorEl(null);\n  };\n\n  const onEdit = () => {\n      history.push('/evaluation-details/'+evaluation.id);\n  }\n\n  async function duplicate(){\n      try {\n          const response = await api.post('evaluation/duplicate/'+evaluation.id);\n          if (response.status === 200) {\n              toast.success('Avaliação cadastrada(duplicada).');\n              setRefresh(refresh+1);\n              handleClose();\n          } else {\n              toast.error('Erro ao mduar o status da avaliação.');\n          }\n\n      } catch (error) {\n\n      }\n  }\n\n  async function changeStatus(status) {\n      try {\n          const data = {\n              status\n          }\n          const response = await api.put('evaluation/change-status/'+evaluation.id, data);\n          if (response.status === 200) {\n              if (status == 1){\n                  toast.success('Avaliação ativa.');\n              } else {\n                  toast.success('Avaliação arquivada.');\n              }\n              setRefresh(refresh+1);\n              handleClose();\n          } else {\n              toast.error('Erro ao mduar o status da avaliação.');\n          }\n\n      } catch (error) {\n\n      }\n  }\n\n    const onClickOpenDialog = () => {\n        setOpen(true);\n    }\n\n    const onClickCloseDialog = () => {\n        setOpen(false);\n    }\n\n    async function onDelete(){\n        try {\n            let url = 'evaluation/'+evaluation.id;\n            const response = await api.delete(url);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Avaliação excluída.');\n                setRefresh(refresh+1);\n            }\n\n            handleClose();\n        } catch (error) {\n\n        }\n        setOpen(false);\n    }\n\n    async function saveNewApplication(){\n        try {\n            if(descriptionNewApplication.length < 5){\n                setOpenNewApplication(false);\n                toast.error('Informe uma descrição com no mínimo 05 caracteres');\n                return ;\n            }\n            const fk_evaluation_id = evaluation.id;\n            const description = descriptionNewApplication;\n            const data = {\n                description, fk_evaluation_id\n            }\n            const response = await api.post('evaluation/add-application', data);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n                setOpenNewApplication(false);\n            } else {\n                toast.success('Nova aplicação cadastrada.');\n                setDescriptionNewApplication('');\n                // history.push('/applications-evaluation');\n                setTabValue(1);\n            }\n\n        } catch (error) {\n\n        }\n    }\n\n    //dialog de nova aplicação\n    const [openNewApplication, setOpenNewApplication] = React.useState(false);\n\n    const handleNewApplication = () => {\n        setOpenNewApplication(true);\n    };\n\n    const handleNewApplicationExit = () => {\n        setOpenNewApplication(false);\n    }\n\n    const handleChangeDescriptionNewApplication = (e) => {\n        setDescriptionNewApplication(e.target.value);\n    }\n\n  return (\n    <Card\n      {...rest}\n      className={classes.root}>\n          <CardHeader\n              className={classes.head}\n              action={\n                  <div>\n                      { evaluation.status == 1 ?\n                      <Tooltip title=\"Editar Avaliação\">\n                          <IconButton\n                              aria-label=\"copy\"\n                              onClick={onEdit}>\n                              <Edit />\n                          </IconButton>\n                      </Tooltip> : null }\n                          <Tooltip title=\"Opções da Avaliação\">\n                          <IconButton\n                                aria-label=\"settings\"\n                                onClick={handleClick}>\n                              <MoreVert />\n                            </IconButton>\n                      </Tooltip>\n                  </div>\n              }\n\n              title={\n                  evaluation.id < 10 ? '00000' + evaluation.id :\n                      evaluation.id < 100 ? '0000' + evaluation.id :\n                          evaluation.id < 1000 ? '000' + evaluation.id :\n                              evaluation.id < 10000 ? '00' + evaluation.id :\n                                  evaluation.id < 100000 ? '0' + evaluation.id :\n                                      evaluation.id\n              }/>\n      <CardContent>\n        <Typography variant=\"h4\" color=\"textSecondary\" component=\"h2\">\n            {'Descrição: '+evaluation.description}\n        </Typography>\n          <Typography color=\"textSecondary\" variant=\"h6\">\n              {'Data de criação da avaliação: '+ moment(evaluation.created_at).format('DD/MM/YYYY')}\n          </Typography>\n          { evaluation.status == 2 ?\n              <Chip label=\"Arquivada\" className={clsx(classes.chip, className)} size=\"small\"/> : null}\n      </CardContent>\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}>\n            { evaluation.status == 1 ? <MenuItem onClick={handleNewApplication}>Nova Aplicação</MenuItem> : null}\n            <MenuItem onClick={() => history.push(`/evaluation-questions/${evaluation.id}`)}>Ver questões</MenuItem>\n            <MenuItem onClick={duplicate}>Duplicar</MenuItem>\n            { evaluation.status == 1 ? <MenuItem onClick={() => changeStatus(2) }>Arquivar</MenuItem> : null}\n            { evaluation.status == 2 ? <MenuItem onClick={() => changeStatus(1) }>Ativar</MenuItem> : null}\n            { evaluation.status == 2 ? <MenuItem onClick={onClickOpenDialog}>Deletar</MenuItem> : null}\n        </Menu>\n        <DialogQuestione handleClose={onClickCloseDialog}\n                         open={open}\n                         onClickAgree={onDelete}\n                         onClickDisagree={onClickCloseDialog}\n                         mesage={'Deseja excluir a avaliação selecionada?'}\n                         title={'Excluir Avaliação'}/>\n        {/* Dialog de cadastro de aplicação */}\n        <Dialog fullScreen onClose={handleNewApplicationExit} aria-labelledby=\"simple-dialog-title\" open={openNewApplication}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleNewApplicationExit} aria-label=\"close\">\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Informe a descrição para a aplicação\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <TextField\n                fullWidth\n                label=\"Descrição\"\n                margin=\"dense\"\n                name=\"description\"\n                variant=\"outlined\"\n                onChange={handleChangeDescriptionNewApplication}\n                value={descriptionNewApplication}\n                className={classes.fieldsDialog}\n            />\n            <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                className={classes.fieldsDialog}\n                onClick={saveNewApplication}>\n                Salvar\n            </Button>\n\n        </Dialog>\n    </Card>\n  );\n};\n\nEvaluationCard.propTypes = {\n    className: PropTypes.string,\n    evaluation: PropTypes.object,\n    history: PropTypes.object,\n    setRefresh: PropTypes.func,\n    refresh: PropTypes.number\n};\n\nexport default withRouter(EvaluationCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport { SearchInput } from '../../../../../../components';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst EvaluationApplicationToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/evaluations-archive');\n  }\n\n  const onClickNewCourse = e => {\n    history.push('/evaluation-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Aplicações'}</Typography>\n        <span className={classes.spacer} />\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar por descrição ou código\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nEvaluationApplicationToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(EvaluationApplicationToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    IconButton,\n    Typography,\n    CardContent, Chip, Switch, Tooltip\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport {withRouter} from \"react-router-dom\";\nimport api from \"../../../../services/api\";\nimport { Edit, FormatListBulleted } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 8,\n  },\n    head: {\n        paddingBottom: 0,\n        paddingTop: 6\n    },\n    chipred:{\n      margin: 3,\n      backgroundColor: '#e57373',\n      color: '#ffebee',\n    },\n    chipgreen:{\n        margin: 3,\n        backgroundColor: '#009688',\n        color: '#ffebee',\n    },\n    chip_brown:{\n        margin: 3,\n        backgroundColor: '#795548',\n        color: '#ffebee',\n    },\n    chip_amber:{\n        margin: 3,\n        backgroundColor: '#ffc107',\n        color: '#212121',\n    },\n    chipyellow:{\n        margin: 3,\n        backgroundColor: '#fff176',\n        color: '#212121',\n    },\n    chipblue:{\n        margin: 3,\n        backgroundColor: '#2196f3',\n        color: '#fff',\n    },\n  spacer: {\n    flexGrow: 1\n  },\n}));\n\nconst EvaluationApplicationCard = props => {\n  const { className, history, application, ...rest } = props;\n  const [state, setState] = useState(0);\n  const [evaluationApplication, setEvaluationApplication] = useState({});\n\n  const classes = useStyles();\n\n    useEffect(() => {\n\n    }, [evaluationApplication]);\n\n    useEffect(() => {\n        setEvaluationApplication(application);\n\n    }, []);\n\n  const onEdit = (id) => {\n      history.push('/applications-evaluation/details/'+id);\n  }\n\n  const results = (id) => {\n      history.push('/applications-evaluation/results/'+id);\n  }\n\n    async function onClickOpenDialogEnableApplication() {\n        try {\n            let url = 'evaluation/change-status-application/'+evaluationApplication.id;\n            const response = await api.put(url);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error(response.data.message);\n                }\n            } else {\n                const new_evaluation = response.data[0];\n                setEvaluationApplication(new_evaluation);\n\n                toast.success('Modificado o status da aplicação.');\n            }\n        } catch (error) {\n\n        }\n        setState(state+1);\n    }\n\n  return (\n      <div>\n          { evaluationApplication.id ?\n              <div className={classes.content}>\n              <Card\n                  {...rest}\n                  className={classes.root}>\n                  <CardHeader\n                      className={classes.head}\n                      action={\n                          <div>\n\n                              {evaluationApplication.evaluation.status == 1 ?\n                              <Tooltip title=\"Habilite a questão para aplicações\">\n                                  <Switch\n                                      checked={evaluationApplication.status}\n                                      onChange={onClickOpenDialogEnableApplication}\n                                      color=\"primary\"\n                                      name=\"checkedB\"\n                                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                                  />\n                              </Tooltip> : null }\n                              <Tooltip title=\"Visualizar resultados\">\n                                  <IconButton\n                                      aria-label=\"copy\"\n                                      onClick={() => results(evaluationApplication.id)}>\n                                      <FormatListBulleted />\n                                  </IconButton>\n                              </Tooltip>\n                              {evaluationApplication.evaluation.status == 1 ?\n                                  <Tooltip title=\"Clique para editar\">\n                                      <IconButton\n                                          aria-label=\"copy\"\n                                          onClick={() => onEdit(evaluationApplication.id)}>\n                                          <Edit />\n                                      </IconButton>\n                                  </Tooltip> : null }\n\n\n                          </div>\n                      }\n                      title={''}/>\n\n                    <CardContent>\n\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"h2\">\n                          {'Código: '+evaluationApplication.id_application }\n                      </Typography>\n                      <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                          {'Descrição da aplicação: '+evaluationApplication.description }\n                      </Typography>\n                      {evaluationApplication.evaluation.status == 1 ?\n                      <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\n                          {'Avaliação: '+evaluationApplication.evaluation.id+' - '+evaluationApplication.evaluation.description}\n                      </Typography> :\n                      <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\n                          {'ARQUIVADA - Avaliação: '+evaluationApplication.evaluation.id+' - '+evaluationApplication.evaluation.description}\n                      </Typography>  }\n\n\n                      <Typography color=\"body2\" variant=\"h6\">\n                          {'Data de criação da aplicação: '+ moment(evaluationApplication.created_at).format('DD/MM/YYYY')}\n                      </Typography>\n                      { evaluationApplication.evaluation.status == 2 ?\n                          <Chip label=\"Avaliação Arquivada\" className={clsx(classes.chipred, className)} size=\"small\"/> :\n                          evaluationApplication.status == 1 ?\n                              <Chip label=\"Ativada\" className={clsx(classes.chipgreen, className)} size=\"small\"/> :\n                                <Chip label=\"Desativada\" className={clsx(classes.chipred, className)} size=\"small\"/>\n\n                      }\n                      { evaluationApplication.random_questions == 1 &&\n                          <Chip label=\"Questões Aleatórias\" className={clsx(classes.chipyellow, className)} size=\"small\"/> }\n\n                       { evaluationApplication.date_start  &&\n                        <Chip label=\"Tempo para iniciar definido\" className={clsx(classes.chip_amber, className)} size=\"small\"/> }\n\n                      { evaluationApplication.time_to_finalize || evaluationApplication.date_finish  ?\n                        <Chip label=\"Tempo para finalizar definido\" className={clsx(classes.chip_brown, className)} size=\"small\"/> : null}\n\n                        { evaluationApplication.show_results == 1 &&\n                        <Chip label=\"Resultados Liberados\" className={clsx(classes.chipblue, className)} size=\"small\"/> }\n\n                        { evaluationApplication.release_preview_question == 1 &&\n                        <Chip label=\"Permite vizualizar questões\" className={clsx(classes.chipblue, className)} size=\"small\"/> }\n\n\n\n                  </CardContent>\n              </Card>\n              </div>\n              : null }\n\n      </div>\n\n\n\n  );\n};\n\nEvaluationApplicationCard.propTypes = {\n  className: PropTypes.string,\n    application: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default withRouter(EvaluationApplicationCard);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TablePagination, CardHeader, Grid, LinearProgress\n} from '@material-ui/core';\nimport api from '../../../../services/api';\n\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/EvaluationApplicationToolbar\";\nimport PropTypes from \"prop-types\";\nimport EvaluationApplicationCard from \"../EvaluationApplicationCard\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: '100%'\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst EvaluationApplicationTable = props => {\n  const { className, history } = props;\n\n  const [evaluationsApplications, setEvaluationsApplications] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n\n  async function loadEvaluationsApplications(page){\n    try {\n      let url = 'evaluation/list-applications?page='+page;\n      if(searchText != ''){\n        url += '&description='+searchText;\n      }\n      const response = await api.get(url);\n      if(response.status == 200) {  \n        setTotal(response.data.total);\n        setEvaluationsApplications(response.data.data);\n      } else {\n        setEvaluationsApplications([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadEvaluationsApplications(1);\n  }, []);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadEvaluationsApplications(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadEvaluationsApplications(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n      <div className={classes.root}>\n        <UsersToolbar\n            onChangeSearch={updateSearch.bind(this)}\n            searchText={searchText}\n            onClickSearch={onClickSearch}/>\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[10]}\n                  />\n\n                }/>\n            <CardContent>\n              {evaluationsApplications == null ?\n                  <LinearProgress color=\"secondary\"    />\n                  :\n                    <Grid\n                        container\n                        spacing={1}>\n                      <Grid\n                          item\n                          md={12}\n                          xs={12}>\n                        <Table>\n                          <TableBody>\n                            {evaluationsApplications.map(application => (\n                                <EvaluationApplicationCard application={application} key={application.id} />  \n                            ))}\n                          </TableBody>\n                        </Table>\n                      </Grid>\n                    </Grid> }\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n              />\n            </CardActions>\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nEvaluationApplicationTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default EvaluationApplicationTable;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TablePagination, CardHeader, Grid, LinearProgress,\n  Box, Typography,\n} from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport api from '../../../../services/api';\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/EvaluationToolbar\";\nimport PropTypes from \"prop-types\";\nimport EvaluationCard from \"../EvaluationCard\";\nimport EvaluationApplicationTable from '../../EvaluationApplication/EvaluationApplicationTable';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(1)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`nav-tabpanel-${index}`}\n          aria-labelledby={`nav-tab-${index}`}\n          {...other}>\n          {value === index && (\n              <Box p={3}>\n                  <Typography>{children}</Typography>\n              </Box>\n          )}\n      </div>\n  );\n}\n\nconst EvaluationTable = props => {\n  const { className, history } = props;\n\n  const [evaluations, setEvaluations] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(0);\n\n  async function loadEvaluations(page) {\n    try {\n      let url = 'evaluation?status=1&page=' + page;\n      if (searchText != '') {\n        url += '&description=' + searchText;\n      }\n      const response = await api.get(url);\n      if (response.status == 200) {\n        setTotal(response.data.total);\n        setEvaluations(response.data.data);\n      } else {\n        setEvaluations([]);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadEvaluations(1);\n  }, [refresh]);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadEvaluations(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadEvaluations(page + 1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const [tabValue, setTabValue] = useState(parseInt(localStorage.getItem('@questione/evaluation-tab')) || 0);\n\n  function LinkTab(props) {\n    return (\n        <Tab\n            component=\"a\"\n            onClick={(event) => {\n                event.preventDefault();\n            }}\n            {...props}\n        />\n    );\n  }\n\n  const handleChangeTab = (event, newValue) => {\n    localStorage.setItem('@questione/evaluation-tab', newValue);\n    setTabValue(newValue);\n  };\n\n  function a11yProps(index) {\n    return {\n        id: `nav-tab-${index}`,\n        'aria-controls': `nav-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabValue}\n        onChange={handleChangeTab}\n        aria-label=\"nav tabs example\"\n      >\n        <LinkTab label=\"Avaliações\" href=\"/drafts\" {...a11yProps(0)} />\n        <LinkTab label=\"Aplicações\" href=\"#\" {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={tabValue} index={0}>\n        <UsersToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}\n        />\n        <div className={classes.content}>\n          <Card\n            className={clsx(classes.root, className)}>\n            <div style={{ margin: '16px' }}>\n              Para mais informações sobre o módulo avaliações,&nbsp;\n              <a\n                href=\"https://docs.google.com/document/d/1FKDHngeXQd5r8CEE8V4EAZFlrM75Nl99vI13zJ3MbTY/edit?usp=sharing\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                clique aqui.\n              </a>\n            </div>\n            <CardHeader\n              avatar={\n                <div>\n\n                </div>\n              }\n              action={\n                <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n                />\n\n              } />\n            <CardContent>\n              {evaluations == null ?\n                <LinearProgress color=\"secondary\" />\n                :\n                <Grid\n                  container\n                  spacing={1}>\n                  <Grid\n                    item\n                    md={12}\n                    xs={12}>\n                    <Table>\n                      <TableBody>\n                        {evaluations.map(evaluation => (\n                          <EvaluationCard evaluation={evaluation}\n                            setTabValue={setTabValue}\n                            setRefresh={setRefresh}\n                            refresh={refresh} />\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>}\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n              />\n            </CardActions>\n          </Card>\n        </div>\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        <EvaluationApplicationTable />\n      </TabPanel>\n    </div>\n  );\n};\n\nEvaluationTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default EvaluationTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport { SearchInput } from '../../../../../../components';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst EvaluationToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/evaluations');\n  }\n\n  const onClickNewCourse = e => {\n    history.push('/course-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Avaliações Arquivadas'}</Typography>\n        <span className={classes.spacer} />\n        <Button className={classes.exportButton}\n                onClick={onClickRequestUsers}>Avaliações</Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar por descrição\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nEvaluationToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(EvaluationToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TablePagination, CardHeader, Grid, LinearProgress\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/EvaluationToolbar\";\nimport PropTypes from \"prop-types\";\nimport EvaluationCard from \"../EvaluationCard\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst EvaluationArchiveTable = props => {\n  const { className, history } = props;\n\n  const [evaluations, setEvaluations] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(0);\n\n  async function loadEvaluations(page){\n    try {\n      let url = 'evaluation?status=2&page='+page;\n      if(searchText != ''){\n        url += '&description='+searchText;\n      }\n      const response = await api.get(url);\n      if(response.status == 200) {\n        setTotal(response.data.total);\n        setEvaluations(response.data.data);\n      } else {\n        setEvaluations([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadEvaluations(1);\n  }, [refresh]);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadEvaluations(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadEvaluations(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n      <div className={classes.root}>\n        <UsersToolbar\n            onChangeSearch={updateSearch.bind(this)}\n            searchText={searchText}\n            onClickSearch={onClickSearch}/>\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[10]}\n                  />\n\n                }/>\n            <CardContent>\n              {evaluations == null ?\n                  <LinearProgress color=\"secondary\"    />\n                  :\n                  <Grid\n                      container\n                      spacing={1}>\n                    <Grid\n                        item\n                        md={12}\n                        xs={12}>\n                      <Table>\n                        <TableBody>\n                          {evaluations.map(evaluation => (\n                              <EvaluationCard evaluation={evaluation}\n                                              setRefresh={setRefresh}\n                                              refresh={refresh}/>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Grid>\n                  </Grid> }\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n              />\n            </CardActions>\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nEvaluationArchiveTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default EvaluationArchiveTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton,\n  TableBody, Table, TableCell,\n  TableRow, TableHead, TablePagination, LinearProgress\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport QuestionCard from \"../../../../components/QuestionCard\";\n\nconst schema = {\n  description: {\n    presence: {allowEmpty: false, message: 'A descrição é obrigatória.'},\n    length: {\n      minimum: 4,\n      maximum: 300,\n      message: 'A descrição deve conter no mínimo 4 e no máximo 300 caracteres.'\n    }\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  fab:{\n    backgroundColor: '#009688',\n    color: '#e0f2f1',\n  },\n  labelRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '10px',\n    padding: '5px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n}));\n\nconst EvaluationDetails = props => {\n  const { className, history, ...rest } = props;\n  const { codigoEvaluation } = props.match.params;\n\n  const classes = useStyles();\n\n  const [questions, setQuestions] = useState(null);\n  const [refresh, setRefresh] = React.useState(0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function saveEvaluationDetails(){\n    try {\n      const description = formState.values.description;\n\n      const id = formState.values.id;\n      const data = {\n        description\n      }\n      let response= {};\n      let acao = \"\";\n      if(!id) {\n         response = await api.post('evaluation', data);\n         acao = \"cadastrada\";\n      } else {\n         response = await api.put('evaluation/'+id, data);\n        acao = \"atualizada\";\n      }\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].description){\n          toast.error(response.data.errors[0].description);\n        }\n      } else {\n        toast.success('Avaluação '+acao+'.');\n        history.push('/evaluations');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function loadQuestionsEvaluation(id, page){\n    try {\n      const response = await api.get('evaluation/show/questions/'+id+'?page='+page);\n      if (response.status === 200) {\n        setQuestions(response.data.data);\n        setTotal(response.data.total);\n      } else {\n        setQuestions([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findAEvaluation(id){\n    try {\n      const response = await api.get('evaluation/show/'+id);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setFormState(formState => ({\n          values: {\n            'questions': response.data[0].questions,\n            'description': response.data[0].description,\n            'id': response.data[0].id\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n        //setQuestions(response.data[0].questions);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    if(codigoEvaluation){\n      findAEvaluation(codigoEvaluation);\n      loadQuestionsEvaluation(codigoEvaluation);\n    } else {\n      setQuestions([]);\n    }\n\n  }, [refresh]);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course==0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values, questions]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handlePageChange = (event, page) => {\n    if(codigoEvaluation) {\n      loadQuestionsEvaluation(codigoEvaluation, page + 1)\n    }\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Avaliação\"/>\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={1}>\n            <Grid\n              item\n              md={12}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('description')}\n                helperText={\n                  hasError('description') ? formState.errors.description[0] : null\n                }\n                label=\"Descrição\"\n                margin=\"dense\"\n                name=\"description\"\n                onChange={handleChange}\n                value={formState.values.description || ''}\n                variant=\"outlined\"\n              />\n              <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  disabled={!formState.isValid}\n                  onClick={saveEvaluationDetails}>\n                Salvar\n              </Button>\n            </Grid>\n            <Divider />\n          </Grid>\n        </CardContent>\n        <Divider />\n      </form>\n    </Card>\n  );\n};\n\nEvaluationDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationDetails;\n","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    IconButton,\n    MenuItem, Menu,\n    Typography,\n    Tooltip,\n    Paper, Box, Grid, Button\n} from '@material-ui/core';\nimport { MoreVert, Delete as DeleteIcon } from '@material-ui/icons';\nimport { withRouter } from \"react-router-dom\";\nimport ReactHtmlParser from 'react-html-parser';\nimport api from '../../../../../services/api';\nimport DialogQuestione from '../../../../../components/DialogQuestione';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: 5,\n        marginBottom: 10,\n        marginRigth: 0,\n        marginLeft: 5,\n        width: '100%'\n    },\n    head: {\n        paddingBottom: 0,\n        paddingTop: 10\n    },\n    chipGreen: {\n        backgroundColor: '#4db6ac',\n        color: '#ffffff',\n        marginRight: 2\n    },\n    chipRed: {\n        backgroundColor: '#f44336',\n        color: '#ffffff',\n        marginRight: 2\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    paper: {\n        display: 'flex',\n        marginBottom: 10,\n        '& > *': {\n            margin: theme.spacing(2),\n        },\n    },\n    paperWrong: {\n        backgroundColor: '#ef9a9a',\n        color: '#212121',\n        margin: 3,\n        padding: 8\n    },\n    paperRight: {\n        backgroundColor: '#80cbc4',\n        color: '#212121',\n        margin: 3,\n        padding: 8\n    },\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n        fontWeight: 'bold',\n        color: '#ffffff'\n    },\n    labelRank: {\n        textAlign: 'right'\n    },\n    lineQuestion: {\n        marginLeft: 20,\n    },\n    content: {\n        width: '100%',\n    },\n    questionActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    deleteButton: {\n        padding: '0px',\n        width: '32px',\n        minWidth: '32px',\n        height: '32px',\n        color: '#ff6333'\n    },\n    correct: {\n        backgroundColor: '#80cbc4',\n    },\n}));\n\nconst QuestionCard = props => {\n    const {\n        className,\n        history,\n        question,\n        setRefresh,\n        refresh,\n        id_evaluation,\n        data,\n        setQuestions,\n        hasApplication,\n        ...rest\n     } = props;\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [openDeleteQuestionEvaluation, setOpenDeleteQuestionEvaluation] = React.useState(false);\n    const [openDeleteQuestion, setOpenDeleteQuestion] = React.useState(false);\n\n    const classes = useStyles();\n\n    /* function loadRank(){\n\n         if(question.rank_avg.length !== 0){\n             setRank(question.rank_avg[0].rank_avg);\n         }\n         if(question.rank_by_user_active.length == 0 &&\n             question.fk_user_id !== localStorage.getItem(\"@Questione-id-user\")) {\n             setRank(0)\n         }\n         setQtRank(question.rank_count);\n     }*/\n\n    // useEffect(() => {\n    //     loadRank();\n    // }, [question, rank]);\n\n    useEffect(() => {\n\n    }, [openDeleteQuestionEvaluation]);\n\n    // useEffect(() => {\n    //     loadRank();\n    //     loadEvaluations();\n    // }, []);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const onClickOpenDialogQEvaluation = () => {\n        setOpenDeleteQuestionEvaluation(true);\n    }\n\n    const onClickCloseDialogQEvaluation = () => {\n        setOpenDeleteQuestionEvaluation(false);\n    }\n\n    const onClickOpenDialogQuestion = () => {\n        setOpenDeleteQuestion(true);\n    }\n\n    // async function deleteQuestion() {\n    //     setOpenDeleteQuestion(false);\n    //     try {\n    //         let url = 'question/' + question.id;\n\n    //         const response = await api.delete(url);\n    //         if (response.status === 202) {\n    //             if (response.data.message) {\n    //                 toast.error(response.data.message);\n    //             }\n    //         } else {\n    //             toast.success('Questão excluída.');\n    //             setRefresh(refresh + 1);\n    //         }\n    //     } catch (error) {\n\n    //     }\n    // }\n\n    async function deleteQuestionEvaluation() {\n        setOpenDeleteQuestionEvaluation(false);\n\n        try {\n            let url = 'evaluation/deletequestion/' + question.fk_question_id + '+?fk_evaluation_id=' + id_evaluation;\n            const fk_evaluation_id = id_evaluation;\n            const data = {\n                fk_evaluation_id\n            }\n            const response = await api.delete(url);\n            if (response.status === 202) {\n                if (response.data.message) {\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Questão excluída da avaliação.');\n                setQuestions((lastQuestions) => lastQuestions.filter((currentQuestion) => currentQuestion.id !== question.id));\n                setRefresh(refresh + 1);\n            }\n        } catch (error) {\n\n        }\n    }\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.lineQuestion}>\n                <div className={classes.questionActions}>\n                    {hasApplication == '0' && (\n                        <Tooltip title=\"Excluir questão da avaliação\">\n                            <Button onClick={onClickOpenDialogQEvaluation} className={classes.deleteButton}>\n                                <DeleteIcon />\n                            </Button>\n                        </Tooltip>\n                    )}\n\n                    {/* <Box display=\"flex\" justifyContent=\"flex-end\" p={1} m={1} bgcolor=\"background.paper\">\n                        <Tooltip title=\"Opções\">\n                            <Box flexDirection=\"row\" alignSelf=\"flex-end\">\n                                <IconButton className={classes.labelRank} aria-label=\"settings\"\n                                    onClick={handleClick}>\n                                    <MoreVert />\n                                </IconButton>\n                            </Box>\n                        </Tooltip>\n                    </Box>\n\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={onClickOpenDialogQEvaluation}>Excluir da Avaliação</MenuItem>\n                    </Menu> */}\n                    <DialogQuestione\n                        handleClose={onClickCloseDialogQEvaluation}\n                        open={openDeleteQuestionEvaluation}\n                        onClickAgree={deleteQuestionEvaluation}\n                        onClickDisagree={onClickCloseDialogQEvaluation}\n                        mesage={'Deseja excluir a questão selecionada da avaliação?'}\n                        title={'Excluir Questão da Avaliação'}\n                    />\n                </div>\n\n                {question.question.skill ?\n                    <div>\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Competência:\n                        </Typography>\n                        {ReactHtmlParser(question.question.skill.description)}\n                    </div>\n                    : null}\n                {question.question.knowledge_objects ?\n                    <div>\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Objeto(s) de Conhecimento:\n                        </Typography>\n                        {question.question.knowledge_objects.map(item => (\n                            ReactHtmlParser(item.description) + '; '\n                        ))}\n                    </div>\n                    : null}\n                    <br />\n                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                    Texto base:\n                </Typography>\n                <div> {ReactHtmlParser(question.question.base_text)} </div>\n                <br />\n                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                    Enunciado:\n                </Typography>\n                <div> {ReactHtmlParser(question.question.stem)} </div>\n                <br />\n                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                    Alternativas:\n                </Typography>\n                <br />\n                {question.question.question_items.map(item => (\n                    <div>\n                        {console.log(item)}\n                        <Paper className={clsx(classes.paper, item.correct_item == 1 ?  classes.correct : null)} variant=\"outlined\"> {ReactHtmlParser(item.description)} </Paper>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nQuestionCard.propTypes = {\n    className: PropTypes.string,\n    question: PropTypes.object,\n    id_evaluation: PropTypes.object,\n    evaluations: PropTypes.object,\n    history: PropTypes.object,\n    setRefresh: PropTypes.func,\n    refresh: PropTypes.number,\n\n};\n\nexport default withRouter(QuestionCard);\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM  from 'react-dom';\nimport Chart from \"react-google-charts\";\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  IconButton,\n  Typography, Grid, Tooltip,\n  Paper, LinearProgress, Box,\n  List, ListItem, Button, Menu, MenuItem\n} from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport api from \"../../../../services/api\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { MoreVert } from '@material-ui/icons';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Close, Done, Block } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogQuestione from '../../../../components/DialogQuestione';\nimport EvaluationQuestionCard from './components/EvaluationQuestionCard';\n\nimport './styles.css';\n\n// import Button from '@material-ui/core/Button';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\n\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  ml: {\n    marginLeft: '8px',\n  },\n  headQuestion: {\n    width: '90.0px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '80px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '10px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '10px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4,\n  },\n  percentageNull: {\n    backgroundColor: '#90a4ae',\n    color: '#fff',\n    display: 'block',\n    margin: '8px',\n    padding: '10px',\n    textAlign: 'center',\n    borderRadius: 4\n  },\n  answerCorrect: {\n    width: '90.0px',\n    backgroundColor: '#5DE2A5',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '60px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  answerIncorrect: {\n    width: '90.0px',\n    backgroundColor: '#F14D76',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '60px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  answerNull: {\n    width: '90.0px',\n    backgroundColor: '#cfd8dc',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '70px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  lineQuestion: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: 30\n  },\n  lineItemQuestion: {\n    width: '100%'\n  },\n  correct: {\n    color: '#80cbc4',\n  },\n  incorrect: {\n    color: '#ef9a9a',\n  },\n  bgCorrect: {\n    background: 'green',\n    color: '#ffffff',\n  },\n  bgIncorrect: {\n    background: 'red',\n    color: '#ffffff',\n  },\n  paper: {\n    display: 'flex',\n    marginBottom: 10,\n    '& > *': {\n        margin: theme.spacing(2),\n    },\n  },\n  paperWrong: {\n      backgroundColor: '#ef9a9a',\n      color: '#212121',\n  },\n  paperWrongFont: {\n    color: '#ef9a9a',\n  },\n  paperRight: {\n      backgroundColor: '#80cbc4',\n      color: '#212121',\n  },\n  paperRightFont: {\n    color: '#80cbc4',\n  },\n  questionActions: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: '32px',\n  },\n  tituloCard: {\n    fontSize: '15px',\n    fontWeight: 'bold'\n  }\n}));\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`nav-tabpanel-${index}`}\n          aria-labelledby={`nav-tab-${index}`}\n          {...other}>\n          {value === index && (\n              <Box p={3}>\n                  <Typography>{children}</Typography>\n              </Box>\n          )}\n      </div>\n  );\n}\n\nconst EvaluationsResultDetails = props => {\n  const { className, history, ...rest } = props;\n  const { evaluationId } = props.match.params;\n  const [questions, setQuestions] = useState(null);\n  const [hasApplication, setHasApplication] = useState(null);\n  const [evaluationDescription, setEvaluationDescription] = useState('');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openDeleteQuestionEvaluation, setOpenDeleteQuestionEvaluation] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(0);\n  // const [showSnackbar, setShowSnackbar] = useState(true);\n//   const [openSnack, setOpenSnack] = React.useState(true);\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n  const classes = useStyles();\n\n  async function loadQuestionsEvaluation(id){\n    try {\n      const response = await api.get('evaluation/show/questions/'+id);\n      if (response.status === 200) {\n        setQuestions(response.data.evaluation_questions);\n        setHasApplication(response.data.has_application);\n        setEvaluationDescription(response.data.evaluation.description);\n      } else {\n        setQuestions([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    if(evaluationId){\n        loadQuestionsEvaluation(evaluationId);\n    } else {\n        setQuestions([]);\n    }\n  }, [refresh]);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const [tabValue, setTabValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `nav-tab-${index}`,\n      'aria-controls': `nav-tabpanel-${index}`,\n    };\n  }\n\n  function LinkTab(props) {\n    return (\n      <Tab\n        component=\"a\"\n        onClick={(event) => {\n          event.preventDefault();\n        }}\n        {...props}\n      />\n    );\n  };\n\n  async function deleteQuestionEvaluation(questionId) {\n    setOpenDeleteQuestionEvaluation(false);\n    try {\n        let url = 'evaluation/deletequestion/'+questionId+'+?fk_evaluation_id='+evaluationId;\n        const fk_evaluation_id = evaluationId;\n        const data = {\n            fk_evaluation_id\n        }\n        const response = await api.delete(url);\n        if (response.status === 202) {\n            if(response.data.message){\n                toast.error(response.data.message);\n            }\n        } else {\n            toast.success('Questão excluída da avaliação.');\n            setRefresh(refresh+1);\n        }\n    } catch (error) {\n\n    }\n}\n\n  const onClickOpenDialogQEvaluation = () => {\n    setOpenDeleteQuestionEvaluation(true);\n  };\n\n  const onClickCloseDialogQEvaluation = () => {\n    setOpenDeleteQuestionEvaluation(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  // const handleCloseSnackbar = () => {\n  //   setShowSnackbar(false);\n  // };\n\n  const difficulty = (porc, totalCorrect) => {\n    if(totalCorrect < 20){\n      return ''\n    }\n    if (porc >= 0.86) {\n      return '- Dificuldade: Muito Fácil'\n    } else if(porc >= 0.61 && porc <= 0.85){\n      return '- Dificuldade: Fácil'\n    } else if(porc >= 0.41 && porc <= 0.60){\n      return '- Dificuldade: Média'\n    } else if(porc >= 0.16 && porc <= 0.40){\n      return '- Dificuldade: Difícil'\n    } else if(porc <= 0.15){\n      return '- Dificuldade: Muito Difícil'\n    }\n    return '';\n  }\n\n  return (\n    <div>\n      {/* <Snackbar open={showSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\n          This is a success message! asd ada sda dd adad a sda d asd asd asd asd asd as da sd ad a sd ad a da d ad a da d asd a da sd ad a da d ad a d\n        </Alert>\n      </Snackbar> */}\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert> */}\n\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}>\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Questões da avaliação\"\n        />\n        <Divider />\n        <Card className={classes.root}>\n          <CardHeader\n              avatar={\n                <div>\n                  <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                    {'Avaliação: '+evaluationDescription}\n                  </Typography>\n                </div>\n              }\n          />\n        </Card>\n\n        <CardContent>\n          {questions == null ?\n            <LinearProgress color=\"secondary\" />\n            :\n            <div>\n              {/* {head.qtdCorrect != null ?\n                <Paper variant=\"outlined\" style={{ padding: '5px', marginBottom: '15px' }}>\n                  <Typography align=\"center\"\n                    variant=\"body2\" color=\"textPrimary\"\n                    style={{\n                      fontWeight: 'bold', fontSize: '15px', marginRight: '5px',\n                    }} className={classes.paperRightFont}>\n                    {head.qtdCorrect >= 2 ? 'Você acertou ' + head.qtdCorrect + ' questões.'\n                      : 'Você acertou ' + head.qtdCorrect + ' questão.'}\n                  </Typography>\n                  <Typography align=\"center\"\n                    variant=\"body2\" color=\"textPrimary\"\n                    style={{\n                      fontWeight: 'bold', fontSize: '15px', marginRight: '5px',\n                    }} className={classes.paperWrongFont}>\n                    {head.qtdIncorrect >= 2 ? 'Você errou ' + head.qtdIncorrect + ' questões.'\n                      : 'Você errou ' + head.qtdIncorrect + ' questão.'}\n                  </Typography>\n\n                </Paper>\n                : null} */}\n\n              <Tabs\n                variant=\"fullWidth\"\n                value={tabValue}\n                onChange={handleChangeTab}\n                aria-label=\"nav tabs example\"\n              >\n                <LinkTab label=\"Questões\" href=\"#\" {...a11yProps(0)} />\n                {/*<LinkTab label=\"Gráfico\" href=\"#\" {...a11yProps(1)} />*/}\n              </Tabs>\n\n              <TabPanel value={tabValue} index={0}>\n                {questions.map((data, i) => (\n                    <ExpansionPanel expanded={expanded === i} key={data.question.id} onChange={handleChange(i)}>\n                        <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-label=\"Expand\"\n                        aria-controls=\"additional-actions1-content\"\n                        id=\"additional-actions1-header\">\n                          <p className={classes.tituloCard}>\n                            Questão {i + 1} {difficulty(data.question.difficulty.porc_correct,\n                                                                data.question.difficulty.total_answers)}\n                          </p>\n\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails key={data.question.id}>\n                          <EvaluationQuestionCard\n                            question={data}\n                            id_evaluation={evaluationId}\n                            setQuestions={setQuestions}\n                            hasApplication={hasApplication}\n                          />\n                        {/* <div className={classes.lineQuestion}>\n                            <div className={classes.questionActions}>\n                                <Button onClick={() => {}} color=\"primary\">\n                                    <DeleteIcon /> Excluir questão\n                                </Button>\n\n                                <DialogQuestione\n                                  handleClose={onClickCloseDialogQEvaluation}\n                                  open={openDeleteQuestionEvaluation}\n                                  onClickAgree={() => deleteQuestionEvaluation(data.question.id)}\n                                  onClickDisagree={onClickCloseDialogQEvaluation}\n                                  mesage={'Deseja excluir a questão selecionada da avaliação?'}\n                                  title={'Excluir Questão da Avaliaçao'}\n                                />\n                            </div>\n\n                            {data.skill ?\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                <Typography align=\"center\"\n                                variant=\"body2\" color=\"textPrimary\"\n                                style={{ fontWeight: 'bold', marginRight: '5px' }} >\n                                Competência:\n                                        </Typography>\n                                <Typography align=\"center\"\n                                variant=\"body2\" color=\"textPrimary\" >\n                                {data.skill.description}\n                                </Typography>\n                            </Grid>\n                            : null}\n                            {data.objects ?\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                <Typography align=\"center\"\n                                variant=\"body2\" color=\"textPrimary\"\n                                style={{ fontWeight: 'bold', marginRight: '5px' }} >\n                                Objeto(s) de Conhecimento:\n                                            </Typography>\n                                <Typography align=\"center\"\n                                variant=\"body2\" color=\"textPrimary\" >\n                                {data.objects.map(item => (\n                                    item.object.description + '; '\n                                ))}\n                                </Typography>\n                            </Grid>\n                            : null}\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Texto base:\n                            </Typography>\n                            <div> { ReactHtmlParser (data.question.base_text) } </div>\n                            <br/>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Enunciado:\n                            </Typography>\n                            <div> { ReactHtmlParser (data.question.stem) } </div>\n                            <br />\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Alternativas:\n                            </Typography>\n                            <br />\n                            {data.question.question_items.map(item => (\n                                <div>\n                                    <Paper className={clsx(classes.paper)} variant=\"outlined\"> { ReactHtmlParser (item.description) } </Paper>\n                                </div>\n                            ))}\n                        </div> */}\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                ))}\n              </TabPanel>\n            </div>\n          }\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nEvaluationsResultDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationsResultDetails;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton, FormControlLabel, Switch, Tooltip, Typography\n} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false,  message: 'A descrição é obrigatória.'},\n    length: {\n      minimum: 4,\n      maximum: 300,\n      message: 'A descrição deve conter no mínimo 4 e no máximo 300 caracteres.'\n    }\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  inputInline: {\n    margin: '0 8px',\n    minWidth: '180px',\n  },\n  row: {\n    margin: '16px 0px',\n  },\n  subGroup: {\n    background: '#FAFAFA',\n    padding: '8px',\n    borderRadius: '4px',\n    border: '1px solid #eeeeee',\n  }\n}));\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationDetails = props => {\n  const { className, history, ...rest } = props;\n\n  const { idApplication } = props.match.params;\n  const [checkedRandom, setCheckedRandom] = React.useState(false);\n  const [checkedShowResult, setCheckedShowResult] = React.useState(false);\n  const [checkedReleasePreviewQuestion, setCheckedReleasePreviewQuestion] = React.useState(false);\n  const [checkedDefineDateAndHourInitial, setCheckedDefineDateAndHourInitial] = React.useState(false);\n  const [checkedDefineDateAndHourFinal, setCheckedDefineDateAndHourFinal] = React.useState(false);\n  const [checkedDefineDuration, setCheckedDefineDuration] = React.useState(false);\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {\n      'show_results' : false,\n      'random_questions' : false\n    },\n    touched: {},\n    errors: {}\n  });\n\n  async function saveApplicationDetails(){\n    try {\n      const {\n        description,\n        date,\n        hour,\n        date_finish,\n        hour_finish,\n        duration,\n        date_release_results,\n        time_release_results,\n      } = formState.values;\n\n      const random_questions = checkedRandom;\n      const show_results = checkedShowResult;\n      const release_preview_question = checkedReleasePreviewQuestion;\n      const data = {\n        description,\n        random_questions,\n        show_results,\n        date_start: checkedDefineDateAndHourInitial && date !== '' ? date : null,\n        time_start: checkedDefineDateAndHourInitial && hour !== '' ? hour : null,\n        date_finish: checkedDefineDateAndHourFinal && date_finish !== '' ? date_finish : null,\n        time_finish: checkedDefineDateAndHourFinal && hour_finish !== '' ? hour_finish : null,\n        time_to_finalize: checkedDefineDuration && duration !== '' ? duration : null,\n        date_release_results: checkedShowResult && date_release_results !== '' ? date_release_results : null,\n        time_release_results: checkedShowResult && time_release_results !== '' ? time_release_results : null,\n        release_preview_question,\n      }\n      const response = await api.put('evaluation/applications/'+idApplication, data);\n\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].description){\n          toast.error(response.data.errors[0].description);\n        }\n      } else {\n        toast.success('Aplicação atualizada.');\n        history.push('/evaluations');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function findAApplication(id){\n    try {\n      const response = await api.get('/evaluation/applications/show/'+id);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setCheckedRandom(response.data.random_questions == 1 ? true : false);\n        setCheckedShowResult(response.data.show_results == 1 ? true : false);\n        if (response.data.date_start) {\n          setCheckedDefineDateAndHourInitial(true);\n        }\n        if (response.data.date_finish) {\n          setCheckedDefineDateAndHourFinal(true);\n        }\n        if (response.data.time_to_finalize) {\n          setCheckedDefineDuration(true);\n        }\n        if (response.data.release_preview_question) {\n          setCheckedReleasePreviewQuestion(true);\n        }\n\n        setFormState(formState => ({\n          values: {\n            'description': response.data.description,\n            'date': response.data.date_start,\n            'hour': response.data.time_start,\n            'date_finish': response.data.date_finish,\n            'hour_finish': response.data.time_finish,\n            'duration': response.data.time_to_finalize,\n            'date_release_results': response.data.date_release_results,\n            'time_release_results': response.data.time_release_results,\n            'release_preview_question': response.data.release_preview_question\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    if(idApplication){\n      findAApplication(idApplication);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const handleChangeRandom = event => {\n    setCheckedRandom(event.target.checked);\n  }\n\n  const handleChangeShowResult = event => {\n    setCheckedShowResult(event.target.checked);\n  }\n\n  const handleChangeReleasePreviewQuestion = event => {\n    setCheckedReleasePreviewQuestion(event.target.checked);\n  }\n\n  const handleChangeDefineDateAndHourInitial = event => {\n    if (!event.target.checked) {\n      setFormState({\n        ...formState,\n        values: {\n          ...formState.values,\n          date: '',\n          hour: '',\n        },\n      })\n    }\n    setCheckedDefineDateAndHourInitial(event.target.checked);\n  }\n\n  const handleChangeDefineDateAndHourFinal = event => {\n    if (!event.target.checked) {\n      setFormState({\n        ...formState,\n        values: {\n          ...formState.values,\n          date_finish: '',\n          hour_finish: '',\n        },\n      })\n    }\n    setCheckedDefineDateAndHourFinal(event.target.checked);\n    setCheckedDefineDuration(false);\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        duration: '',\n      },\n    })\n  }\n\n  const handleChangeDefineDuration = event => {\n    if (!event.target.checked) {\n      setFormState({\n        ...formState,\n        values: {\n          ...formState.values,\n          duration: '',\n        },\n      })\n    }\n    setCheckedDefineDuration(event.target.checked);\n    setCheckedDefineDateAndHourFinal(false);\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        date_finish: '',\n        hour_finish: '',\n      },\n    })\n  }\n\n  const hasError = field => {\n    return formState.touched[field] && formState.errors[field] ? true : false;\n  }\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Aplicação de Avaliação\"/>\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('description')}\n                helperText={\n                  hasError('description') ? formState.errors.description[0] : null\n                }\n                label=\"Descrição\"\n                margin=\"dense\"\n                name=\"description\"\n                onChange={handleChange}\n                value={formState.values.description || ''}\n                variant=\"outlined\"\n              />\n              <TooltipCustomized\n                  title={\n                    <React.Fragment>\n                      <p>\n                        <Typography color=\"textPrimary\" variant=\"body2\">\n                          {'Caso esta opção esteja habilitada, todos os estudantes que forem realizar ' +\n                          ' esta aplicação, receberão' +\n                          ' uma avaliação com as mesmas questões, mas cada estudante possuirá uma ' +\n                          ' avaliação com questões em ordem diferente dos demais estudantes.'}\n                        </Typography>\n                      </p>\n                    </React.Fragment>\n                  }>\n                  <FormControlLabel\n                      control={\n                        <Switch\n                            checked={checkedRandom}\n                            onChange={handleChangeRandom}\n                            name=\"random_questions\"\n                            color=\"primary\"\n                        />\n                      }\n                      label=\"Questões aleatórias?\"\n                  />\n              </TooltipCustomized>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n            className={classes.row}\n          >\n            <TooltipCustomized\n                title={\n                  <React.Fragment>\n                    <p>\n                      <Typography color=\"textPrimary\" variant=\"body2\">\n                        {'Caso esta opção esteja habilitada, poderá ser configurada' +\n                        ' data e hora em que o estudante deverá iniciar a avaliação.' +\n                        ' Caso o estudante não inicie a avaliação no tempo programado, ' +\n                        ' o estudante ficará incapacitado de realizar a avaliação. A tolerância é de 05 minutos, '+\n                        ' ou seja, caso esteja programado para às 18 horas, a avaliação poderá ser iniciada entre '+\n                        ' 17:59 e 18:05.'}\n                      </Typography>\n                    </p>\n                  </React.Fragment>\n                }>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={checkedDefineDateAndHourInitial}\n                      onChange={handleChangeDefineDateAndHourInitial}\n                      name=\"define_date_and_hour\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Definir data e hora inicial?\"\n                />\n            </TooltipCustomized>\n\n            <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.root}\n            >\n              <Collapse in={checkedDefineDateAndHourInitial} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding className={classes.subGroup}>\n                  <ListItem className={classes.nested}>\n                    <TextField\n                      // error={hasError('description')}\n                      // helperText={\n                      //   hasError('description') ? formState.errors.description[0] : null\n                      // }\n                      type=\"date\"\n                      label=\"Data da avaliação\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      margin=\"dense\"\n                      name=\"date\"\n                      onChange={handleChange}\n                      value={formState.values.date || ''}\n                      variant=\"outlined\"\n                      className={classes.inputInline}\n                    />\n                  </ListItem>\n                  <ListItem className={classes.nested}>\n                    <TextField\n                      // error={hasError('description')}\n                      // helperText={\n                      //   hasError('description') ? formState.errors.description[0] : null\n                      // }\n                      type=\"time\"\n                      label=\"Hora de início\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      margin=\"dense\"\n                      name=\"hour\"\n                      onChange={handleChange}\n                      value={formState.values.hour || ''}\n                      variant=\"outlined\"\n                      className={classes.inputInline}\n                    />\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n            className={classes.row}\n          >\n            <TooltipCustomized\n                title={\n                  <React.Fragment>\n                    <p>\n                      <Typography color=\"textPrimary\" variant=\"body2\">\n                        {'Caso esta opção esteja habilitada, poderá ser configurada' +\n                        ' data e hora em que o estudante deverá finalizar a avaliação.' +\n                        ' Caso o estudante não finnalize a avaliação no tempo programado,' +\n                        ' o sistema irá finalizar a avaliação automaticamente (essa informação'+\n                        ' ficará disponível no relatório). '}\n                      </Typography>\n                    </p>\n                  </React.Fragment>\n                }>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={checkedDefineDateAndHourFinal}\n                      onChange={handleChangeDefineDateAndHourFinal}\n                      name=\"define_date_and_hour_final\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Definir data e hora final?\"\n                />\n            </TooltipCustomized>\n\n            <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.root}\n            >\n              <Collapse in={(checkedDefineDateAndHourFinal && !checkedDefineDuration)} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding className={classes.subGroup}>\n                  <ListItem className={classes.nested}>\n                    <TextField\n                      // error={hasError('description')}\n                      // helperText={\n                      //   hasError('description') ? formState.errors.description[0] : null\n                      // }\n                      type=\"date\"\n                      label=\"Data de fim da avaliação\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      margin=\"dense\"\n                      name=\"date_finish\"\n                      onChange={handleChange}\n                      value={formState.values.date_finish || ''}\n                      variant=\"outlined\"\n                      className={classes.inputInline}\n                    />\n                  </ListItem>\n                  <ListItem className={classes.nested}>\n                    <TextField\n                      // error={hasError('description')}\n                      // helperText={\n                      //   hasError('description') ? formState.errors.description[0] : null\n                      // }\n                      type=\"time\"\n                      label=\"Hora de fim da avaliação\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      margin=\"dense\"\n                      name=\"hour_finish\"\n                      onChange={handleChange}\n                      value={formState.values.hour_finish || ''}\n                      variant=\"outlined\"\n                      className={classes.inputInline}\n                    />\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n            className={classes.row}\n          >\n            <TooltipCustomized\n                title={\n                  <React.Fragment>\n                    <p>\n                      <Typography color=\"textPrimary\" variant=\"body2\">\n                        {'Caso esta opção esteja habilitada, poderá ser configurado' +\n                        ' o tempo de duração (em horas) da avaliação. Se for cofigurado 01:00 hora,' +\n                        ' após o estudante iniciar a sua avaliação terá um prazo de uma hora para finalizar. ' +\n                        ' Caso o tempo de duração da avaliação seja de dias, deve-se multiplicar 24 * QUANTIDADE_DE_DIAS'+\n                        ' e informar no campo. '}\n                      </Typography>\n                    </p>\n                  </React.Fragment>\n                }>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={checkedDefineDuration}\n                        onChange={handleChangeDefineDuration}\n                        name=\"define_duration\"\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Definir duração?\"\n                  />\n            </TooltipCustomized>\n\n            <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.root}\n            >\n              <Collapse in={(checkedDefineDuration && !checkedDefineDateAndHourFinal)} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding className={classes.subGroup}>\n                  <ListItem className={classes.nested}>\n                    <TextField\n                      // error={hasError('description')}\n                      // helperText={\n                      //   hasError('description') ? formState.errors.description[0] : null\n                      // }\n                      type=\"time\"\n                      label=\"Duração da prova em horas\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      margin=\"dense\"\n                      name=\"duration\"\n                      onChange={handleChange}\n                      value={formState.values.duration || ''}\n                      variant=\"outlined\"\n                      className={classes.inputInline}\n                    />\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Grid>\n          <Grid\n              item\n              md={6}\n              xs={12}\n              className={classes.row}\n          >\n            <TooltipCustomized\n                title={\n                  <React.Fragment>\n                    <p>\n                      <Typography color=\"textPrimary\" variant=\"body2\">\n                        {'Caso esta opção esteja habilitada, todos os estudantes terão acesso' +\n                        ' ao resultado desta aplicação. Você pode configurar uma data e hora programada' +\n                        ' para que os estudantes tenham acesso aos resultados, e se o estudante' +\n                        ' poderá visualizar a questão completa ou não.'}\n                      </Typography>\n                    </p>\n                  </React.Fragment>\n                }>\n              <FormControlLabel\n                  control={\n                    <Switch\n                        checked={checkedShowResult}\n                        onChange={handleChangeShowResult}\n                        name=\"show_results\"\n                        color=\"primary\"\n                    />\n                  }\n                  label=\"Liberar o resultado?\"\n              />\n            </TooltipCustomized>\n\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                className={classes.root}\n            >\n              <Collapse in={checkedShowResult} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding className={classes.subGroup}>\n                  <ListItem className={classes.nested}>\n                    <TextField\n                        // error={hasError('description')}\n                        // helperText={\n                        //   hasError('description') ? formState.errors.description[0] : null\n                        // }\n                        type=\"date\"\n                        label=\"Data da liberação\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        margin=\"dense\"\n                        name=\"date_release_results\"\n                        onChange={handleChange}\n                        value={formState.values.date_release_results || ''}\n                        variant=\"outlined\"\n                        className={classes.inputInline}\n                    />\n                  </ListItem>\n                  <ListItem className={classes.nested}>\n                    <TextField\n                        // error={hasError('description')}\n                        // helperText={\n                        //   hasError('description') ? formState.errors.description[0] : null\n                        // }\n                        type=\"time\"\n                        label=\"Hora da liberação\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        margin=\"dense\"\n                        name=\"time_release_results\"\n                        onChange={handleChange}\n                        value={formState.values.time_release_results || ''}\n                        variant=\"outlined\"\n                        className={classes.inputInline}\n                    />\n                  </ListItem>\n                  <ListItem className={classes.nested}>\n                    <TooltipCustomized\n                        title={\n                          <React.Fragment>\n                            <p>\n                              <Typography color=\"textPrimary\" variant=\"body2\">\n                                {'Caso esta opção esteja habilitada, o estudante terá acesso' +\n                                ' a todas as informações das questões (texto base, enunciado e alternativas).' +\n                                ' Caso esteja desabilitada, o estudante poderá visualizar apenas se ' +\n                                ' acertou ou errou cada questão.'}\n                              </Typography>\n                            </p>\n                          </React.Fragment>\n                        }>\n                      <FormControlLabel\n                          control={\n                            <Switch\n                                checked={checkedReleasePreviewQuestion}\n                                onChange={handleChangeReleasePreviewQuestion}\n                                name=\"release_preview_question\"\n                                color=\"primary\"\n                            />\n                          }\n                          label=\"Liberar visualização das questões\"\n                      />\n                    </TooltipCustomized>\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={saveApplicationDetails}\n            disabled={!formState.isValid}>\n            Salvar\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nEvaluationApplicationDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationApplicationDetails;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent, IconButton, Paper,\n  Box, Typography, Collapse, Tooltip,\n} from '@material-ui/core';\nimport { ExpandMoreRounded } from \"@material-ui/icons\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageOrange: {\n    backgroundColor: '#F5A623',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  paperWrong: {\n    width: '88%',\n    backgroundColor: '#ef9a9a',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  paperRight: {\n    width: '88%',\n    backgroundColor: '#80cbc4',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  checkedCancel: {\n    color: '#f44336'\n  },\n  lineQuestion: {\n    marginLeft: 20,\n  },\n}));\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationResultsOverviewQuestion = props => {\n  const { className, history, result, numberQuestion, ...rest } = props;\n  const [ answerStudents, setAnswerStudents ] = useState([]);\n  const [expanded, setExpanded] = React.useState(false);\n  const [cancel, setCancel] = React.useState(false);\n\n  const classes = useStyles();\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const difficulty = (porc, totalCorrect) => {\n    if(totalCorrect < 20){\n      return ''\n    }\n    if (porc >= 0.86) {\n      return '- Dificuldade: Muito Fácil'\n    } else if(porc >= 0.61 && porc <= 0.85){\n      return '- Dificuldade: Fácil'\n    } else if(porc >= 0.41 && porc <= 0.60){\n      return '- Dificuldade: Média'\n    } else if(porc >= 0.16 && porc <= 0.40){\n      return '- Dificuldade: Difícil'\n    } else if(porc <= 0.15){\n      return '- Dificuldade: Muito Difícil'\n    }\n    return '';\n  }\n\n  useEffect(() => {\n\n  }, [cancel]);\n\n\n  return (\n      <div>\n            <div>\n              <Card className={classes.root}>\n                <CardHeader\n                    action={\n                      <div>\n                        <Typography variant=\"button\" color=\"body1\" component=\"p\">\n                          Total de Repostas: {result.total_asnwer}\n                        </Typography>\n                        <TooltipCustomized\n                            title={\n                              <React.Fragment>\n                                <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                              </React.Fragment>\n                            }>\n                            <Typography variant=\"button\" color=\"body1\" component=\"p\">\n                              {result.percentage_correct < 30 ?\n                                  <span className={classes.percentageRed}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                  : result.percentage_correct < 70 ?\n                                      <span className={classes.percentageOrange}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                      : <span className={classes.percentageGreen}>{'Correto: '+result.percentage_correct+'%'}</span> }\n                            </Typography>\n                        </TooltipCustomized>\n                        <IconButton\n                            className={clsx(classes.expand, {\n                              [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\">\n                          <ExpandMoreRounded />\n                        </IconButton>\n                      </div>\n                    }\n                    title={`Questão ${(numberQuestion+1)} ${difficulty(result.difficulty.porc_correct, result.difficulty.total_answers)}`}/>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                  <CardContent>\n                    <div className={classes.lineQuestion}>\n                      <div>\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                          {\n                            result.idQuestion < 10 ? 'Questão - 00000' + result.idQuestion :\n                                result.idQuestion < 100 ? 'Questão - 0000' + result.idQuestion :\n                                    result.idQuestion < 1000 ? 'Questão - 000' + result.idQuestion :\n                                        result.idQuestion < 10000 ? 'Questão - 00' + result.idQuestion :\n                                            result.idQuestion < 100000 ? 'Questão - 0' + result.idQuestion :\n                                                result.idQuestion\n                          }\n                        </Typography>\n\n                        <br />\n                      </div>\n                      {/* { result.reference != \"\" && result.reference != null ?\n                          <div>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                              Referência:\n                            </Typography>\n                            <div> { result.reference } </div>\n                            <br />\n                          </div>\n                          : null} */}\n                      { result.skill != null ?\n                          <div>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                              Competência:\n                            </Typography>\n                            <div> { result.skill } </div>\n                            <br />\n                          </div>\n                          : null}\n                      { result.objects != null ?\n                          <div>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                              Objeto(s) de Conhecimento:\n                            </Typography>\n                            {result.objects.map(item => (\n                                <div> { ReactHtmlParser (item.description) } </div>\n                            ))}\n                            <br />\n                          </div>\n                          : null}\n\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Texto base:\n                      </Typography>\n                      <div> { ReactHtmlParser (result.base_text) } </div>\n\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Enunciado:\n                      </Typography>\n                      <div> { ReactHtmlParser (result.stem) } </div>\n\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Alternativas:\n                      </Typography>\n                      <br />\n\n                      {result.itens.map(item => (\n                          item.correct == 1 ?\n                              <div>\n                                <Box display=\"flex\"\n                                     flexWrap=\"nowrap\">\n                                  { item.ordem }\n                                  <Paper className={clsx(classes.paper, classes.paperRight)} elevation={3} variant=\"outlined\">\n                                    { ReactHtmlParser ( item.description)  }\n                                  </Paper>\n                                  <TooltipCustomized\n                                      title={\n                                        <React.Fragment>\n                                          {'Representa o total e a porcentagem de respostas para a alternativa. O cálculo da porcentagem é ' +\n                                          'baseado no total de respostas de cada questão. A cor verde na alternativa representa o gabarito, ' +\n                                          'a cor vermelha representa um distrator.'}\n                                        </React.Fragment>\n                                      }>\n                                      <Box display=\"column\">\n                                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          { item.total_answer_item > 1 ? item.total_answer_item + ' Respostas.'\n                                              : item.total_answer_item + ' Resposta.'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          {item.percentage_answer + '%'}\n                                        </Typography>\n                                      </Box>\n                                  </TooltipCustomized>\n                                </Box>\n                              </div>\n                              :\n                              <div>\n                                <Box display=\"flex\"\n                                     flexWrap=\"nowrap\">\n                                  {item.ordem}\n                                  <Paper className={clsx(classes.paper, classes.paperWrong)} variant=\"outlined\">\n                                    { ReactHtmlParser(item.description) } </Paper>\n                                  <TooltipCustomized\n                                      title={\n                                        <React.Fragment>\n                                          {'Representa o total e a porcentagem de respostas para a alternativa. O cálculo da porcentagem é ' +\n                                          'baseado no total de respostas de cada questão. A cor verde na alternativa representa o gabarito, ' +\n                                          'a cor vermelha representa um distrator.'}\n                                        </React.Fragment>\n                                      }>\n                                      <Box display=\"column\">\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          { item.total_answer_item > 1 ? item.total_answer_item + ' Respostas.'\n                                              : item.total_answer_item + ' Resposta.'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          {item.percentage_answer + '%'}\n                                        </Typography>\n                                      </Box>\n                                  </TooltipCustomized>\n                                </Box>\n                              </div>\n                      ))}\n                    </div>\n\n                  </CardContent>\n                </Collapse>\n              </Card>\n            </div>\n      </div>\n  );\n};\n\nEvaluationApplicationResultsOverviewQuestion.propTypes = {\n  className: PropTypes.string,\n  result: PropTypes.object,\n  numberQuestion: PropTypes.number,\n};\n\nexport default EvaluationApplicationResultsOverviewQuestion;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent, Paper,\n  Box, Typography, Tooltip, Tab, Tabs, LinearProgress,\n} from '@material-ui/core';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageOrange: {\n    backgroundColor: '#F5A623',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  paperWrong: {\n    width: '88%',\n    backgroundColor: '#ef9a9a',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  paperRight: {\n    width: '88%',\n    backgroundColor: '#80cbc4',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  checkedCancel: {\n    color: '#f44336'\n  },\n  lineQuestion: {\n    marginLeft: 20,\n  },\n  labelRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '10px',\n    padding: '5px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n}));\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`nav-tabpanel-${index}`}\n          aria-labelledby={`nav-tab-${index}`}\n          {...other}\n      >\n        {value === index && (\n            <Box p={3}>\n              <Typography>{children}</Typography>\n            </Box>\n        )}\n      </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n      <Tab\n          component=\"a\"\n          onClick={(event) => {\n            event.preventDefault();\n          }}\n          {...props}\n      />\n  );\n}\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationResultsSkillObjects = props => {\n  const { className, history, result, objects, skills, ...rest } = props;\n  const [ value, setValue] = React.useState(0);\n\n  const classes = useStyles();\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n\n  }, []);\n\n  return (\n      <div>\n        <Paper className={classes.root}>\n          <Tabs\n              variant=\"fullWidth\"\n              value={value}\n              onChange={handleChangeTab}\n              aria-label=\"nav tabs example\">\n            <LinkTab label=\"Competências\" href=\"#\" {...a11yProps(0)} />\n            <LinkTab label=\"Objetos de Conhecimento\" href=\"/#\" {...a11yProps(1)} />\n\n          </Tabs>\n          <TabPanel value={value} index={0}>\n            { skills == null ?\n                <LinearProgress color=\"secondary\" />\n                :\n                skills.length == 0 ?\n                    <span className={classes.labelRed}>Esta avaliação não possui competências associadas.</span>\n                :\n                skills.map(result => (\n                  <Card\n                      {...rest}\n                      className={classes.root}>\n                    <CardHeader\n                        className={classes.head}\n                        avatar={\n                          <div>\n                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                              {'Curso : '+result.course }\n                            </Typography>\n                          </div>\n                        }\n                        action={\n                          <div>\n                            <TooltipCustomized\n                                title={\n                                  <React.Fragment>\n                                    {'O Total de questões representa a quantidade de todas as questões que foram aplicadas na avaliação com a competência '}\n                                    <b>{result.description}</b>{' associada.'}\n                                  </React.Fragment>\n                                }>\n                              <Typography variant=\"body1\" component=\"p\">\n                                {'Total de questões: '+result.total_questions}\n                              </Typography>\n                            </TooltipCustomized>\n                            <TooltipCustomized\n                                title={\n                                  <React.Fragment>\n                                    {'O Total de respostas representa a quantidade de todas as respostas cadastradas para todas as questões com a competência '}\n                                    <b>{result.description}</b>{' associada.'}\n                                  </React.Fragment>\n                                }>\n                              <Typography variant=\"body1\" component=\"p\">\n                                {'Total de respostas: '+result.total_answer}\n                              </Typography>\n                            </TooltipCustomized>\n\n                            <TooltipCustomized\n                                title={\n                                  <React.Fragment>\n                                    <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                    <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                    <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                  </React.Fragment>\n                                }>\n                              <Typography variant=\"body1\" component=\"p\">\n                                {result.percentage_correct < 30 ?\n                                    <span className={classes.percentageRed}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                    : result.percentage_correct < 70 ?\n                                        <span className={classes.percentageOrange}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                        : <span className={classes.percentageGreen}>{'Correto: '+result.percentage_correct+'%'}</span> }\n                              </Typography>\n                            </TooltipCustomized>\n\n                          </div>\n                        }/>\n                        <CardContent>\n                          <Typography variant=\"h4\" color=\"textPrimary\" component=\"h2\">\n                            {result.description }\n                          </Typography>\n                        </CardContent>\n                  </Card>\n            ))}\n\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            {objects == null ?\n                <LinearProgress color=\"secondary\"    />\n                :\n                objects.length == 0 ?\n                <span className={classes.labelRed}>Esta avaliação não possui objetos de conhecimento associados.</span>\n                :\n              objects.map(result => (\n                <Card\n                    {...rest}\n                    className={classes.root}>\n                  <CardHeader\n                      className={classes.head}\n                      avatar={\n                        <div>\n                          <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                            {'Curso : '+result.course }\n                          </Typography>\n                        </div>\n                      }\n                      action={\n                        <div>\n                          <TooltipCustomized\n                              title={\n                                <React.Fragment>\n                                  {'O Total de questões representa a quantidade de todas as questões que foram aplicadas na avaliação com o objeto de conhecimento '}\n                                  <b>{result.description}</b>{' associado.'}\n                                </React.Fragment>\n                              }>\n                            <Typography variant=\"body1\" component=\"p\">\n                              {'Total de questões: '+result.total_questions}\n                            </Typography>\n                          </TooltipCustomized>\n                          <TooltipCustomized\n                              title={\n                                <React.Fragment>\n                                  {'O Total de respostas representa a quantidade de todas as respostas cadastradas para todas as questões com o objeto de conhecimento '}\n                                  <b>{result.description}</b>{' associado.'}\n                                </React.Fragment>\n                              }>\n                            <Typography variant=\"body1\" component=\"p\">\n                              {'Total de respostas: '+result.total_answer}\n                            </Typography>\n                          </TooltipCustomized>\n\n                          <TooltipCustomized\n                              title={\n                                <React.Fragment>\n                                  <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                  <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                  <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                </React.Fragment>\n                              }>\n                            <Typography variant=\"body1\" component=\"p\">\n                              {result.percentage_correct < 30 ?\n                                  <span className={classes.percentageRed}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                  : result.percentage_correct < 70 ?\n                                      <span className={classes.percentageOrange}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                      : <span className={classes.percentageGreen}>{'Correto: '+result.percentage_correct+'%'}</span> }\n                            </Typography>\n                          </TooltipCustomized>\n\n                        </div>\n                      }/>\n                      <CardContent>\n                        <Typography variant=\"h4\" color=\"textPrimary\" component=\"h2\">\n                          {result.description }\n                        </Typography>\n                      </CardContent>\n                </Card>\n\n            ))}\n\n          </TabPanel>\n\n\n        </Paper>\n\n      </div>\n  );\n};\n\nEvaluationApplicationResultsSkillObjects.propTypes = {\n  className: PropTypes.string,\n  skills: PropTypes.array.isRequired,\n  objects: PropTypes.array.isRequired,\n};\n\nexport default EvaluationApplicationResultsSkillObjects;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider, IconButton, Table, TableHead, TableRow,\n  TableCell, TableBody, Tab, Paper, Tabs,\n  Box, Typography, AppBar, Tooltip, LinearProgress\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Done, Close, Block } from \"@material-ui/icons\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport EvaluationApplicationResultsOverviewQuestion from \"./EvaluationApplicationResultsOverViewQuestion\";\nimport EvaluationApplicationResultsSkillObjects from \"./EvaluationApplicationResultsSkillObjects\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  headStudent: {\n    width: '100px ',\n    height: '115px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    paddingLeft: '12px',\n    boxSizing: 'border-box',\n    border: '1px solid #f2f2f2',\n    lineHeight: '40px',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial'\n  },\n  headPercentage: {\n    width: '30px',\n    height: '90px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    paddingLeft: '12px',\n    boxSizing: 'border-box',\n    border: '1px solid #f2f2f2',\n    lineHeight: '40px',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial'\n  },\n  bodyStudent: {\n    maxWidth: '170px',\n    width: '100px',\n    height: '82px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    paddingLeft: '6px',\n    boxSizing: 'border-box',\n    fontWeight: 'bold',\n    border: '1px solid #f2f2f2',\n    lineHeight: '20px',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'auto',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial',\n  },\n  bodyPercentage: {\n    width: '20%',\n    height: '82px',\n    textAlign: 'center',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    boxSizing: 'border-box',\n    fontWeight: 'bold',\n    border: '1px solid #f2f2f2',\n    lineHeight: '15px',\n    fontSize: '12px',\n    whiteSpace: 'nowrap',\n    overflow: 'auto',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial'\n  },\n  headQuestion: {\n    width: '90px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '115px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageOrange: {\n    backgroundColor: '#F5A623',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageNull: {\n    backgroundColor: '#90a4ae',\n    color: '#fff',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    borderRadius: 4\n  },\n  answerCorrect: {\n    width: '90.0px',\n    backgroundColor: '#5DE2A5',\n    //display: 'inline-block',\n    color: '#ffffff',\n    textAlign: 'center',\n    height: '82px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '25px',\n  },\n  answerIncorrect: {\n    width: '90.0px',\n    backgroundColor: '#F14D76',\n    //display: 'inline-block',\n    color: '#ffffff',\n    textAlign: 'center',\n    height: '82px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '25px',\n  },\n  answerNull: {\n    width: '90.0px',\n    backgroundColor: '#cfd8dc',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '82px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  paperWrong: {\n    width: '88%',\n    backgroundColor: '#ef9a9a',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  paperRight: {\n    width: '88%',\n    backgroundColor: '#80cbc4',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  labelStudent: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`nav-tabpanel-${index}`}\n          aria-labelledby={`nav-tab-${index}`}\n          {...other}\n      >\n        {value === index && (\n            <Box p={3}>\n              <Typography>{children}</Typography>\n            </Box>\n        )}\n      </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n      <Tab\n          component=\"a\"\n          onClick={(event) => {\n            event.preventDefault();\n          }}\n          {...props}\n      />\n  );\n}\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationResults = props => {\n  const { className, history, ...rest } = props;\n  const { idApplication } = props.match.params;\n  const [ avgCorrectQuestions, setAvgCorrectQuestions ] = useState(0);\n  const [ totalVarianceQuestions, setTotalVarianceQuestions ] = useState(0);\n  const [ totalVarianceStudents, setTotalVarianceStudents ] = useState(0);\n  const [ answerStudents, setAnswerStudents ] = useState(null);\n  const [ overviewQuestions, setOverviewQuestions ] = useState(null);\n  const [ overviewQuestionsHead, setOverviewQuestionsHead ] = useState([]);\n  const [ objects, setObjects ] = useState(null);\n  const [ skills, setSkills ] = useState(null);\n  const [ expanded, setExpanded] = React.useState(false);\n  const [ value, setValueTab] = React.useState(0);\n\n  const classes = useStyles();\n\n  async function findResultsSkill(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-percentage-question-by-skill/'+id);\n      if (response.status === 200) {\n        setSkills(response.data);\n      } else {\n        setSkills([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findResultsObjects(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-percentage-question-by-objects/'+id);\n      if (response.status === 200) {\n        setObjects(response.data);\n      } else {\n        setObjects([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findOverviewQuestions(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-percentage-question/'+id);\n\n      if (response.status === 200) {\n        setOverviewQuestions(response.data[0].questions);\n        setOverviewQuestionsHead(response.data[0]);\n        setTotalVarianceQuestions(response.data[0].variance_total);\n      } else {\n        setOverviewQuestions([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findResults(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-answer-students/'+id);\n\n      if (response.status === 200) {\n        setAnswerStudents(response.data.students);\n        setTotalVarianceStudents(response.data.variance_total);\n        setAvgCorrectQuestions(response.data.avg_correct_question);\n      } else {\n        setAnswerStudents([]);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n\n  }, [answerStudents]);\n\n  useEffect(() => {\n    if(idApplication){\n      findResults(idApplication);\n      findOverviewQuestions(idApplication);\n      findResultsSkill(idApplication);\n      findResultsObjects(idApplication);\n    }\n\n  }, []);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValueTab(newValue);\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n      <div>\n        <Card\n            {...rest}\n            className={clsx(classes.root, className)}>\n          <div className={classes.contentHeader}>\n            <IconButton onClick={handleBack}>\n              <ArrowBackIcon />\n            </IconButton>\n          </div>\n          <CardHeader\n              subheader=\"\"\n              title=\"Resultado da Aplicação\"/>\n          <Divider />\n          <Card className={classes.root}>\n            {overviewQuestionsHead.idApplication!= null ?\n              <CardContent>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {'Código da aplicação: '+overviewQuestionsHead.idApplication +'.'}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {'Descrição da aplicação: '+overviewQuestionsHead.description_application + '.'}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {overviewQuestionsHead.qtdQuestions > 1 ?\n                      'Esta avaliação possui '+ overviewQuestionsHead.qtdQuestions + ' questões.' :\n                      'Esta avaliação possui '+ overviewQuestionsHead.qtdQuestions + ' questão.'}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {overviewQuestionsHead.qtdStudents > 1 ?\n                      'Esta avaliação foi respondida por '+ overviewQuestionsHead.qtdStudents +' estudantes.' :\n                      'Esta avaliação foi respondida por '+ overviewQuestionsHead.qtdStudents +' estudante.'\n                      }\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  { avgCorrectQuestions != 0 ?\n                    avgCorrectQuestions > 1 ?\n                      'Esta avaliação possui uma média de acerto igual a '+ avgCorrectQuestions + ' questões por estudante.' :\n                      'Esta avaliação possui uma média de acerto igual a '+ avgCorrectQuestions + ' questão por estudante.' :\n                  null}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                { overviewQuestionsHead.percentagem_geral_correct_evaluation != 0 ?\n                  'A porcentagem média de questões corretas é: '+ overviewQuestionsHead.percentagem_geral_correct_evaluation+'%.' :\n                  null}\n                </Typography>\n                { overviewQuestionsHead.qtdStudents > 1 && totalVarianceStudents > 0 ?\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {'Alfa de Cronbach: '+\n                  (overviewQuestionsHead.qtdQuestions/(overviewQuestionsHead.qtdQuestions-1) *\n                      (1-(totalVarianceQuestions/totalVarianceStudents))).toFixed(3)\n                      + '.'}\n                </Typography> : null }\n                { answerStudents == null ? null :\n                  !answerStudents[0] ?\n                    <span className={classes.percentageRed}>SEM RESULTADO</span>\n                   : null }\n              </CardContent> : null }\n          </Card>\n          { answerStudents == null ?\n              <LinearProgress color=\"secondary\"    />\n              :\n            answerStudents[0] ?\n            <CardContent className={classes.content}>\n                <AppBar position=\"static\">\n                  <Tabs\n                      variant=\"fullWidth\"\n                      value={value}\n                      onChange={handleChange}\n                      aria-label=\"nav tabs example\">\n                    <LinkTab label=\"Visão Geral\" href=\"/drafts\" {...a11yProps(0)} />\n                    <LinkTab label=\"Questões\" href=\"/trash\" {...a11yProps(1)} />\n                    <LinkTab label=\"Outros Dados\" href=\"/spam\" {...a11yProps(2)} />\n                  </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0}>\n                  <Box\n                      display=\"flex\"\n                      flexWrap=\"nowrap\"\n                      p={1}\n                      m={1}\n                      bgcolor=\"background.paper\">\n                      <Box p={1}>\n                          <Table>\n                            <TableHead>\n                              <TableRow>\n                                <TableCell  className={classes.headStudent}>Aluno(a)</TableCell>\n                                <TooltipCustomized\n                                    title={\n                                      <React.Fragment>\n                                        <Typography color=\"inherit\">\n                                          {'Dado um conjunto de dados, a variância ('}σ<sup>2</sup>{')  é uma medida de dispersão que mostra o quão ' +\n                                        'distante cada valor desse conjunto está do valor central (médio). Quanto menor é a variância, ' +\n                                        'mais próximos os valores estão da média; mas quanto maior ' +\n                                        'ela é, mais os valores estão distantes da média.'}\n                                        </Typography>\n                                        <Typography color=\"inherit\">\n                                          <b>{'Abaixo está o significado das cores para o cabeçalho da questão:'}</b>\n                                        </Typography>\n                                        <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                        <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                        <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                      </React.Fragment>\n                                    }>\n                                    <TableCell className={classes.headPercentage}>% de Acerto</TableCell>\n                                </TooltipCustomized>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {answerStudents.map(result => (\n                                  <TableRow\n                                      className={classes.tableRow}\n                                      hover\n                                      key={result.fk_user_id}>\n                                    <TooltipCustomized\n                                        title={\n                                          <React.Fragment>\n                                            <Typography align=\"center\" color=\"inherit\" style={{fontWeight: 'bold'}}>\n                                              {result.student}\n                                              </Typography>\n                                            <p>\n                                              <Typography color=\"textPrimary\" variant=\"caption\">\n                                                {'O estudante iniciou em '+ moment(result.hr_start).utc().format('MMMM Do YYYY, h:mm:ss a')+'.'}\n                                              </Typography>\n                                            </p>\n                                            <p>\n                                              <Typography color=\"textPrimary\" variant=\"caption\">\n                                                {result.hr_finished != null ?\n                                                    'O estudante finalizou em '+ moment(result.hr_finished).format('MMMM Do YYYY, h:mm:ss a')+'.' :\n                                                    'A avaliação não foi finalizada pelo estudante.'}\n                                              </Typography>\n                                            </p>\n                                            <p>\n                                              {result.hr_finished != null ?\n                                                  <Typography color=\"textPrimary\" variant=\"caption\">\n                                                    {'Tempo de prova: '+result.total_time}\n                                                  </Typography> : null }\n                                            </p>\n                                            <p>\n                                              {result.finished_automatically === 1 ?\n                                                  <Typography color=\"textPrimary\" variant=\"caption\">\n                                                    Finalizada automaticamente\n                                                  </Typography> : null }\n                                            </p>\n                                          </React.Fragment>\n                                        }>\n                                        <TableCell className={classes.bodyStudent}>\n                                          <div className={classes.labelStudent}>\n                                            {result.student}\n                                            <Typography color=\"textSecondary\" variant=\"caption\">\n                                              {result.finished_automatically === 1 ? 'Finalizada automaticamente' : result.total_time == 'Avaliação não finalizada.' ? result.total_time : 'Tempo: '+result.total_time}\n                                            </Typography>\n                                          </div>\n                                        </TableCell>\n                                    </TooltipCustomized>\n                                    <TableCell align=\"center\" style={{margin: '0px'}} className={classes.bodyPercentage}>\n                                      {result.percentage_correct < 30 ?\n                                          <span className={classes.percentageRed}>{result.percentage_correct+'%'}</span>\n                                          : result.percentage_correct < 70 ?\n                                              <span className={classes.percentageOrange}>{result.percentage_correct+'%'}</span>\n                                              : <span className={classes.percentageGreen}>{result.percentage_correct+'%'}</span> }\n                                      <Typography style={{margin: '0px'}} variant=\"caption\" color=\"textPrimary\" display=\"block\" gutterBottom>\n                                        σ<sup>2</sup>{' = '+result.variance}\n                                      </Typography>\n                                    </TableCell>\n\n                                  </TableRow>\n                              ))}\n                            </TableBody>\n                          </Table>\n                      </Box>\n                    <PerfectScrollbar>\n                      <Box p={1}>\n\n                            <div className={classes.inner}>\n                                <Table>\n                                  <TableHead>\n                                    <TableRow>\n                                      {!overviewQuestions ? null :\n                                          overviewQuestions.map((result, i) => (\n                                          <TooltipCustomized\n                                              title={\n                                                <React.Fragment>\n                                                  <Typography color=\"inherit\">\n                                                    {'Dado um conjunto de dados, a variância ('}σ<sup>2</sup>{')  é uma medida de dispersão que mostra o quão ' +\n                                                                    'distante cada valor desse conjunto está do valor central (médio). Quanto menor é a variância, ' +\n                                                    'mais próximos os valores estão da média; mas quanto maior ' +\n                                                    'ela é, mais os valores estão distantes da média.'}\n                                                  </Typography>\n                                                  <Typography color=\"inherit\">\n                                                    <b>{'Abaixo está o significado das cores para o cabeçalho da questão:'}</b>\n                                                  </Typography>\n                                                  <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                                  <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                                  <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                                </React.Fragment>\n                                              }>\n                                            <TableCell className={classes.headQuestion}>\n                                              {'Q' + (i+1)}\n                                              {result.percentage_correct_round < 30 ?\n                                                  <span className={classes.percentageRed}>{result.percentage_correct_round+'%'}</span>\n                                                  : result.percentage_correct_round < 70 ?\n                                                      <span className={classes.percentageOrange}>{result.percentage_correct_round+'%'}</span>\n                                                      : <span className={classes.percentageGreen}>{result.percentage_correct_round+'%'}</span> }\n                                              <Typography variant=\"caption\" color=\"textPrimary\" gutterBottom>\n                                                        σ<sup>2</sup>{'='+result.variance}\n                                              </Typography>\n                                            </TableCell>\n                                          </TooltipCustomized>\n                                      ))}\n                                    </TableRow>\n                                  </TableHead>\n                                  <TableBody>\n                                    {!answerStudents ? null :\n                                        answerStudents.map(result => (\n                                        <TooltipCustomized\n                                            title={\n                                              <React.Fragment>\n                                                <Typography align=\"center\" color=\"inherit\">\n                                                    A letra informa a alternativa que o estudante selecionou.</Typography>\n                                                <span className={classes.percentageRed}>{'Errou'}</span>\n                                                <span className={classes.percentageGreen}>{'Acertou'}</span>\n                                                <span className={classes.percentageNull}>{'Não respondeu'}</span>\n                                              </React.Fragment>\n                                            }>\n                                            <TableRow\n                                                className={classes.tableRow}\n                                                hover\n                                                key={result.fk_user_id}>\n                                              {result.questions.map(quest => (\n                                                  quest.itemSelected == null ?\n                                                      <TableCell className={classes.answerNull}>\n                                                        <Block />\n                                                      </TableCell>\n                                                      :\n                                                  quest.correct == 1 ?\n                                                      <TableCell className={classes.answerCorrect}>\n                                                        {quest.ordemQuestion}\n                                                        <Done />\n\n                                                      </TableCell> :\n                                                      <TableCell className={classes.answerIncorrect}>\n                                                        {quest.ordemQuestion}\n                                                        <Close />\n                                                      </TableCell>\n                                              ))}\n\n                                            </TableRow>\n                                        </TooltipCustomized>\n                                    ))}\n                                  </TableBody>\n                                </Table>\n                            </div>\n\n                      </Box>\n                    </PerfectScrollbar>\n                  </Box>\n                </TabPanel>\n               {/*visão geral das questões */}\n                <TabPanel value={value} index={1}>\n                  { !overviewQuestions ? null :\n                      overviewQuestions.map((result, i) => (\n                    <EvaluationApplicationResultsOverviewQuestion\n                                                      result={result} numberQuestion={i}/>\n                      ))}\n                </TabPanel>\n                {/* competências e objetos de conhecimento */}\n                <TabPanel value={value} index={2}>\n                  <EvaluationApplicationResultsSkillObjects\n                                skills={skills}\n                                objects={objects}/>\n                </TabPanel>\n          </CardContent>\n              : null }\n       </Card>\n      </div>\n  );\n};\n\nEvaluationApplicationResults.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationApplicationResults;\n","import React from 'react';\nimport { useTimer } from 'react-timer-hook';\n\n// import { Container } from './styles';\n\nfunction Timer({ expiryTimestamp, onExpire, setShowTimeDialog }) {\n    const {\n        seconds,\n        minutes,\n        hours,\n        days,\n    } = useTimer({ expiryTimestamp, autoStart: true, onExpire, format: '12-hour' });\n\n    console.log('========> ', days);\n\n    const addZeroToLeft = (value) => {\n        if (`${value}`.length === 1) {\n            return `0${value}`;\n        }\n\n        return value;\n    }\n\n    const getTimeColor = (hours, minutes, seconds) => {\n\n        if(parseInt(hours) === 0) {\n            // if (parseInt(minutes, 10) === 10 && parseInt(seconds, 10) === 0) {\n            //     setShowTimeDialog({\n            //         show: true,\n            //         message: 'Restam 10 minutos'\n            //     });\n            // }\n\n            // if (parseInt(minutes, 10) === 20 && parseInt(seconds, 10) === 0) {\n            //     setShowTimeDialog({\n            //         show: true,\n            //         message: 'Restam 20 minutos'\n            //     });\n            // }\n\n            if (parseInt(minutes, 10) <= 10) {\n                return '#ff3030';\n            }\n\n            if (parseInt(minutes, 10) <= 20) {\n                return '#0000ff';\n            }\n        }\n\n        return '#546e7a';\n    };\n\n    return (\n        <div className=\"timer\" style={{ width: 'max-content', padding: '0px 4px', fontWeight: 'bold', color: getTimeColor(hours, minutes, seconds) }}>\n            {days > 0 && (\n                <>\n                    <span>{days} dias e </span>\n                </>\n            )}\n            <span>{addZeroToLeft(hours)}</span>:\n            <span>{addZeroToLeft(minutes)}</span>:\n            <span>{addZeroToLeft(seconds)}</span>\n        </div>\n    );\n}\n\nexport default Timer;\n","import Timer from './Timer';\nexport default Timer;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {\n  Typography,\n  Card,\n  CardHeader,\n  Avatar,\n  CardContent,\n  CardActions, List, ListItem, Button, CircularProgress,\n    Backdrop, Grid, Tooltip\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport api from \"../../../services/api\";\nimport {getInitials} from \"../../../helpers\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport clsx from \"clsx\";\nimport { toast } from 'react-toastify';\nimport {DialogQuestione} from \"../../../components\";\nimport Timer from \"../../../components/Timer\";\n\nimport './styles.css';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  lineQuestion: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: 30\n  },\n  lineItemQuestion: {\n    width: '100%'\n  },\n  buttons: {\n    marginRight: 10\n  },\n  chipRed:{\n    backgroundColor: '#e57373',\n    color: '#ffffff',\n    marginRight: 10\n  },\n  hide: {\n    opacity: 0,\n  }\n});\n\nconst DoEvaluation = props => {\n  const { className, history, ...rest } = props;\n  const { codeAplication } = props.match.params;\n  const [application, setApplication] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [totalAnswers, setTotalAnswers] = useState(0);\n  const [dateTimeToFinalized, setDateTimeToFinalized] = useState(null);\n  const [dateServer, setDateServer] = useState(new Date());\n  const [dialogStart, setDialogStart] = useState(false);\n  const [dialogFinish, setDialogFinish] = useState(false);\n  const [enableButtonStart, setEnableButtonStart] = useState(true);\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(0);\n  const [showTimeDialog, setShowTimeDialog] = useState({\n    show: false,\n    message: '',\n  });\n  const timer = React.useRef();\n\n  const classes = useStyles();\n\n  function getExpiryTimestamp(timestampTime) {\n    // const { date } = dateServer;\n    // const time = new Date(date.replace(' ', 'T'));\n\n    const time = new Date();\n\n    time.setSeconds(time.getSeconds() + Math.floor(timestampTime / 1000));\n\n    return time;\n  }\n\n  async function listApplication() {\n    try {\n      const response = await api.get('evaluation/get-application/'+codeAplication);\n\n      if(response.status == 200){\n        if(response.data.status == 0){\n          toast.error('A avaliação está desabilitada.');\n          history.push('/home');\n          return ;\n        }\n        if(response.data.evaluation.status == 2){\n          toast.error('A avaliação está arquivada.');\n          history.push('/home');\n          return ;\n        }\n        setApplication(response.data);\n      } else if (response.status == 202) {\n        toast.error(response.data.message);\n        history.push('/home');\n        return ;\n      } else {\n        toast.error('Ocorreu um erro ao buscar a avaliação.');\n        history.push('/home');\n        return ;\n      }\n    } catch (error) {\n\n    }\n\n  }\n\n  async function startEvaluation(event){\n    setOpenBackdrop(true);\n    timer.current = setTimeout(() => {\n      updateEvaluation();\n    }, 1300);\n    setDialogStart(false);\n    event.preventDefault();\n\n  }\n\n  async function updateEvaluation(){\n    try {\n      const response = await api.post('evaluation/start/'+codeAplication);\n\n      if (response.status === 202) {\n        setOpenBackdrop(false);\n        if(response.data.message){\n          toast.error(response.data.message);\n          if (response.data.closed) {\n            history.push('/home');\n          }\n        }\n      } else if(response.status == 200){\n        if(response.data.status == 0){\n          toast.error('Avaliação está desabilitada.');\n          history.push('/home');\n          return ;\n        }\n        setAnswers(response.data[0]);\n\n        let totalAlreadyAnswer = 0;\n        response.data[0].forEach((item) => {\n          if (item.answer) {\n            totalAlreadyAnswer = totalAlreadyAnswer +  1;\n          }\n        });\n        setTotalAnswers(totalAlreadyAnswer);\n\n        setDateTimeToFinalized(response.data.date_time_to_finalized);\n        setDateServer(response.data.date_time_to_finalized);\n\n        setRefresh(refresh+1);\n        setEnableButtonStart(false);\n        setOpenBackdrop(false);\n      }\n    } catch (error) {\n\n    }\n    setDialogStart(false);\n  }\n\n  async function autoFinishEvaluation() {\n    try {\n      const response = await api.put('evaluation/finish/'+codeAplication, {\n        finished_automatically: 1,\n      });\n\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else if(response.status == 200){\n        toast.error('Tempo para responder a avaliação esgotado!');\n        history.push('/student/result-evaluations');\n      }\n    } catch (error) {\n\n    }\n    setDialogFinish(false);\n  }\n\n  async function finshEvaluation(){\n    try {\n      const response = await api.put('evaluation/finish/'+codeAplication);\n\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else if(response.status == 200){\n        toast.success('Avaliação respondida com sucesso!');\n        history.push('/student/result-evaluations');\n      }\n    } catch (error) {\n\n    }\n    setDialogFinish(false);\n\n  }\n\n  useEffect(() => {\n\n  }, [refresh]);\n\n  useEffect(() => {\n    listApplication();\n  }, []);\n\n  async function handleListItemClick (event, answerId, itemQuestionSelected) {\n\n    try {\n      const id = answerId;\n      const answer =   itemQuestionSelected;\n      const data = {\n        id, answer\n      }\n      const response = await api.put('evaluation/answer/'+codeAplication, data);\n\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n          if (response.data.closed) {\n            history.push('/home');\n          }\n        }\n      }  else if(response.status == 200){\n        const values = answers;\n        let totalAlreadyAnswer = 0;\n        values.forEach(function logArrayElements(element, index, array) {\n          if(element.id == answerId){\n            element.answer = itemQuestionSelected;\n          }\n\n          if (element.answer) {\n            totalAlreadyAnswer = totalAlreadyAnswer + 1;\n          }\n        });\n\n        setTotalAnswers(totalAlreadyAnswer);\n        setAnswers(values);\n        setRefresh(refresh+1);\n      }\n\n    } catch (error) {\n\n    }\n\n  };\n\n  const handleToggle = (value) => () => {\n\n  };\n\n  const onClickCloseDialogStart = () => {\n    setDialogStart(false);\n  }\n\n  const onClickOpenDialogStart = () => {\n    setDialogStart(true);\n  }\n\n  const onClickOpenDialogFinsh = () => {\n    setDialogFinish(true);\n  }\n\n  const onClickCloseDialogFinish = () => {\n    setDialogFinish(false);\n  }\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n\n  return (\n      <div className=\"do-evaluation-screen\">\n        <Backdrop className={classes.backdrop} open={openBackdrop} onClick={handleCloseBackdrop}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        { application.id ?\n        <div className={classes.root}>\n          <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                  <div>\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                      {getInitials(localStorage.getItem(\"@Questione-name-user\"))}\n                    </Avatar>\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                    {'Aluno(a): '+localStorage.getItem(\"@Questione-name-user\") }\n                    </Typography>\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                      {'Avaliação: '+application.evaluation.description}\n                    </Typography>\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                      {'Código da aplicação: '+application.id_application}\n                    </Typography>\n                    {application && application.evaluation.practice !== 1 && (\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        {'Professor(a): '+application.evaluation.user.name}\n                      </Typography>\n                    )}\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Para mais informações sobre como responder a avaliação,&nbsp;\n                        <a\n                          href=\"https://docs.google.com/document/d/1o_rd-CN_Or0X9gk1c9aB6oB69jWMi-zOGJ7gs8LNEvc/edit?usp=sharing\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          clique aqui\n                        </a>\n                    </Typography>\n                    {!enableButtonStart && dateTimeToFinalized && (\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          Tempo restante:\n                          <Timer\n                            expiryTimestamp={\n                              getExpiryTimestamp(\n                                ((new Date(dateTimeToFinalized.date.replace(' ', 'T'))).getTime() - (new Date()).getTime())\n                              )\n                            }\n                            onExpire={autoFinishEvaluation}\n                            setShowTimeDialog={() => {}}\n                          />\n                        </div>\n                      </Typography>\n                    )}\n                    {answers.length !== 0 && (\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Questões respondidas:\n                        <b> {totalAnswers+'/'+answers.length}</b>\n                      </Typography>\n                    )}\n                  </div>\n                }\n            />\n\n            <CardActions disableSpacing>\n              <div style={{ width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                  <Tooltip title=\"Você poderá iniciar/continuar sua avaliação clicando neste botão.\" placement=\"top\">\n                    <Button\n                      className={classes.buttons}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={startEvaluation}\n                      disabled={!enableButtonStart}>\n                      {application && application.student_started === 1 ? 'Continuar' : 'Iniciar' }\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title=\"Você poderá finalizar sua avaliação clicando neste botão.\" placement=\"top\">\n                    <Button\n                      className={clsx(classes.chipRed, className)}\n                      variant=\"contained\"\n                      color=\"#e57373\"\n                      onClick={onClickOpenDialogFinsh}\n                      disabled={enableButtonStart}>\n                      Finalizar\n                    </Button>\n                  </Tooltip>\n                </div>\n              </div>\n\n            </CardActions>\n          </Card>\n\n          {answers.map((data, i) => (\n              <ExpansionPanel expanded={expanded === i} key={data.id} onChange={handleChange(i)}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-label=\"Expand\"\n                    aria-controls=\"additional-actions1-content\"\n                    id=\"additional-actions1-header\">\n                  <FormControlLabel\n                      aria-label=\"Acknowledge\"\n                      onClick={(event) => event.stopPropagation()}\n                      onFocus={(event) => event.stopPropagation()}\n                      control={(\n                        <Tooltip title={data.answer != null ? 'Esta questão já foi respondida' : 'Não respondida'}>\n                          <Checkbox\n                            className={data.answer != null ? '' : classes.hide}\n                            checked={data.answer != null}\n                          />\n                        </Tooltip>\n                      )}\n                      label={(i + 1) <10 ? ('Questão 00' + (i + 1)) :\n                              (i + 1) <100 ? ('Questão 0' + (i + 1)) : (i + 1)}\n                  />\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails key={data.id}>\n                  <div className={classes.lineQuestion}>\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                      Texto base:\n                    </Typography>\n                    <div> { ReactHtmlParser (data.evaluation_question_without_correct.question_without_correct.base_text) } </div>\n                    <br/>\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                      Enunciado:\n                    </Typography>\n                    <div> { ReactHtmlParser (data.evaluation_question_without_correct.question_without_correct.stem) } </div>\n                    <br />\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                      Alternativas:\n                    </Typography>\n                    <br />\n                    {data.evaluation_question_without_correct.question_without_correct.question_items_without_correct.map(item => (\n                        <Tooltip title=\"Clique para escolher esta alternativa.\" placement=\"top-start\">\n                          <List className={classes.lineItemQuestion}\n                                key={item.id}\n                                onClick={handleToggle(item.id)}\n                                component=\"nav\" aria-label=\"secondary mailbox folder\">\n                            <ListItem key={item.id}\n                                      selected={data.answer == item.id}\n                                button onClick={(event) => handleListItemClick(event, data.id, item.id)}>\n                              { ReactHtmlParser (item.description)  }\n                            </ListItem>\n                          </List>\n                        </Tooltip>\n                    ))}\n                  </div>\n\n\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n          ))}\n          {!enableButtonStart && (\n            <Button\n              className={clsx(classes.chipRed, className)}\n              variant=\"contained\"\n              color=\"#e57373\"\n              onClick={onClickOpenDialogFinsh}\n              disabled={enableButtonStart}\n              style={{ margin: '16px 0px', marginLeft: '16px' }}\n            >\n              Finalizar\n            </Button>\n          )}\n        </div>\n              : null}\n        <DialogQuestione handleClose={onClickCloseDialogStart}\n                         open={dialogStart}\n                         onClickAgree={startEvaluation}\n                         onClickDisagree={onClickCloseDialogStart}\n                         mesage={`${application && application.student_started === 1 ? 'Deseja continuar a avaliação?' : 'Deseja iniciar a avaliação?'}`}\n                         title={'Responder Avaliação'}/>\n        <DialogQuestione handleClose={onClickCloseDialogFinish}\n                         open={dialogFinish}\n                         onClickAgree={finshEvaluation}\n                         onClickDisagree={onClickCloseDialogFinish}\n                         mesage={'Deseja finalizar a avaliação?'}\n                         title={'Finalizar Avaliação'}/>\n\n        {/* <Dialog\n              open={showTimeDialog.show}\n              onClose={() => setShowTimeDialog({ ...showTimeDialog, show: false })}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\">\n              <DialogTitle id=\"alert-dialog-title\">Tempo de prova</DialogTitle>\n              <DialogContent>\n                  <DialogContentText id=\"alert-dialog-description\">\n                    {showTimeDialog.message}\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                  <Button onClick={() => setShowTimeDialog({ ...showTimeDialog, show: false })} color=\"primary\">\n                      Ok\n                  </Button>\n              </DialogActions>\n          </Dialog> */}\n      </div>\n  );\n};\n\nDoEvaluation.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default DoEvaluation;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {Grid, IconButton} from '@material-ui/core';\nimport { StartEvaluationCard } from '../../../components';\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3),\n  },\n  startEvaluation: {\n    marginTop: theme.spacing(6),\n    paddingBottom: theme.spacing(20)\n  }\n}));\n\nconst StartEvaluation = props => {\n  const { className, history, ...rest } = props;\n  const classes = useStyles();\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <div  className={classes.root}>\n      <div>\n        <IconButton onClick={handleBack}>\n          <ArrowBackIcon />\n        </IconButton>\n      </div>\n      <div className={classes.startEvaluation}>\n        <StartEvaluationCard colorBox=\"#ff9800\"/>\n      </div>\n    </div>\n  );\n};\n\nStartEvaluation.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default StartEvaluation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Typography} from '@material-ui/core';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst EvaluationResultStudentToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Avaliações respondidas'}</Typography>\n        <span className={classes.spacer} />\n      </div>\n        {/*<div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>*/}\n    </div>\n  );\n};\n\nEvaluationResultStudentToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(EvaluationResultStudentToolbar);\n","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  IconButton,\n  Typography, Table, TableBody, CardActions, TablePagination, Tooltip, Switch, Chip, Grid, LinearProgress\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport ToolbarEvaluation\n  from \"./EvaluationResultToolbar/EvaluationResultStudentToolbar\";\nimport {Close, FormatListBulleted, PlayArrow} from \"@material-ui/icons\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 10,\n    position: 'relative',\n  },\n  content: {\n    padding: 0\n  },\n  labelRed: {\n    backgroundColor: '#daa520',\n    display: 'block',\n    margin: '2px',\n    padding: '3px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  chipblue: {\n    margin: 3,\n    marginTop: '16px',\n    backgroundColor: '#2196f3',\n    color: '#fff',\n  },\n  chippurple: {\n    margin: 3,\n    marginTop: '16px',\n    backgroundColor: '#4a148c',\n    color: '#fff',\n  },\n  chipred: {\n    margin: 3,\n    marginTop: '16px',\n    backgroundColor: '#d2691e',\n    color: '#fff',\n  },\n  chipgreen: {\n    margin: 3,\n    marginTop: '16px',\n    backgroundColor: '#6b8e23',\n    color: '#fff',\n  },\n  dFlex: {\n    display: 'flex',\n  },\n  releaseResultsMessage: {\n    position: 'absolute',\n    top: '16px',\n    left: '16px',\n  }\n}));\n\nconst EvaluationsResultStudentTable = props => {\n  const { className, history, ...rest } = props;\n  const [ evaluations, setEvaluations ] = useState(null);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n\n  const classes = useStyles();\n\n  async function load(newPage){\n    try {\n      const responseHead = await api.get(`/evaluation/student/result/evaluations?page=${newPage}`);\n      if (responseHead.status === 200) {\n        setEvaluations(responseHead.data.data);\n        setTotal(responseHead.data.total);\n      } else {\n        setEvaluations([]);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    load(1);\n  }, []);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handlePageChange = (event, page) => {\n    load(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    load(1);\n  }\n\n  const results = (idHead) => {\n    history.push('/student/result-evaluations/details/'+idHead);\n  }\n\n  return (\n      <div className={classes.root}>\n        <ToastContainer autoClose={10000} position=\"bottom-center\"/>\n        <ToolbarEvaluation\n            onChangeSearch={updateSearch.bind(this)}\n            searchText={searchText}\n            onClickSearch={onClickSearch}/>\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[10]}\n                  />\n\n                }/>\n            <CardContent>\n              {evaluations == null ?\n                  <LinearProgress color=\"secondary\"    />\n                  :\n                    <Grid\n                        container\n                        spacing={1}>\n                      <Grid\n                          item\n                          md={12}\n                          xs={12}>\n                        <Table>\n                          <TableBody>\n                            {evaluations.map(application => (\n                              <div key={application.id}>\n                                <Card\n                                  {...rest}\n                                  className={classes.root}\n                                >\n                                  {/*application.evaluation_application.canShowResults == 0 && (\n                                    <div className={classes.releaseResultsMessage}>\n                                      Data de liberação dos resultados:\n                                      <span> </span>\n                                      {moment(`${application.evaluation_application.date_release_results} ${application.evaluation_application.time_release_results}`).format('DD/MM/YYYY H:mm')}\n                                    </div>\n                                  )*/}\n                                  <CardHeader\n                                      className={classes.head}\n                                      action={\n                                        <div>\n                                          <div className={classes.dFlex}>\n                                            { application.evaluation_application.show_results == 1 &&\n                                                application.evaluation_application.canShowResults == 1 && application.finalized_at ?\n                                            <Tooltip title=\"Visualizar resultados\">\n                                              <IconButton\n                                                  aria-label=\"copy\"\n                                                  onClick={() => results(application.id)}>\n                                                <FormatListBulleted/>\n                                              </IconButton>\n                                            </Tooltip>\n                                              :\n                                                application.evaluation_application.canShowResults == 0 && application.evaluation_application.show_results == 1\n                                                    ? <span className={classes.labelRed}>{'Resultado em: '+moment(`${application.evaluation_application.date_release_results} ${application.evaluation_application.time_release_results}`).format('DD/MM/YYYY H:mm')}</span>\n                                                        :\n                                                          application.evaluation_application.show_results == 0 && application.finalized_at && <span className={classes.labelRed}>{'Resultado indisponível.'}</span>\n                                            }\n\n                                            {!application.finalized_at && application.finished_automatically === 0 && (\n                                                <Tooltip title=\"Realizar avaliação\">\n                                                    <IconButton\n                                                        aria-label=\"settings\"\n                                                        onClick={() => history.push(`/code/${application.evaluation_application.id_application}`)}>\n                                                        <PlayArrow />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            )}\n                                          </div>\n                                        </div>\n                                      }/>\n                                      <CardContent>\n                                        <div>\n                                          <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                                            {'Descrição da avaliação: '+application.evaluation_application.evaluation.description }\n                                          </Typography>\n                                          <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                                            {'Descrição da aplicação: '+application.evaluation_application.description }\n                                          </Typography>\n                                          {application.evaluation_application.evaluation.practice !== 1 && (\n                                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                                              {'Professor(a): '+application.evaluation_application.evaluation.user.name }\n                                            </Typography>\n                                          )}\n\n                                          {application.finalized_at && (\n                                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                                              {'Data de realização: '+moment(application.finalized_at).format('DD/MM/YYYY H:mm') }\n                                            </Typography>\n                                          )}\n\n                                          {application.evaluation_application.evaluation.practice === 1 && (\n                                            <Chip label=\"Pratique\" className={clsx(classes.chippurple, className)} size=\"small\"/>\n                                          )}\n\n                                          {application.finalized_at && application.finished_automatically === 0 && (\n                                            <Chip label=\"Finalizada\" className={clsx(classes.chipred, className)} size=\"small\"/>\n                                          )}\n\n                                          {application.finalized_at && application.finished_automatically === 1 && (\n                                            <Chip label=\"Finalizada automaticamente\" className={clsx(classes.chipred, className)} size=\"small\"/>\n                                          )}\n\n                                          {!application.finalized_at && application.finished_automatically === 0 && (\n                                            <Chip label=\"Iniciada\" className={clsx(classes.chipgreen, className)} size=\"small\"/>\n                                          )}\n                                        </div>\n                                      </CardContent>\n                                </Card>\n                              </div>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </Grid>\n                    </Grid> }\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n              />\n            </CardActions>\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nEvaluationsResultStudentTable.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationsResultStudentTable;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM  from 'react-dom';\nimport Chart from \"react-google-charts\";\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  IconButton,\n  Typography, Grid, Tooltip,\n  Paper, LinearProgress, Box,\n  List, ListItem\n} from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport api from \"../../../../services/api\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Close, Done, Block } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport './styles.css';\n\n// import Button from '@material-ui/core/Button';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\n\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  ml: {\n    marginLeft: '8px',\n  },\n  headQuestion: {\n    width: '90.0px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '80px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '10px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '10px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4,\n  },\n  percentageNull: {\n    backgroundColor: '#90a4ae',\n    color: '#fff',\n    display: 'block',\n    margin: '8px',\n    padding: '10px',\n    textAlign: 'center',\n    borderRadius: 4\n  },\n  answerCorrect: {\n    width: '90.0px',\n    backgroundColor: '#5DE2A5',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '60px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  answerIncorrect: {\n    width: '90.0px',\n    backgroundColor: '#F14D76',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '60px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  answerNull: {\n    width: '90.0px',\n    backgroundColor: '#cfd8dc',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '70px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  lineQuestion: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: 30\n  },\n  lineItemQuestion: {\n    width: '100%'\n  },\n  correct: {\n    color: '#80cbc4',\n  },\n  incorrect: {\n    color: '#ef9a9a',\n  },\n  bgCorrect: {\n    background: 'green',\n    color: '#ffffff',\n  },\n  bgIncorrect: {\n    background: 'red',\n    color: '#ffffff',\n  },\n  paper: {\n    display: 'flex',\n    marginBottom: 10,\n    '& > *': {\n        margin: theme.spacing(2),\n    },\n  },\n  paperWrong: {\n      backgroundColor: '#ef9a9a',\n      color: '#212121',\n  },\n  paperWrongFont: {\n    color: '#ef9a9a',\n  },\n  paperRight: {\n      backgroundColor: '#80cbc4',\n      color: '#212121',\n  },\n  paperRightFont: {\n    color: '#80cbc4',\n  },\n  tituloCard: {\n    fontSize: '15px',\n    fontWeight: 'bold'\n  }\n}));\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`nav-tabpanel-${index}`}\n          aria-labelledby={`nav-tab-${index}`}\n          {...other}>\n          {value === index && (\n              <Box p={3}>\n                  <Typography>{children}</Typography>\n              </Box>\n          )}\n      </div>\n  );\n}\n\nconst EvaluationsResultDetails = props => {\n  const { className, history, ...rest } = props;\n  const { idHead } = props.match.params;\n  const [head, setHead] = useState([]);\n  const [questions, setQuestions] = useState(null);\n  const [applicationDescription, setApplicationDescription] = useState(null);\n  // const [showSnackbar, setShowSnackbar] = useState(true);\n  const [openSnack, setOpenSnack] = React.useState(true);\n\n  const classes = useStyles();\n\n  const [showQuestionPreview, setShowQuestionPreview] = React.useState(false);\n\n  async function findHead() {\n    try {\n\n      const response = await api.get('/evaluation/student/result/evaluations-specific/' + idHead);\n\n      if (response.status == 200) {\n        setQuestions(response.data.questions);\n        setShowQuestionPreview(response.data.question_preview);\n        setApplicationDescription(response.data.application.description);\n\n        setHead(response.data);\n      } if (response.status == 202) {\n        if (response.data.message) {\n          toast.error(response.data.message); //https://www.npmjs.com/package/react-toastify/v/1.4.3\n          //toast.error(response.data.message);\n          // showSnackbar(true);\n          setQuestions([]);\n          setHead([]);\n          history.push('/student/result-evaluations/');\n        } else {\n          setQuestions([]);\n          setHead([]);\n        }\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    findHead();\n\n  }, []);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const [tabValue, setTabValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `nav-tab-${index}`,\n      'aria-controls': `nav-tabpanel-${index}`,\n    };\n  }\n\n  function LinkTab(props) {\n    return (\n      <Tab\n        component=\"a\"\n        onClick={(event) => {\n          event.preventDefault();\n        }}\n        {...props}\n      />\n    );\n  };\n\n  const difficulty = (porc, totalCorrect) => {\n    if(totalCorrect < 20){\n      return ''\n    }\n    if (porc >= 0.86) {\n      return '- Dificuldade: Muito Fácil'\n    } else if(porc >= 0.61 && porc <= 0.85){\n      return '- Dificuldade: Fácil'\n    } else if(porc >= 0.41 && porc <= 0.60){\n      return '- Dificuldade: Média'\n    } else if(porc >= 0.16 && porc <= 0.40){\n      return '- Dificuldade: Difícil'\n    } else if(porc <= 0.15){\n      return '- Dificuldade: Muito Difícil'\n    }\n    return '';\n  }\n\n  // const handleCloseSnackbar = () => {\n  //   setShowSnackbar(false);\n  // };\n\n  return (\n    <div>\n      {/* <Snackbar open={showSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n        <Alert onClose={handleCloseSnackbar} severity=\"success\">\n          This is a success message! asd ada sda dd adad a sda d asd asd asd asd asd as da sd ad a sd ad a da d ad a da d asd a da sd ad a da d ad a d\n        </Alert>\n      </Snackbar> */}\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert> */}\n\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}>\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Avaliação\" />\n        <Divider />\n        {applicationDescription && (\n          <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                  <div>\n                    <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                      {'Descrição da aplicação: '+applicationDescription}\n                    </Typography>\n                  </div>\n                }\n            />\n          </Card>\n        )}\n        <CardContent>\n          {questions == null ?\n            <LinearProgress color=\"secondary\" />\n            :\n            <div>\n              {head.qtdCorrect != null ?\n                <Paper variant=\"outlined\" style={{ padding: '5px', marginBottom: '15px' }}>\n                  <Typography align=\"center\"\n                    variant=\"body2\" color=\"textPrimary\"\n                    style={{\n                      fontWeight: 'bold', fontSize: '15px', marginRight: '5px',\n                    }} className={classes.paperRightFont}>\n                    {head.qtdCorrect >= 2 ? 'Você acertou ' + head.qtdCorrect + ' questões.'\n                      : 'Você acertou ' + head.qtdCorrect + ' questão.'}\n                  </Typography>\n                  <Typography align=\"center\"\n                    variant=\"body2\" color=\"textPrimary\"\n                    style={{\n                      fontWeight: 'bold', fontSize: '15px', marginRight: '5px',\n                    }} className={classes.paperWrongFont}>\n                    {head.qtdIncorrect >= 2 ? 'Você errou ' + head.qtdIncorrect + ' questões.'\n                      : 'Você errou ' + head.qtdIncorrect + ' questão.'}\n                  </Typography>\n\n                </Paper>\n                : null}\n\n              <Tabs\n                variant=\"fullWidth\"\n                value={tabValue}\n                onChange={handleChangeTab}\n                aria-label=\"nav tabs example\"\n              >\n                <LinkTab label=\"Questões\" href=\"#\" {...a11yProps(0)} />\n                {/*<LinkTab label=\"Gráfico\" href=\"#\" {...a11yProps(1)} />*/}\n              </Tabs>\n\n              <TabPanel value={tabValue} index={0}>\n                {showQuestionPreview ? (\n                  questions.map((data, i) => (\n                    <ExpansionPanel expanded={expanded === i} key={data.question.id} onChange={handleChange(i)}>\n                      <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-label=\"Expand\"\n                        aria-controls=\"additional-actions1-content\"\n                        id=\"additional-actions1-header\"\n                      >\n                        {/* <FormControlLabel\n                          aria-label=\"Acknowledge\"\n                          onClick={(event) => event.stopPropagation()}\n                          onFocus={(event) => event.stopPropagation()}\n                          control={(\n                            // <Tooltip title={data.question.answer != null ? 'Esta questão já foi respondida' : 'Não respondida'}>\n                            //   <Checkbox\n                            //     className={data.question.answer != null ? '' : classes.hide}\n                            //     checked={data.question.answer != null}\n                            //   />\n                            // </Tooltip>\n                          )}\n                          label={(i + 1) <10 ? ('Questão 00' + (i + 1)) :\n                                    (i + 1) <100 ? ('Questão 0' + (i + 1)) : (i + 1)}\n                        /> */}\n                        {console.log(data)}\n                        <p className={classes.tituloCard}>\n                          Questão {i + 1} {difficulty(data.question.difficulty.porc_correct,\n                            data.question.difficulty.total_answers)}\n                        </p>\n                         <span className={classes.ml}>\n                            {data.correct == 1 ? (\n                              <CheckIcon className={classes.correct} />\n                            ) : (\n                              <CloseIcon className={classes.incorrect} />\n                            )}\n                        </span>\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails key={data.question.id}>\n                        <div className={classes.lineQuestion}>\n                          {data.skill ?\n                              <div>\n                                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                  Competência:\n                                </Typography>\n                                {ReactHtmlParser(data.skill.description)}\n                              </div>\n                            : null}\n                          {data.objects ?\n                              <div>\n                                <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                  Objeto(s) de Conhecimento:\n                                </Typography>\n                                {data.objects.map(item => (\n                                    ReactHtmlParser(item.object.description) + '; '\n                                ))}\n                              </div>\n                            : null}\n                            <br />\n                          <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Texto base:\n                          </Typography>\n                          <div> { ReactHtmlParser (data.question.base_text) } </div>\n                          <br/>\n                          <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Enunciado:\n                          </Typography>\n                          <div> { ReactHtmlParser (data.question.stem) } </div>\n                          <br />\n                          <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                            Alternativas:\n                          </Typography>\n                          <br />\n                          {data.answer == null ?\n                              <p className={classes.paperWrongFont}>Você não respondeu esta questão.</p> : null }\n                          {data.question.items.map(item => (\n                             item.correct_item == 1 ?\n                                 <div>\n                                    <Paper className={clsx(classes.paper, classes.paperRight)}   variant=\"outlined\"> { ReactHtmlParser (item.description)  }</Paper>\n                                   {data.answer == item.id && item.correct_item == 1 ? <p className={classes.paperRightFont}>Você marcou esta alternativa e acertou.</p> :\n                                       <p className={classes.paperRightFont}>Esta é a alterantiva correta.</p>}\n                                 </div>\n                              : <div>\n                                 <Paper className={clsx(classes.paper, data.answer == item.id && item.correct_item == 0 ? classes.paperWrong : '')} variant=\"outlined\"> { ReactHtmlParser (item.description) } </Paper>\n                                   {data.answer == item.id && item.correct_item == 0 ? <p className={classes.paperWrongFont}>Você marcou esta alternativa e errou.</p> : null}\n                                 </div>\n                              // <Tooltip title=\"Clique para escolher esta alternativa.\" placement=\"top-start\">\n                              //   <List\n                              //     className={classes.lineItemQuestion}\n                              //     key={item.id}\n                              //     // onClick={handleToggle(item.id)}\n                              //     component=\"nav\" aria-label=\"secondary mailbox folder\"\n                              //   >\n                              //     <ListItem\n                              //       key={item.id}\n                              //       selected={data.question.answer == item.id}\n                              //       button\n                              //       className={`\n                              //         ${item.correct_item == 1 && classes.bgCorrect} ${data.answer == item.id && item.correct_item == 0 && classes.bgIncorrect}`}\n                              //       // onClick={(event) => handleListItemClick(event, data.id, item.id)}\n                              //     >\n                              //       { ReactHtmlParser (item.description)  }\n                              //     </ListItem>\n                              //   </List>\n                              // </Tooltip>\n                          ))}\n                        </div>\n                      </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                  ))\n                ) : (\n                  questions.map((result, i) => (\n                    <div style={{ marginBottom: '30px' }}>\n                      <Typography align=\"center\" style={{ fontWeight: 'bold' }}\n                        variant=\"h5\" component=\"h2\">\n                        {'Questão ' + (i + 1)}\n                      </Typography>\n                      {result.skill ?\n                        <Grid\n                          container\n                          direction=\"row\"\n                          justify=\"center\"\n                          alignItems=\"center\">\n                          <Typography align=\"center\"\n                            variant=\"body2\" color=\"textPrimary\"\n                            style={{ fontWeight: 'bold', marginRight: '5px' }} >\n                            Competência:\n                                    </Typography>\n                          <Typography align=\"center\"\n                            variant=\"body2\" color=\"textPrimary\" >\n                            {result.skill.description}\n                          </Typography>\n                        </Grid>\n                        : null}\n                      {result.objects ?\n                        <Grid\n                          container\n                          direction=\"row\"\n                          justify=\"center\"\n                          alignItems=\"center\">\n                          <Typography align=\"center\"\n                            variant=\"body2\" color=\"textPrimary\"\n                            style={{ fontWeight: 'bold', marginRight: '5px' }} >\n                            Objeto(s) de Conhecimento:\n                                      </Typography>\n                          <Typography align=\"center\"\n                            variant=\"body2\" color=\"textPrimary\" >\n                            {result.objects.map(item => (\n                              item.object.description + '; '\n                            ))}\n                          </Typography>\n                        </Grid>\n                        : null}\n                      {result.answer == null ?\n                        <span className={classes.percentageNull}><Block /></span>\n                        :\n                        result.correct == 1 ?\n                          <span className={classes.percentageGreen}><Done /></span>\n                          :\n                          <span className={classes.percentageRed}><Close /></span>}\n                    </div>\n                  ))\n                )}\n              </TabPanel>\n\n              {/*<TabPanel value={tabValue} index={1}>\n                <Chart\n                  width=\"100%\"\n                  height={200}\n                  chartType=\"ColumnChart\"\n                  loader={<div>Caregando gráfico</div>}\n                  data={\n                    [\n                      ['Acerto', 'Resposta correta'],\n                    ].concat(questions.map((result, i) => {\n                      return [`Questão ${i + 1}`, result.correct && result.correct == 1 ? 1 : 0];\n                    }))\n                  }\n                  options={{\n                    title: 'Resultado das respostas',\n                    chartArea: { width: '80%' },\n                    hAxis: {\n                      title: 'Questão',\n                      minValue: 0,\n                      viewWindow: {\n                        min: 0\n                      }\n                    },\n                    vAxis: {\n                      title: 'Acertadas/Erradas',\n                      // viewWindowMode:'explicit',\n                      viewWindow: {\n                        min: 0\n                      }\n                    },\n                  }}\n                  legendToggle\n                />\n              </TabPanel>*/}\n            </div>\n          }\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nEvaluationsResultDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationsResultDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport { SearchInput } from '../../../../../../components';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst TypeOfEvaluationToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  // const onClickRequestUsers = () => {\n  //   history.push('/users/requests');\n  // }\n\n  const onClickNewTypeOfEvaluation = e => {\n    history.push('/type-of-evaluation-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Tipos de Avaliação'}</Typography>\n        <span className={classes.spacer} />\n        <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={onClickNewTypeOfEvaluation}>\n          Novo tipo\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nTypeOfEvaluationToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(TypeOfEvaluationToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Tooltip,\n  Button,\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/TypeOfEvaluationToolbar\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport { DialogQuestione } from \"../../../../components\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TypeOfEvaluationTable = props => {\n  const { className, history } = props;\n\n  const [typeOfEvaluations, setTypeOfEvaluations] = useState([]);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [idTypeOfEvaluationDelete, setIdTypeOfEvaluationDelete] = React.useState(0);\n\n  async function loadTypeOfEvaluations(page){\n    try {\n      let url = '/type-of-evaluation?page='+page;\n\n      if(searchText != ''){\n        url += '&description='+searchText;\n      }\n      const response = await api.get(url);\n\n      setTotal(response.data.total);\n      setTypeOfEvaluations(response.data.data);\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadTypeOfEvaluations(1);\n  }, []);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadTypeOfEvaluations(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadTypeOfEvaluations(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const onClickOpenDialog = (id) => {\n    setIdTypeOfEvaluationDelete(id);\n    setOpen(true);\n  }\n\n  const onClickCloseDialog = () => {\n    setOpen(false);\n    setIdTypeOfEvaluationDelete(0);\n  }\n\n  async function onDeleteObject(){\n    try {\n      let url = '/type-of-evaluation/'+idTypeOfEvaluationDelete;\n      const response = await api.delete(url);\n\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        toast.success('Tipo de avaliação excluído.');\n        loadTypeOfEvaluations(page+1);\n      }\n    } catch (error) {\n\n    }\n    setOpen(false);\n  }\n\n  const onClickEdit = (id) => {\n    history.push('/type-of-evaluation-details/'+id);\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n      <UsersToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}/>\n      <div className={classes.content}>\n        <Card\n            className={clsx(classes.root, className)}>\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.headTable}>Descrição</TableCell>\n                      <TableCell className={classes.headTable}></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {typeOfEvaluations.map(typeOfEvaluation => (\n                        <TableRow\n                            className={classes.tableRow}\n                            hover\n                            key={typeOfEvaluation.id}>\n                          <TableCell>{typeOfEvaluation.description}</TableCell>\n                          <TableCell className={classes.row}>\n                            <Tooltip title=\"Deletar\">\n                              <Button\n                                  className={classes.buttonDelete}\n                                  onClick={() => onClickOpenDialog(typeOfEvaluation.id)}>\n                                <Delete fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                            <Tooltip title=\"Editar\">\n                              <Button\n                                  className={classes.buttonEdit}\n                                  onClick={() => onClickEdit(typeOfEvaluation.id)}>\n                                <Edit fontSize=\"medium\"/>\n                              </Button>\n                            </Tooltip>\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n                component=\"div\"\n                count={total}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleRowsPerPageChange}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10]}\n            />\n          </CardActions>\n        </Card>\n         <DialogQuestione handleClose={onClickCloseDialog}\n                       open={open}\n                       onClickAgree={onDeleteObject}\n                       onClickDisagree={onClickCloseDialog}\n                       mesage={'Deseja excluir o tipo de avaliação selecionado?'}\n                       title={'Excluir tipo de avaliação'}/>\n      </div>\n\n    </div>\n    </div>\n  );\n};\n\nTypeOfEvaluationTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default TypeOfEvaluationTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton, Tooltip\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false,  message: 'A descrição é obrigatória.'},\n    length: {\n      minimum: 4,\n      maximum: 100,\n      message: 'A descrição deve conter no mínimo 4 e no máximo 100 caracteres.'\n    }\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst CourseDetails = props => {\n  const { className, history, ...rest } = props;\n  const { typeOfEvaluationCode } = props.match.params;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function saveTypeOfEvaluationDetails(){\n    try {\n      const description = formState.values.description;\n      const id = formState.values.id;\n      const data = {\n        description,\n      }\n      let response = {};\n      let acao = \"\";\n      if(!id) {\n        response = await api.post('/type-of-evaluation', data);\n        acao = \"cadastrado\";\n      } else {\n        response = await api.put('type-of-evaluation/'+id, data);\n        acao = \"atualizado\";\n      }\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].description){\n          toast.error(response.data.errors[0].description);\n        }\n      } else {\n        toast.success(`Tipo de avaliação ${acao}.`);\n        history.push('/type-of-evaluation');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function findATypeOfEvaluation(id) {\n    try {\n      const response = await api.get('/type-of-evaluation/show/'+id);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setFormState(formState => ({\n          values: {\n            'description': response.data.description,\n            'id': response.data.id\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    if(typeOfEvaluationCode){\n      findATypeOfEvaluation(typeOfEvaluationCode);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course==0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n      <Card\n          {...rest}\n          className={clsx(classes.root, className)}>\n        <form\n            autoComplete=\"off\">\n          <div className={classes.contentHeader}>\n            <IconButton onClick={handleBack}>\n              <ArrowBackIcon />\n            </IconButton>\n          </div>\n          <CardHeader\n              subheader=\"\"\n              title=\"Tipo de Avaliação\"/>\n          <Divider />\n          <CardContent>\n            <Grid\n                container\n                spacing={3}>\n              {/* <Grid\n                  item\n                  md={6}\n                  xs={12}>\n                <TextField\n                    fullWidth\n                    error={hasError('initials')}\n                    helperText={\n                      hasError('initials') ? formState.errors.initials[0] : null\n                    }\n                    label=\"Sigla\"\n                    margin=\"dense\"\n                    name=\"initials\"\n                    onChange={handleChange}\n                    value={formState.values.initials || ''}\n                    variant=\"outlined\"\n                />\n              </Grid> */}\n              <Grid\n                  item\n                  md={6}\n                  xs={12}>\n                <TextField\n                    fullWidth\n                    error={hasError('description')}\n                    helperText={\n                      hasError('description') ? formState.errors.description[0] : null\n                    }\n                    label=\"Descrição\"\n                    margin=\"dense\"\n                    name=\"description\"\n                    onChange={handleChange}\n                    value={formState.values.description || ''}\n                    variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            <Tooltip title=\"Clique aqui para solicitar acesso para tipos de avaliação\" aria-label=\"add\">\n              <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  disabled={!formState.isValid}\n                  onClick={saveTypeOfEvaluationDetails}>\n                Salvar\n              </Button>\n            </Tooltip>\n          </CardActions>\n        </form>\n      </Card>\n  );\n};\n\nCourseDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default CourseDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\nimport SearchInput from '../../../../../components/SearchInput';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst EvaluationToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/evaluation-practice-archive');\n  }\n\n  const onClickNewPractice = e => {\n    history.push('/evaluation-practice-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Avaliações Práticas'}</Typography>\n        <span className={classes.spacer} />\n        <Button className={classes.exportButton}\n                onClick={onClickRequestUsers}>Arquivadas</Button>\n      </div>\n      <div className={classes.row}>\n        <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={onClickNewPractice}>\n          Cadastrar\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar por descrição\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nEvaluationToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(EvaluationToolbar);\n","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    IconButton,\n    Typography,\n    CardContent,\n    MenuItem,\n    Menu, Tooltip, Chip,\n} from '@material-ui/core';\nimport { MoreVert, Edit } from '@material-ui/icons';\nimport moment from 'moment';\nimport api from \"../../../services/api\";\nimport { toast } from 'react-toastify';\nimport { withRouter } from \"react-router-dom\";\nimport { DialogQuestione } from \"../../../components\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginBottom: 8,\n    },\n    head: {\n        paddingBottom: 0,\n        paddingTop: 10\n    },\n    chip: {\n        backgroundColor: '#e57373',\n        color: '#ffebee',\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: 2,\n        flex: 1,\n        fontWeight: 'bold',\n        color: '#ffffff'\n    },\n    fieldsDialog: {\n        marginTop: 20\n    }\n}));\n\nconst EvaluationPracticeCard = props => {\n    const { className, history, refresh, setRefresh, evaluation, ...rest } = props;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n    // const [descriptionNewApplication, setDescriptionNewApplication] = React.useState('');\n\n    const [hasQuestions, setHasQuestions] = React.useState(false);\n\n    const classes = useStyles();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const onEdit = () => {\n        history.push('/evaluation-practice-details/' + evaluation.id);\n    }\n\n    async function duplicate() {\n        try {\n            const response = await api.post('evaluation/duplicate/' + evaluation.id);\n            if (response.status === 200) {\n                toast.success('Avaliação cadastrada(duplicada).');\n                setRefresh(refresh + 1);\n            } else {\n                toast.error('Erro ao mudar o status da avaliação.');\n            }\n\n        } catch (error) {\n\n        }\n    }\n\n    async function changeStatus(status) {\n        try {\n            const data = {\n                status,\n            }\n            const response = await api.put('evaluation/practice/change-status/' + evaluation.id, data);\n            if (response.status === 200) {\n                if (status == 1) {\n                    toast.success('Avaliação ativa.');\n                } else {\n                    toast.success('Avaliação arquivada.');\n                }\n                setRefresh(refresh + 1);\n                handleClose();\n                // document.location.reload();\n            } else {\n                toast.error('Erro ao mduar o status da avaliação.');\n            }\n\n        } catch (error) {\n\n        }\n    }\n\n    const onClickOpenDialog = () => {\n        setOpen(true);\n    }\n\n    const onClickCloseDialog = () => {\n        setOpen(false);\n    }\n\n    async function onDelete() {\n        try {\n            let url = 'evaluation/' + evaluation.id;\n            const response = await api.delete(url);\n            if (response.status === 202) {\n                if (response.data.message) {\n                    toast.error(response.data.message);\n                }\n            } else {\n                toast.success('Avaliação excluída.');\n                setRefresh(refresh + 1);\n            }\n\n            handleClose();\n        } catch (error) {\n\n        }\n        setOpen(false);\n    }\n\n    // async function saveNewApplication() {\n    //     try {\n    //         if (descriptionNewApplication.length < 5) {\n    //             setOpenNewApplication(false);\n    //             loadAlert('error', 'Informe uma descrição com no mínimo 05 caracteres');\n    //             return;\n    //         }\n    //         const fk_evaluation_id = evaluation.id;\n    //         const description = descriptionNewApplication;\n    //         const data = {\n    //             description,\n    //         }\n    //         const response = await api.post(`evaluation/practice/add-application/${fk_evaluation_id}`, data);\n    //         if (response.status === 202) {\n    //             if (response.data.message) {\n    //                 loadAlert('error', response.data.message);\n    //             }\n    //             setOpenNewApplication(false);\n    //         } else {\n    //             loadAlert('success', 'Nova aplicação cadastrada.');\n    //             setDescriptionNewApplication('');\n    //             history.push('/evaluation-practice/applications-evaluation');\n    //         }\n\n    //     } catch (error) {\n\n    //     }\n    // }\n\n    // //dialog de nova aplicação\n    // const [openNewApplication, setOpenNewApplication] = React.useState(false);\n\n    const handleGenerateEvaluation = () => {\n        history.push('/generate-evaluation/' + evaluation.id);\n    }\n\n    // const handleNewApplication = () => {\n    //     setOpenNewApplication(true);\n    // };\n\n    // const handleNewApplicationExit = () => {\n    //     setOpenNewApplication(false);\n    // }\n\n    // const handleChangeDescriptionNewApplication = (e) => {\n    //     setDescriptionNewApplication(e.target.value);\n    // }\n\n    async function checkHasQuestion() {\n        const { evaluation: { id } } = props;\n\n        try {\n            const response = await api.get(`/evaluation/practice/has-questions/${id}`);\n            if (response.status === 202) {\n                if (response.data.message) {\n                    toast.error(response.data.message);\n                }\n            } else {\n                if (response.data.evaluationQuestions.data.length !== 0) {\n                    setHasQuestions(true);\n                }\n            }\n        } catch (e) {\n\n        }\n    }\n\n    useEffect(() => {\n        checkHasQuestion();\n    }, []);\n\n    return (\n        <Card\n            {...rest}\n            className={classes.root}>\n            <CardHeader\n                className={classes.head}\n                action={\n                    <div>\n                        {evaluation.status == 1 ?\n                            <Tooltip title=\"Editar Avaliação\">\n                                <IconButton\n                                    aria-label=\"copy\"\n                                    onClick={onEdit}>\n                                    <Edit />\n                                </IconButton>\n                            </Tooltip> : null}\n                        <Tooltip title=\"Opções da Avaliação\">\n                            <IconButton\n                                aria-label=\"settings\"\n                                onClick={handleClick}>\n                                <MoreVert />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                }\n\n                title={\n                    evaluation.id < 10 ? '00000' + evaluation.id :\n                        evaluation.id < 100 ? '0000' + evaluation.id :\n                            evaluation.id < 1000 ? '000' + evaluation.id :\n                                evaluation.id < 10000 ? '00' + evaluation.id :\n                                    evaluation.id < 100000 ? '0' + evaluation.id :\n                                        evaluation.id\n                } />\n            <CardContent>\n                <Typography variant=\"h4\" color=\"textSecondary\" component=\"h2\">\n                    {'Descrição: ' + evaluation.description}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"h6\">\n                    {'Data de criação da avaliação: ' + moment(evaluation.created_at).format('DD/MM/YYYY')}\n                </Typography>\n                {evaluation.status == 2 ?\n                    <Chip label=\"Arquivada\" className={clsx(classes.chip, className)} size=\"small\" /> : null}\n            </CardContent>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}>\n                {(evaluation.status == 1 && hasQuestions ? <MenuItem onClick={() => history.push(`/evaluation-practice/applications-evaluation/${props.evaluation.id}`)}>Ver aplicações</MenuItem> : null)}\n                {evaluation.status == 1 && hasQuestions ? <MenuItem onClick={() => history.push(`/generate-evaluation/${props.evaluation.id}/questions`)}>Ver questões</MenuItem> : null}\n                {(evaluation.status == 1 && !hasQuestions ? <MenuItem onClick={handleGenerateEvaluation}>Gerar Avaliação</MenuItem> : null)}\n                {/* <MenuItem onClick={duplicate}>Duplicar</MenuItem> */}\n                {evaluation.status == 1 ? <MenuItem onClick={() => changeStatus(2)}>Arquivar</MenuItem> : null}\n                {evaluation.status == 2 ? <MenuItem onClick={() => changeStatus(1)}>Ativar</MenuItem> : null}\n                {evaluation.status == 2 ? <MenuItem onClick={onClickOpenDialog}>Deletar</MenuItem> : null}\n            </Menu>\n            <DialogQuestione handleClose={onClickCloseDialog}\n                open={open}\n                onClickAgree={onDelete}\n                onClickDisagree={onClickCloseDialog}\n                mesage={'Deseja excluir a avaliação selecionada?'}\n                title={'Excluir Avaliação'} />\n\n            {/* Dialog de cadastro de aplicação */}\n            {/* <Dialog fullScreen onClose={handleNewApplicationExit} aria-labelledby=\"simple-dialog-title\" open={openNewApplication}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleNewApplicationExit} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h5\" className={classes.title}>\n                            Informe a descrição para a aplicação\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <TextField\n                    fullWidth\n                    label=\"Descrição\"\n                    margin=\"dense\"\n                    name=\"description\"\n                    variant=\"outlined\"\n                    onChange={handleChangeDescriptionNewApplication}\n                    value={descriptionNewApplication}\n                    className={classes.fieldsDialog}\n                />\n                <Button\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    className={classes.fieldsDialog}\n                    onClick={saveNewApplication}>\n                    Salvar\n                </Button>\n\n            </Dialog> */}\n        </Card>\n    );\n};\n\nEvaluationPracticeCard.propTypes = {\n    className: PropTypes.string,\n    evaluation: PropTypes.object,\n    history: PropTypes.object,\n    setRefresh: PropTypes.func,\n    refresh: PropTypes.number\n};\n\nexport default withRouter(EvaluationPracticeCard);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TablePagination, CardHeader, Grid, LinearProgress\n} from '@material-ui/core';\nimport api from '../../../services/api';\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/EvaluationToolbar\";\nimport PropTypes from \"prop-types\";\nimport EvaluationPracticeCard from \"../EvaluationPracticeCard\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(1)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst EvaluationPracticeTable = props => {\n  const { className, history } = props;\n\n  const [evaluations, setEvaluations] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(0);\n\n  async function loadEvaluations(page){\n    try {\n      let url = 'evaluation/practice?status=1&page='+page;\n      if(searchText != ''){\n        url += '&description='+searchText;\n      }\n      const response = await api.get(url);\n      if(response.status == 200) {\n        setTotal(response.data.total);\n\n        setEvaluations(response.data.data);\n      } else {\n        setEvaluations([]);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadEvaluations(1);\n  }, [refresh]);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadEvaluations(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadEvaluations(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n      <div className={classes.root}>\n        <UsersToolbar\n            onChangeSearch={updateSearch.bind(this)}\n            searchText={searchText}\n            onClickSearch={onClickSearch}/>\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[10]}\n                  />\n\n                }/>\n            <CardContent>\n              {evaluations == null ?\n                  <LinearProgress color=\"secondary\"    />\n                  :\n                  <Grid\n                      container\n                      spacing={1}>\n                    <Grid\n                        item\n                        md={12}\n                        xs={12}>\n                      <Table>\n                        <TableBody>\n                        {evaluations.map(evaluation => (\n                            <EvaluationPracticeCard evaluation={evaluation}\n                                            setRefresh={setRefresh}\n                                            refresh={refresh}/>\n                        ))}\n                      </TableBody>\n                      </Table>\n                    </Grid>\n                  </Grid> }\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n              />\n            </CardActions>\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nEvaluationPracticeTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default EvaluationPracticeTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport SearchInput from '../../../../../components/SearchInput';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst EvaluationToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/evaluation-practice');\n  }\n\n  const onClickNewCourse = e => {\n    history.push('/course-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Avaliações Arquivadas'}</Typography>\n        <span className={classes.spacer} />\n        <Button className={classes.exportButton}\n                onClick={onClickRequestUsers}>Avaliações</Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar por descrição\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nEvaluationToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(EvaluationToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TablePagination, CardHeader, Grid, LinearProgress\n} from '@material-ui/core';\nimport api from '../../../services/api';\n\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/EvaluationToolbar\";\nimport PropTypes from \"prop-types\";\nimport EvaluationPracticeCard from \"../EvaluationPracticeCard\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst EvaluationPracticeArchiveTable = props => {\n  const { className, history } = props;\n\n  const [evaluations, setEvaluations] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(0);\n\n  async function loadEvaluations(page){\n    try {\n      let url = 'evaluation/practice?status=2&page='+page;\n      if(searchText != ''){\n        url += '&description='+searchText;\n      }\n      const response = await api.get(url);\n      if(response.status == 200) {\n        setTotal(response.data.total);\n        setEvaluations(response.data.data);\n      } else {\n        setEvaluations([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadEvaluations(1);\n  }, [refresh]);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadEvaluations(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadEvaluations(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n      <div className={classes.root}>\n        <UsersToolbar\n            onChangeSearch={updateSearch.bind(this)}\n            searchText={searchText}\n            onClickSearch={onClickSearch}/>\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[10]}\n                  />\n\n                }/>\n            <CardContent>\n              {evaluations == null ?\n                  <LinearProgress color=\"secondary\"    />\n                  :\n                  <Grid\n                      container\n                      spacing={1}>\n                    <Grid\n                        item\n                        md={12}\n                        xs={12}>\n                      <Table>\n                        <TableBody>\n                          {evaluations.map(evaluation => (\n                              <EvaluationPracticeCard evaluation={evaluation}\n                                              setRefresh={setRefresh}\n                                              refresh={refresh}/>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </Grid>\n                  </Grid> }\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n              />\n            </CardActions>\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nEvaluationPracticeArchiveTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default EvaluationPracticeArchiveTable;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport api from '../services/api';\n\nfunction useTypeOfEvaluation() {\n\tconst [typeList, setTypeList] = useState([]);\n\n\tconst loadAllTypeOfEvaluations = useCallback(async () => {\n\t\ttry {\n\t\t\tconst response = await api.get('/all/type-of-evaluations');\n\n\t\t\tif (response) {\n\t\t\t\tsetTypeList(response.data);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetTypeList(null);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tloadAllTypeOfEvaluations();\n\t}, []);\n\n  return typeList;\n}\n\nexport default useTypeOfEvaluation;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport api from \"../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport useTypeOfEvaluations from '../../../hooks/useTypeOfEvaluations';\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false, message: 'A descrição é obrigatória.' },\n    length: {\n      minimum: 4,\n      maximum: 300,\n      message: 'A descrição deve conter no mínimo 4 e no máximo 300 caracteres.'\n    }\n  }\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  fab: {\n    backgroundColor: '#009688',\n    color: '#e0f2f1',\n  },\n  labelRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '10px',\n    padding: '5px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  selectGroup: {\n    width: '100%',\n    display: 'flex',\n    lineHeight: '2',\n    select: {\n      width: '100%',\n    }\n  }\n}));\n\nconst EvaluationPracticeDetails = props => {\n  const { className, history, ...rest } = props;\n  const { codigoEvaluation } = props.match.params;\n\n  const typeOfEvaluationList = useTypeOfEvaluations();\n  const areaList = [];\n\n  const classes = useStyles();\n\n  const [questions, setQuestions] = useState(null);\n  const [refresh, setRefresh] = React.useState(0);\n\n  // Refence select states\n  const [openReference, setReferenceOpen] = React.useState(false);\n  const [reference, setReference] = React.useState('select'); // type of evaluation\n\n  // Area select states\n  const [areaIsOpen, setAreaIsOpen] = React.useState(false);\n  const [area, setArea] = React.useState('select');\n\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function saveEvaluationPracticeDetails() {\n    try {\n      const description = formState.values.description;\n\n      const id = formState.values.id;\n      const data = {\n        description\n      }\n      let response = {};\n      let acao = \"\";\n      if (!id) {\n        response = await api.post('evaluation/practice', data);\n        acao = \"cadastrada\";\n      } else {\n        response = await api.put('evaluation/practice/' + id, data);\n        acao = \"atualizada\";\n      }\n      if (response.status === 202) {\n        if (response.data.message) {\n          toast.error(response.data.message);\n        } else if (response.data.errors[0].description) {\n          toast.error(response.data.errors[0].description);\n        }\n      } else {\n        toast.success('Avaliação ' + acao + '.');\n        history.push('/evaluation-practice');\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function loadQuestionsEvaluation(id, page) {\n    try {\n      const response = await api.get('evaluation/practice/show/questions/' + id + '?page=' + page);\n      if (response.status === 200) {\n        setQuestions(response.data.data);\n        setTotal(response.data.total);\n      } else {\n        setQuestions([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findAEvaluation(id) {\n    try {\n      const response = await api.get('evaluation/practice/show/' + id);\n      if (response.status === 202) {\n        if (response.data.message) {\n          toast.error(response.data.message);\n        }\n      } else {\n        setFormState(formState => ({\n          values: {\n            'questions': response.data[0].questions,\n            'description': response.data[0].description,\n            'id': response.data[0].id\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n        //setQuestions(response.data[0].questions);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    if (codigoEvaluation) {\n      findAEvaluation(codigoEvaluation);\n      // loadQuestionsEvaluation(codigoEvaluation);\n    } else {\n      setQuestions([]);\n    }\n  }, [refresh]);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course == 0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values, questions]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handlePageChange = (event, page) => {\n    if (codigoEvaluation) {\n      loadQuestionsEvaluation(codigoEvaluation, page + 1)\n    }\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  // Reference select methods\n  const handleChangeReference = (event) => {\n    setReference(event.target.value);\n  };\n\n  const handleReferenceClose = () => {\n    setReferenceOpen(false);\n  };\n\n  const handleReferenceOpen = () => {\n    setReferenceOpen(true);\n  };\n\n  // Area select methods\n  const handleChangeArea = (event) => {\n    setArea(event.target.value);\n  };\n\n  const handleAreaClose = () => {\n    setAreaIsOpen(false);\n  };\n\n  const handleAreaOpen = () => {\n    setAreaIsOpen(true);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Criar Avaliação Prática\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={1}\n          >\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                error={hasError('description')}\n                helperText={\n                  hasError('description') ? formState.errors.description[0] : null\n                }\n                label=\"Descrição\"\n                margin=\"dense\"\n                name=\"description\"\n                onChange={handleChange}\n                value={formState.values.description || ''}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            {/* <Grid\n              item\n              md={3}\n              xs={12}\n            >\n              <div className={classes.selectGroup}>\n                <b className=\"item1\" style={{ marginRight: '32px' }}>Tipo de avaliação</b>\n                <Tooltip title=\"Caso a questão tenha sido construída baseada em alguma já aplicada, você pode selecionar no campo tipo de avaliação.\">\n                  <Select\n                    labelId=\"type-of-evaluation-label\"\n                    id=\"type-of-evaluation\"\n                    open={openReference}\n                    onClose={handleReferenceClose}\n                    onOpen={handleReferenceOpen}\n                    value={reference}\n                    onChange={handleChangeReference}\n                    className={classes.root}\n                  >\n                    <MenuItem value=\"select\">Selecione</MenuItem>\n                    {typeOfEvaluationList.map((type) => (\n                      <MenuItem value={type.description}>{type.description}</MenuItem>\n                    ))}\n                  </Select>\n                </Tooltip>\n              </div>\n            </Grid>\n\n            <Grid\n              item\n              md={3}\n              xs={12}\n            >\n              <div className={classes.selectGroup}>\n                <b className=\"item1\" style={{ marginRight: '32px' }}>Área</b>\n                <Tooltip title=\"Área\">\n                  <Select\n                    labelId=\"area-label\"\n                    id=\"area\"\n                    open={areaIsOpen}\n                    onClose={handleAreaClose}\n                    onOpen={handleAreaOpen}\n                    value={area}\n                    onChange={handleChangeArea}\n                    className={classes.root}\n                  >\n                    <MenuItem value=\"select\">Selecione</MenuItem>\n                    {areaList.map((item) => (\n                      <MenuItem value={item.description}>{item.description}</MenuItem>\n                    ))}\n                  </Select>\n                </Tooltip>\n              </div>\n            </Grid>\n\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                error={hasError('amount_questions')}\n                helperText={\n                  hasError('amount_questions') ? formState.errors.amount_questions[0] : null\n                }\n                label=\"Quantidade de questões\"\n                margin=\"dense\"\n                name=\"amount_questions\"\n                onChange={handleChange}\n                value={formState.values.amount_questions || ''}\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid>\n\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                error={hasError('initial_period')}\n                helperText={\n                  hasError('initial_period') ? formState.errors.initial_period[0] : null\n                }\n                label=\"Período (Ano inicial)\"\n                margin=\"dense\"\n                name=\"initial_period\"\n                onChange={handleChange}\n                value={formState.values.initial_period || ''}\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid>\n\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                error={hasError('final_period')}\n                helperText={\n                  hasError('final_period') ? formState.errors.final_period[0] : null\n                }\n                label=\"Período (Ano final)\"\n                margin=\"dense\"\n                name=\"final_period\"\n                onChange={handleChange}\n                value={formState.values.final_period || ''}\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid> */}\n\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                disabled={!formState.isValid}\n                onClick={saveEvaluationPracticeDetails}>\n                  {codigoEvaluation ? 'Salvar' : 'Criar avaliação prática'}\n              </Button>\n            </Grid>\n\n            <Divider />\n          </Grid>\n          {formState.values.length === 0 && (\n            <LinearProgress color=\"secondary\" />\n          )}\n        </CardContent>\n        <Divider />\n      </form>\n    </Card>\n  );\n};\n\nEvaluationPracticeDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationPracticeDetails;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton, LinearProgress,\n  Tooltip, Select, MenuItem, Typography\n} from '@material-ui/core';\nimport api from \"../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport useTypeOfEvaluations from '../../../hooks/useTypeOfEvaluations';\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false, message: 'A descrição é obrigatória.' },\n    length: {\n      minimum: 4,\n      maximum: 300,\n      message: 'A descrição deve conter no mínimo 4 e no máximo 300 caracteres.'\n    }\n  },\n  typeOfEvaluation: {\n    presence: { allowEmpty: false, message: 'O tipo de avaliação é obrigatório' },\n  },\n  area: {\n    presence: { allowEmpty: false, message: 'A área é obrigatória' },\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  fab: {\n    backgroundColor: '#009688',\n    color: '#e0f2f1',\n  },\n  labelRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '10px',\n    padding: '5px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  selectGroup: {\n    width: '100%',\n    display: 'flex',\n    lineHeight: '2',\n    select: {\n      width: '100%',\n    }\n  }\n}));\n\nconst GenerateEvaluation = props => {\n  const { className, history, ...rest } = props;\n  const { codigoEvaluation } = props.match.params;\n\n  const typeOfEvaluationList = useTypeOfEvaluations();\n  // const areaList = useCoursesWithQuestions();\n\n  const classes = useStyles();\n\n  const [refresh] = React.useState(0);\n\n  // Refence select states\n  const [openReference, setReferenceOpen] = React.useState(false);\n\n  // Refence select states\n  const [openSkills, setSkillsOpen] = React.useState(false);\n\n  // Area select states\n  const [areaIsOpen, setAreaIsOpen] = React.useState(false);\n  const [areaList, setAreaList] = React.useState([]);\n  const [skillList, setSkillList] = React.useState([]);\n\n  const [amountQuestions, setAmountQuestions] = React.useState(null);\n\n  const [renderConfigArea, setRenderConfigArea] = React.useState(false);\n  const [renderConfigSkills, setRenderConfigSkills] = React.useState(false);\n  const [renderConfigQuestions, setRenderConfigQuestions] = React.useState(false);\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  async function saveGenerateEvaluation() {\n\n    try {\n      const referenceId = typeOfEvaluationList.filter((item) => item.description === formState.values.typeOfEvaluation)[0].id;\n      const areaId = areaList.filter((item) => item.description === formState.values.area)[0].id;\n      const skills = skillList.filter((item) => item.description === formState.values.skills);\n\n      let skillId = null;\n      if (skills.lenght > 0) {\n        skillId = skills[0].id;\n      }\n\n      const { amount_questions, initial_period, final_period } = formState.values;\n\n      const response = await api.put(`evaluation/practice/generate/${codigoEvaluation}`, {\n        fk_type_evaluation_id: referenceId,\n        fk_course_id: areaId,\n        qtQuestions: parseInt(amount_questions, 10),\n        year_start: initial_period,\n        year_end: final_period,\n        fk_skill_id: skillId,\n      });\n\n      if (response.status === 202) {\n        if (response.data.message) {\n          toast.error(response.data.message);\n        } else if (response.data.errors[0].description) {\n          toast.error(response.data.errors[0].description);\n        }\n      } else {\n        toast.success('Avaliação gerada com sucesso!');\n        // loadQuestions();\n        history.push('/evaluation-practice');\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findAEvaluation(id) {\n    try {\n      const response = await api.get('evaluation/practice/show/' + id);\n      if (response.status === 202) {\n        if (response.data.message) {\n          toast.error(response.data.message);\n        }\n      } else {\n        setFormState(formState => ({\n          values: {\n            'questions': response.data[0].questions,\n            'description': response.data[0].description,\n            'id': response.data[0].id\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function getAreas() {\n    const referenceId = typeOfEvaluationList.filter((item) => item.description === formState.values.typeOfEvaluation)[0].id;\n\n    try {\n      const response = await api.get(`/all/courses-with-questions-practice/${referenceId}`);\n\n      if (response) {\n        setAreaList(response.data);\n        setRenderConfigArea(true);\n      }\n    } catch (error) {\n      setAreaList([]);\n    }\n  }\n\n  async function getSkills() {\n    const areaId = areaList.filter((item) => item.description === formState.values.area)[0].id;\n\n    try {\n      const response = await api.get(`/all/skills-with-questions-practice?fk_course_id=${areaId}`);\n\n      if (response) {\n        setSkillList(response.data);\n        setRenderConfigSkills(true);\n      }\n    } catch (error) {\n      setSkillList([]);\n    }\n  }\n\n  async function handleHowManyQuestions2() {\n    try {\n      const referenceId = typeOfEvaluationList.filter((item) => item.description === formState.values.typeOfEvaluation)[0].id;\n      const areaId = areaList.filter((item) => item.description === formState.values.area)[0].id;\n\n      const response = await api.get(`/evaluation/practice/has-questions/${codigoEvaluation}`);\n\n      if (response) {\n        // setAmountQuestions(response.data);\n        // setRenderConfigQuestions(true);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function handleHowManyQuestions() {\n    try {\n      const referenceId = typeOfEvaluationList.filter((item) => item.description === formState.values.typeOfEvaluation)[0].id;\n      const areaId = areaList.filter((item) => item.description === formState.values.area)[0].id;\n      const skill = skillList.filter((item) => item.description === formState.values.skills)[0];\n\n      const { initial_period, final_period } = formState.values;\n\n      const response = await api.get(`/evaluation/practice/how-many-questions`, {\n        params: {\n          fk_type_evaluation_id: referenceId,\n          fk_course_id: areaId,\n          year_start: initial_period,\n          year_end: final_period,\n          fk_skill_id: skill ? skill.id : null,\n        }\n      });\n\n      if (response) {\n        setAmountQuestions(response.data);\n        setRenderConfigQuestions(true);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  // async function loadQuestions() {\n  //   try {\n  //     const referenceId = typeOfEvaluationList.filter((item) => item.description === formState.values.typeOfEvaluation)[0].id;\n  //     const areaId = areaList.filter((item) => item.description === formState.values.area)[0].id;\n\n  //     const response = await api.get(`/evaluation/practice/has-questions/${codigoEvaluation}`);\n\n  //     if (response) {\n  //       // setAmountQuestions(response.data);\n  //       // setRenderConfigQuestions(true);\n  //     }\n  //   } catch (error) {\n\n  //   }\n  // }\n\n  useEffect(() => {\n    if (codigoEvaluation) {\n      findAEvaluation(codigoEvaluation);\n    }\n  }, [refresh]);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors || formState.values.course == 0) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.target.value = event.target.value === 'select' ? null : event.target.value;\n\n    if (event.target.name === 'typeOfEvaluation' && renderConfigArea) {\n      setRenderConfigArea(false);\n      setRenderConfigSkills(false);\n\n      setFormState({\n        ...formState,\n        values: {\n          ...formState.values,\n          [event.target.name]: event.target.value,\n          area: null,\n          skills: null,\n        },\n        touched: {\n          ...formState.touched,\n          [event.target.name]: true\n        }\n      });\n\n      return;\n    }\n\n    if (event.target.name === 'area' && renderConfigSkills) {\n      setRenderConfigSkills(false);\n\n      setFormState({\n        ...formState,\n        values: {\n          ...formState.values,\n          [event.target.name]: event.target.value,\n          skills: null,\n        },\n        touched: {\n          ...formState.touched,\n          [event.target.name]: true\n        }\n      });\n\n      return;\n    }\n\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleReferenceClose = () => {\n    setReferenceOpen(false);\n  };\n\n  const handleReferenceOpen = () => {\n    setReferenceOpen(true);\n  };\n\n  const handleAreaClose = () => {\n    setAreaIsOpen(false);\n  };\n\n  const handleAreaOpen = () => {\n    setAreaIsOpen(true);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"Campos obrigatórios estão marcados com (*).\"\n          title=\"Gerar Avaliação\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={1}\n          >\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <div className={classes.selectGroup}>\n                <b className=\"item1\" style={{ marginRight: '32px' }}>Tipo de avaliação *</b>\n                <Tooltip title=\"Você deve escolher o tipo de avaliação para filtrar questões. O campo tipo de avaliação representa um agrupamento de questões. Ex: Enem, Enade, dentre outros.\" placement=\"right\">\n                  <Select\n                    labelId=\"typeOfEvaluation-label\"\n                    id=\"typeOfEvaluation\"\n                    name=\"typeOfEvaluation\"\n                    open={openReference}\n                    onClose={handleReferenceClose}\n                    onOpen={handleReferenceOpen}\n                    value={formState.values.typeOfEvaluation || 'select'}\n                    onChange={handleChange}\n                    className={classes.root}\n                    error={hasError('typeOfEvaluation')}\n                    helperText={\n                      hasError('typeOfEvaluation') ? formState.errors.typeOfEvaluation[0] : null\n                    }\n                    disabled={renderConfigQuestions}\n                  >\n                    <MenuItem value=\"select\">Selecione</MenuItem>\n                    {typeOfEvaluationList.map((type) => (\n                      <MenuItem value={type.description}>{type.description}</MenuItem>\n                    ))}\n                  </Select>\n                </Tooltip>\n              </div>\n            </Grid>\n\n            {!renderConfigArea && (\n              <Grid\n                item\n                md={12}\n                xs={12}\n              >\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  disabled={!formState.values.typeOfEvaluation && formState.values.typeOfEvaluation !== 'select'}\n                  onClick={getAreas}>\n                  Avançar\n                </Button>\n              </Grid>\n            )}\n\n            {renderConfigArea && (\n              <>\n                <Grid\n                  item\n                  md={12}\n                  xs={12}\n                >\n                  <div className={classes.selectGroup}>\n                    <b className=\"item1\" style={{ marginRight: '32px' }}>Área *</b>\n                    <Tooltip title=\"Você deve escolher a área de conhecimento para filtrar questões.\" placement=\"right\">\n                      <Select\n                        labelId=\"area-label\"\n                        id=\"area\"\n                        name=\"area\"\n                        open={areaIsOpen}\n                        onClose={handleAreaClose}\n                        onOpen={handleAreaOpen}\n                        value={formState.values.area || 'select'}\n                        onChange={handleChange}\n                        className={classes.root}\n                        error={hasError('area')}\n                        helperText={\n                          hasError('area') ? formState.errors.area[0] : null\n                        }\n                        disabled={renderConfigQuestions}\n                      >\n                        <MenuItem value=\"select\">Selecione</MenuItem>\n                        {areaList.map((item) => (\n                          <MenuItem value={item.description}>{item.description}</MenuItem>\n                        ))}\n                      </Select>\n                    </Tooltip>\n                  </div>\n                </Grid>\n              </>\n            )}\n\n            {!renderConfigSkills && renderConfigArea && (\n              <Grid\n                item\n                md={12}\n                xs={12}\n              >\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  disabled={!formState.values.area && formState.values.skills !== 'select'}\n                  onClick={() => getSkills()}>\n                  Avançar\n                </Button>\n              </Grid>\n            )}\n\n            {renderConfigSkills && (\n              <>\n                <Grid\n                  item\n                  md={12}\n                  xs={12}\n                >\n                  <div className={classes.selectGroup}>\n                    <b className=\"item1\" style={{ marginRight: '32px' }}>Competência</b>\n                    <Tooltip title=\"A competência é opcional. Caso não seja selecionada uma competência, o sistema irá sugerir questões de todas as competências da área selecionada. \" placement=\"right\">\n                      <Select\n                        labelId=\"skills-label\"\n                        id=\"skills\"\n                        name=\"skills\"\n                        open={openSkills}\n                        onClose={() => setSkillsOpen(false)}\n                        onOpen={() => setSkillsOpen(true)}\n                        value={formState.values.skills || 'select'}\n                        onChange={handleChange}\n                        className={classes.root}\n                        error={hasError('skills')}\n                        helperText={\n                          hasError('skills') ? formState.errors.skills[0] : null\n                        }\n                        disabled={renderConfigQuestions}\n                      >\n                        <MenuItem value=\"select\">Selecione (Opcional)</MenuItem>\n                        {skillList.map((type) => (\n                          <MenuItem value={type.description}>{type.description}</MenuItem>\n                        ))}\n                      </Select>\n                    </Tooltip>\n                  </div>\n                </Grid>\n\n                <Grid\n                  item\n                  md={4}\n                  xs={12}>\n                  <Tooltip title=\"O período (ano inicial e final) é opcional. Caso seja informado, as questões serão filtradas pelo período informado.\" placement=\"right\">\n                    <TextField\n                      fullWidth\n                      error={hasError('initial_period')}\n                      helperText={\n                        hasError('initial_period') ? formState.errors.initial_period[0] : null\n                      }\n                      label=\"Período (Ano inicial) - Opcional\"\n                      margin=\"dense\"\n                      name=\"initial_period\"\n                      onChange={handleChange}\n                      value={formState.values.initial_period || ''}\n                      variant=\"outlined\"\n                      type=\"number\"\n                      disabled={renderConfigQuestions}\n                    />\n                  </Tooltip>\n                </Grid>\n\n                <Grid\n                  item\n                  md={4}\n                  xs={12}>\n                  <Tooltip title=\"O período (ano inicial e final) é opcional. Caso seja informado, as questões serão filtradas pelo período informado.\" placement=\"right\">\n                    <TextField\n                      fullWidth\n                      error={hasError('final_period')}\n                      helperText={\n                        hasError('final_period') ? formState.errors.final_period[0] : null\n                      }\n                      label=\"Período (Ano final) - Opcional\"\n                      margin=\"dense\"\n                      name=\"final_period\"\n                      onChange={handleChange}\n                      value={formState.values.final_period || ''}\n                      variant=\"outlined\"\n                      type=\"number\"\n                      disabled={renderConfigQuestions}\n                    />\n                  </Tooltip>\n                </Grid>\n              </>\n            )}\n\n            {!renderConfigQuestions && !!renderConfigSkills && renderConfigArea && (\n              <Grid\n                item\n                md={12}\n                xs={12}>\n                  <Button\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    disabled={!formState.isValid}\n                    onClick={handleHowManyQuestions}>\n                    Configurar questões\n                  </Button>\n              </Grid>\n            )}\n\n            <Divider />\n          </Grid>\n          {formState.values.length === 0 && (\n            <LinearProgress color=\"secondary\" />\n          )}\n        </CardContent>\n\n        {renderConfigQuestions && (\n          <CardContent>\n            <Grid\n              container\n              spacing={1}>\n              <Grid\n                item\n                md={12}\n                xs={12}>\n                <Typography variant=\"button\" color=\"secondary\" component=\"h4\">\n                  {amountQuestions == 1 ? 'Baseado no filtro acima, o sistema possui ' + amountQuestions +' questão disponível.' :\n                      'Baseado no filtro acima, o sistema possui ' + amountQuestions +' questões disponíveis.'}\n                </Typography>\n              </Grid>\n\n              <Grid\n                  item\n                  md={4}\n                  xs={12}>\n                  <Tooltip title=\"Neste campo deve ser informada a quantidade de questões desejáveis para que o sistema gere sua avaliação. O valor não pode ser superior ao total de questões disponíveis.\" placement=\"right\">\n                    <TextField\n                      fullWidth\n                      error={hasError('amount_questions')}\n                      helperText={\n                        hasError('amount_questions') ? formState.errors.amount_questions[0] : null\n                      }\n                      label=\"Quantidade de questões\"\n                      margin=\"dense\"\n                      name=\"amount_questions\"\n                      onChange={handleChange}\n                      value={formState.values.amount_questions || ''}\n                      variant=\"outlined\"\n                      type=\"number\"\n                      disabled={amountQuestions === 0}\n                    />\n                  </Tooltip>\n                </Grid>\n\n              <Grid\n                item\n                md={12}\n                xs={12}\n              >\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  disabled={!formState.isValid || !formState.values.amount_questions}\n                  onClick={saveGenerateEvaluation}>\n                  Gerar\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  onClick={() => setRenderConfigQuestions(false)}\n                  style={{ marginLeft: '16px' }}\n                >\n                  Editar\n                </Button>\n              </Grid>\n\n              <Divider />\n            </Grid>\n            {formState.values.length === 0 && (\n              <LinearProgress color=\"secondary\" />\n            )}\n          </CardContent>\n        )}\n        <Divider />\n      </form>\n    </Card>\n  );\n};\n\nGenerateEvaluation.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default GenerateEvaluation;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport {\n    Card,\n    CardContent,\n    Typography,\n    Paper,\n} from '@material-ui/core';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: 5,\n      marginBottom: 10,\n        marginRigth: 0,\n        marginLeft: 5,\n        width: '100%'\n    },\n      head: {\n          paddingBottom: 0,\n          paddingTop: 10\n      },\n      chipGreen:{\n        backgroundColor: '#4db6ac',\n        color: '#ffffff',\n          marginRight: 2\n      },\n      chipRed:{\n          backgroundColor: '#f44336',\n          color: '#ffffff',\n          marginRight: 2\n      },\n    spacer: {\n      flexGrow: 1\n    },\n      expand: {\n          transform: 'rotate(0deg)',\n          marginLeft: 'auto',\n          transition: theme.transitions.create('transform', {\n              duration: theme.transitions.duration.shortest,\n          }),\n      },\n      paper: {\n          display: 'flex',\n          marginBottom: 10,\n          '& > *': {\n              margin: theme.spacing(2),\n          },\n      },\n      paperWrong: {\n          backgroundColor: '#ef9a9a',\n          color: '#212121',\n          margin: 3,\n          padding: 8\n      },\n      paperRight: {\n          backgroundColor: '#80cbc4',\n          color: '#212121',\n          margin: 3,\n          padding: 8\n      },\n      appBar: {\n          position: 'relative',\n      },\n      title: {\n          marginLeft: theme.spacing(2),\n          flex: 1,\n          fontWeight: 'bold',\n          color: '#ffffff'\n      },\n      labelRank: {\n        textAlign: 'right'\n      },\n      lineQuestion: {\n          marginLeft: 20,\n      },\n      questionInfo: {\n          skill: {\n              display: 'flex',\n          }\n      },\n    card: {\n        marginBottom: 10\n    }\n  }));\n\n// import { Container } from './styles';\n\nfunction QuestionItem({ question, index }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.lineQuestion}>\n                <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                    QUESTÃO - {index + 1}\n                </Typography>\n\n                <div className={classes.questionInfo}>\n                    {question.question_with_skill_and_objects.skill  !== null ?\n                        <div className={classes.questionInfo.skill} style={{ display: 'flex', alignItems: 'center' }}>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                Competência:\n                            </Typography>\n                            <div style={{ marginLeft: '8px' }}> { question.question_with_skill_and_objects.skill.description } </div>\n                        </div>\n                        : null}\n                    {question.question_with_skill_and_objects.knowledge_objects[0] ?\n                        <div>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                                Objeto(s) de conhecimento:\n                            </Typography>\n                            {question.question_with_skill_and_objects.knowledge_objects.map(item => (\n                                <div> { ReactHtmlParser (item.description) } </div>\n                            ))}\n                        </div>\n                        : null}\n                </div>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default QuestionItem;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Table,\n  TableBody,\n  TablePagination, CardHeader, Grid, LinearProgress,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport api from '../../../services/api';\nimport QuestionItem from '../components/QuestionItem/QuestionItem';\nimport { toast } from 'react-toastify';\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(1)\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst EvaluationPracticeQuestions = props => {\n  const { className, history } = props;\n  const { codigoEvaluation } = props.match.params;\n\n  const [questions, setQuestions] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [evaluationDescription, setEvaluationDescription] = useState('');\n  // const [searchText, setSearchText] = useState('');\n  // const [open, setOpen] = React.useState(false);\n  const [refresh, setRefresh] = React.useState(0);\n\n  async function loadQuestions(page){\n    try {\n      let url = `/evaluation/practice/has-questions/${codigoEvaluation}&page=${page}`;\n      const response = await api.get(url);\n\n      if(response.status == 200) {\n        setTotal(response.data.evaluationQuestions.total);\n        setEvaluationDescription(response.data.evaluation.description || '');\n\n        setQuestions(response.data.evaluationQuestions.data);\n      } else {\n        setQuestions([]);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    loadQuestions(1);\n  }, [refresh]);\n\n  // const updateSearch = (e) => {\n  //   setSearchText(e.target.value);\n  // }\n\n  // const onClickSearch = (e) => {\n  //   setPage(0);\n  //   loadQuestions(1);\n  // }\n\n  const handlePageChange = (event, page) => {\n    loadQuestions(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n      <div className={classes.root}>\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Questões da avaliação\" />\n        <Divider />\n        <Card className={classes.root}>\n          <CardHeader\n              avatar={\n                <div>\n                  <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                    {'Avaliação: '+evaluationDescription}\n                  </Typography>\n                </div>\n              }\n          />\n        </Card>\n        {/* <UsersToolbar\n            onChangeSearch={updateSearch.bind(this)}\n            searchText={searchText}\n            onClickSearch={onClickSearch}/> */}\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[10]}\n                  />\n\n                }/>\n            <CardContent>\n              {questions == null ?\n                  <LinearProgress color=\"secondary\"    />\n                  :\n                  <Grid\n                      container\n                      spacing={1}>\n                    <Grid\n                        item\n                        md={12}\n                        xs={12}>\n                      <Table>\n                        <TableBody>\n                        {questions.map((question, index) => (\n                            // <QuestionCard\n                            //   question={question}\n                            //   setRefresh={setRefresh}\n                            //   refresh={refresh}\n                            // />\n                            <QuestionItem question={question} index={index} />\n                        ))}\n                      </TableBody>\n                      </Table>\n                    </Grid>\n                  </Grid> }\n            </CardContent>\n            {/* <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n              />\n            </CardActions> */}\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nEvaluationPracticeQuestions.propTypes = {\n  history: PropTypes.object\n};\n\nexport default EvaluationPracticeQuestions;\n","import EvaluationPracticeQuestions from './EvaluationPracticeQuestions';\nexport default EvaluationPracticeQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Typography} from '@material-ui/core';\nimport FindInPage from '@material-ui/icons/SearchSharp';\n\nimport { SearchInput } from '../../../../../../components';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  actions: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  }\n}));\n\nconst EvaluationApplicationToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, history, onClickHandleNewApplication, ...rest } = props;\n\n  const classes = useStyles();\n\n  const onClickRequestUsers = () => {\n    history.push('/evaluations-archive');\n  }\n\n  const onClickNewCourse = e => {\n    history.push('/evaluation-details');\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        <Typography variant=\"h3\" className={classes.title}>{'Aplicações das Avaliações'}</Typography>\n        <span className={classes.spacer} />\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Pesquisar por descrição ou código\"\n          onChange={onChangeSearch}\n          value={searchText}\n        />\n        <Button\n            onClick={onClickSearch}>\n          <FindInPage fontSize=\"large\"/>\n        </Button>\n        <div className={classes.actions}>\n          <Button onClick={() => onClickHandleNewApplication()} color=\"primary\" variant=\"contained\">\n            Nova aplicação\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEvaluationApplicationToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  searchText: PropTypes.string,\n  history: PropTypes.object\n};\n\nexport default withRouter(EvaluationApplicationToolbar);\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    IconButton,\n    Typography,\n    Menu,\n    MenuItem,\n    CardContent, Chip, Switch, Tooltip\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { withRouter } from \"react-router-dom\";\nimport api from \"../../../../services/api\";\nimport { Edit, FormatListBulleted, MoreVert, PlayArrow } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        margin: 8,\n    },\n    head: {\n        paddingBottom: 0,\n        paddingTop: 6\n    },\n    chipred: {\n        margin: 3,\n        backgroundColor: '#e57373',\n        color: '#ffebee',\n    },\n    chipgreen: {\n        margin: 3,\n        backgroundColor: '#009688',\n        color: '#ffebee',\n    },\n    chipyellow: {\n        margin: 3,\n        backgroundColor: '#fff176',\n        color: '#212121',\n    },\n    chipblue: {\n        margin: 3,\n        backgroundColor: '#2196f3',\n        color: '#fff',\n    },\n    spacer: {\n        flexGrow: 1\n    },\n}));\n\nconst EvaluationApplicationCard = props => {\n    const { className, history, application, idApplication, ...rest } = props;\n\n    const [state, setState] = useState(0);\n    const [evaluationApplication, setEvaluationApplication] = useState({});\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [status, setStatus] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const classes = useStyles();\n\n    useEffect(() => {\n\n    }, [evaluationApplication]);\n\n    useEffect(() => {\n        setEvaluationApplication(application);\n\n    }, []);\n\n    const onEdit = (id) => {\n        history.push(`/evaluation-practice/${idApplication}/applications-evaluation/details/${id}`);\n    }\n\n    const results = (id) => {\n        history.push('/evaluation-practice/applications-evaluation/details/' + id);\n    }\n\n    // async function onClickOpenDialogEnableApplication() {\n    //     try {\n    //         let url = 'evaluation/change-status-application/' + evaluationApplication.id;\n    //         const response = await api.put(url);\n    //         if (response.status === 202) {\n    //             if (response.data.message) {\n    //                 loadAlert('error', response.data.message);\n    //             }\n    //         } else {\n    //             const new_evaluation = response.data;\n    //             setEvaluationApplication(new_evaluation);\n\n    //             loadAlert('success', 'Modificado o status da aplicação.');\n    //         }\n    //         //window.location.reload();\n    //     } catch (error) {\n\n    //     }\n    //     setState(state + 1);\n    // }\n\n    async function loadStatus() {\n        try {\n            let url = 'evaluation/practice/applications/status/' + application.id;\n            const response = await api.get(url);\n            if (response.status === 202) {\n                if (response.data.message) {\n                    toast.error(response.data.message);\n                }\n            } else {\n                const responseStatus = response.data;\n                setStatus(responseStatus);\n            }\n        } catch (error) {\n\n        }\n    }\n\n    useEffect(() => {\n        if (!status) {\n            loadStatus();\n        }\n    }, []);\n\n    return (\n        <div>\n            { evaluationApplication.id ?\n                <Card\n                    {...rest}\n                    className={classes.root}>\n                    <CardHeader\n                        className={classes.head}\n                        action={\n                            <div>\n\n                                {/* {evaluationApplication.evaluation.status == 1 ?\n                          <Tooltip title=\"Habilite a questão para aplicações\">\n                              <Switch\n                                  checked={evaluationApplication.status}\n                                  onChange={onClickOpenDialogEnableApplication}\n                                  color=\"primary\"\n                                  name=\"checkedB\"\n                                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                              />\n                          </Tooltip> : null } */}\n                                {status === 3 && (\n                                    <Tooltip title=\"Visualizar resultados\">\n                                        <IconButton\n                                            aria-label=\"copy\"\n                                            onClick={() => results(evaluationApplication.id)}>\n                                            <FormatListBulleted />\n                                        </IconButton>\n                                    </Tooltip>\n                                )}\n                                {evaluationApplication.evaluation.status == 1 ?\n                                    <Tooltip title=\"Clique para editar\">\n                                        <IconButton\n                                            aria-label=\"copy\"\n                                            onClick={() => onEdit(evaluationApplication.id)}>\n                                            <Edit />\n                                        </IconButton>\n                                    </Tooltip> : null}\n\n                                    {status !== 3 && (\n                                        <Tooltip title=\"Realizar avaliação\">\n                                            <IconButton\n                                                aria-label=\"settings\"\n                                                onClick={() => history.push(`/code/${application.id_application}`)}>\n                                                <PlayArrow />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                            </div>\n                        }\n                        title={'Código: ' + evaluationApplication.id_application} />\n\n                    <CardContent>\n\n                        <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                            {'Descrição da aplicação: ' + evaluationApplication.description}\n                        </Typography>\n                        {evaluationApplication.evaluation.status == 1 ?\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\n                                {'Avaliação: ' + evaluationApplication.evaluation.id + ' - ' + evaluationApplication.evaluation.description}\n                            </Typography> :\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\n                                {'ARQUIVADA - Avaliação: ' + evaluationApplication.evaluation.id + ' - ' + evaluationApplication.evaluation.description}\n                            </Typography>}\n\n\n                        <Typography color=\"body2\" variant=\"h6\">\n                            {'Data de criação da aplicação: ' + moment(evaluationApplication.created_at).format('DD/MM/YYYY')}\n                        </Typography>\n                        {/* { evaluationApplication.evaluation.status == 2 ?\n                      <Chip label=\"Avaliação Arquivada\" className={clsx(classes.chipred, className)} size=\"small\"/> :\n                      evaluationApplication.status == 1 ?\n                          <Chip label=\"Ativada\" className={clsx(classes.chipgreen, className)} size=\"small\"/> :\n                            <Chip label=\"Desativada\" className={clsx(classes.chipred, className)} size=\"small\"/>\n\n                  } */}\n                        {status === 1 && (\n                            <Chip label=\"Não iniciada\" className={clsx(classes.chipyellow, className)} size=\"small\"/>\n                        )}\n\n                        {status === 2 && (\n                            <Chip label=\"Iniciada\" className={clsx(classes.chipblue, className)} size=\"small\"/>\n                        )}\n\n                        {status === 3 && (\n                            <Chip label=\"Finalizada\" className={clsx(classes.chipgreen, className)} size=\"small\"/>\n                        )}\n\n                        {/* { evaluationApplication.show_results == 1 ?\n                            <Chip label=\"Resultados Liberados\" className={clsx(classes.chipblue, className)} size=\"small\"/> :\n                            null\n                        } */}\n\n\n\n                    </CardContent>\n                </Card>\n                : null}\n\n        </div>\n\n\n\n    );\n};\n\nEvaluationApplicationCard.propTypes = {\n    className: PropTypes.string,\n    application: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default withRouter(EvaluationApplicationCard);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  Dialog,\n  AppBar,\n  Toolbar,\n  CardActions,\n  CardContent,\n  IconButton,\n  Typography,\n  Table,\n  Button,\n  TextField,\n  TableBody,\n  TablePagination, CardHeader, Grid, LinearProgress\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { toast } from 'react-toastify';\nimport UsersToolbar from \"./components/EvaluationApplicationToolbar\";\nimport PropTypes from \"prop-types\";\nimport EvaluationApplicationCard from \"../EvaluationApplicationCard\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(2)\n  },\n  inner: {\n    minWidth: '100%'\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n      marginLeft: 2,\n      flex: 1,\n      fontWeight: 'bold',\n      color: '#ffffff'\n  },\n  fieldsDialog: {\n    marginTop: 20\n  }\n}));\n\nconst EvaluationApplicationTable = props => {\n  const { className, history } = props;\n  const { idApplication } = props.match.params;\n\n  const [evaluationsApplications, setEvaluationsApplications] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [descriptionNewApplication, setDescriptionNewApplication] = React.useState('');\n\n  async function loadEvaluationsApplications(page){\n    try {\n      let url = `evaluation/practice/list-applications/${idApplication}?page=+${page}`;\n      if(searchText != ''){\n        url += '&description='+searchText;\n      }\n      const response = await api.get(url);\n      if(response.status == 200) {\n        setTotal(response.data.total);\n        setEvaluationsApplications(response.data.data);\n      } else {\n        setEvaluationsApplications([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    loadEvaluationsApplications(1);\n  }, []);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadEvaluationsApplications(1);\n  }\n\n  const handlePageChange = (event, page) => {\n    loadEvaluationsApplications(page+1)\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  async function saveNewApplication() {\n      try {\n          if (descriptionNewApplication.length < 5) {\n              setOpenNewApplication(false);\n              toast.error('Informe uma descrição com no mínimo 05 caracteres');\n              return;\n          }\n          const fk_evaluation_id = idApplication;\n          const description = descriptionNewApplication;\n          const data = {\n              description,\n          }\n          const response = await api.post(`evaluation/practice/add-application/${fk_evaluation_id}`, data);\n          if (response.status === 202) {\n              if (response.data.message) {\n                  toast.error(response.data.message);\n              }\n              setOpenNewApplication(false);\n          } else {\n              toast.success('Nova aplicação cadastrada.');\n              setDescriptionNewApplication('');\n              setOpenNewApplication(false);\n              window.location.reload();\n          }\n\n      } catch (error) {\n\n      }\n  }\n\n  //dialog de nova aplicação\n  const [openNewApplication, setOpenNewApplication] = React.useState(false);\n\n  const handleNewApplication = () => {\n    setOpenNewApplication(true);\n  };\n\n  const handleNewApplicationExit = () => {\n    setOpenNewApplication(false);\n  }\n\n  const handleChangeDescriptionNewApplication = (e) => {\n    setDescriptionNewApplication(e.target.value);\n  }\n\n  return (\n      <div className={classes.root}>\n        <UsersToolbar\n          onChangeSearch={updateSearch.bind(this)}\n          searchText={searchText}\n          onClickSearch={onClickSearch}\n          onClickHandleNewApplication={handleNewApplication}\n        />\n\n\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[10]}\n                  />\n\n                }/>\n            <CardContent>\n              {evaluationsApplications == null ?\n                  <LinearProgress color=\"secondary\"    />\n                  :\n                    <Grid\n                        container\n                        spacing={1}>\n                      <Grid\n                          item\n                          md={12}\n                          xs={12}>\n                        <Table>\n                          <TableBody>\n                            {evaluationsApplications.map(application => (\n                                <EvaluationApplicationCard application={application} idApplication={idApplication} />\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </Grid>\n                    </Grid> }\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[10]}\n              />\n            </CardActions>\n\n            {/* Dialog de cadastro de aplicação */}\n            <Dialog fullScreen onClose={handleNewApplicationExit} aria-labelledby=\"simple-dialog-title\" open={openNewApplication}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleNewApplicationExit} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h5\" className={classes.title}>\n                            Informe a descrição para a aplicação\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <TextField\n                    fullWidth\n                    label=\"Descrição\"\n                    margin=\"dense\"\n                    name=\"description\"\n                    variant=\"outlined\"\n                    onChange={handleChangeDescriptionNewApplication}\n                    value={descriptionNewApplication}\n                    className={classes.fieldsDialog}\n                />\n                <Button\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    className={classes.fieldsDialog}\n                    onClick={saveNewApplication}>\n                    Salvar\n                </Button>\n            </Dialog>\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nEvaluationApplicationTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default EvaluationApplicationTable;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField, IconButton, FormControlLabel, Switch, Tooltip, Typography\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport { toast } from 'react-toastify';\nimport validate from \"validate.js\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst schema = {\n  description: {\n    presence: { allowEmpty: false,  message: 'A descrição é obrigatória.'},\n    length: {\n      minimum: 4,\n      maximum: 300,\n      message: 'A descrição deve conter no mínimo 4 e no máximo 300 caracteres.'\n    }\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationDetails = props => {\n  const { className, history, ...rest } = props;\n  const { idApplication, codigoEvaluation } = props.match.params;\n  const [checkedRandom, setCheckedRandom] = React.useState(false);\n  const [checkedShowResult, setCheckedShowResult] = React.useState(false);\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {\n      'show_results' : false,\n      'random_questions' : false\n    },\n    touched: {},\n    errors: {}\n  });\n\n  async function saveApplicationDetails(){\n    try {\n      const description = formState.values.description;\n      const random_questions = checkedRandom;\n      const show_results = checkedShowResult;\n      const data = {\n        description,\n        random_questions,\n        show_results\n      }\n      const response = await api.put('evaluation/practice/applications/'+idApplication, data);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        } else if(response.data.errors[0].description){\n          toast.error(response.data.errors[0].description);\n        }\n      } else {\n        toast.success('Aplicação atualizada.');\n        history.push(`/evaluation-practice/applications-evaluation/${codigoEvaluation}`);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  async function findAApplication(id){\n    try {\n      const response = await api.get('evaluation/practice/applications/show/'+id);\n      if (response.status === 202) {\n        if(response.data.message){\n          toast.error(response.data.message);\n        }\n      } else {\n        setCheckedRandom(response.data.random_questions == 1 ? true : false);\n        setCheckedShowResult(response.data.show_results == 1 ? true : false);\n        setFormState(formState => ({\n          values: {\n            'description': response.data.description,\n          },\n          touched: {\n            ...formState.touched,\n          }\n        }));\n\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    if(idApplication){\n      findAApplication(idApplication);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: (errors) ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    });\n  };\n\n  const handleChangeRandom = event => {\n    setCheckedRandom(event.target.checked);\n  }\n\n  const handleChangeShowResult = event => {\n    setCheckedShowResult(event.target.checked);\n  }\n\n  const hasError = field =>\n      formState.touched[field] && formState.errors[field] ? true : false;\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}>\n      <form\n        autoComplete=\"off\">\n        <div className={classes.contentHeader}>\n          <IconButton onClick={handleBack}>\n            <ArrowBackIcon />\n          </IconButton>\n        </div>\n        <CardHeader\n          subheader=\"\"\n          title=\"Aplicação de Avaliação\"/>\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}>\n            <Grid\n              item\n              md={6}\n              xs={12}>\n              <TextField\n                fullWidth\n                error={hasError('description')}\n                helperText={\n                  hasError('description') ? formState.errors.description[0] : null\n                }\n                label=\"Descrição\"\n                margin=\"dense\"\n                name=\"description\"\n                onChange={handleChange}\n                value={formState.values.description || ''}\n                variant=\"outlined\"\n              />\n              {/* <TooltipCustomized\n                  title={\n                    <React.Fragment>\n                      <p>\n                        <Typography color=\"textPrimary\" variant=\"body2\">\n                          {'Caso esta opção fique ativa, todos os estudantes que forem realizar ' +\n                          ' esta aplicação receberão' +\n                          ' uma avaliação com as mesmas questões, mas cada estudante possuirá uma ' +\n                          ' avaliação com questões em ordem diferente das demais.'}\n                        </Typography>\n                      </p>\n                    </React.Fragment>\n                  }>\n                  <FormControlLabel\n                      control={\n                        <Switch\n                            checked={checkedRandom}\n                            onChange={handleChangeRandom}\n                            name=\"random_questions\"\n                            color=\"primary\"\n                        />\n                      }\n                      label=\"Questões aleatórias?\"\n                  />\n              </TooltipCustomized> */}\n              {/* <TooltipCustomized\n                  title={\n                    <React.Fragment>\n                      <p>\n                        <Typography color=\"textPrimary\" variant=\"body2\">\n                          {'Caso esta opção fique ativa, todos os estudantes terão acesso' +\n                          ' ao resultado da sua avaliação. No resultado é apenas apresentado' +\n                          ' se o estudante acertou ou errou as questões. A questão completa não' +\n                          ' é apresentada ao estudante.'}\n                        </Typography>\n                      </p>\n                    </React.Fragment>\n                  }>\n                <FormControlLabel\n                    control={\n                      <Switch\n                          checked={checkedShowResult}\n                          onChange={handleChangeShowResult}\n                          name=\"show_results\"\n                          color=\"primary\"\n                      />\n                    }\n                    label=\"Liberar o resultado?\"\n                />\n              </TooltipCustomized> */}\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={saveApplicationDetails}\n            disabled={!formState.isValid}>\n            Salvar\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nEvaluationApplicationDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationApplicationDetails;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent, IconButton, Paper,\n  Box, Typography, Collapse, Tooltip,\n} from '@material-ui/core';\nimport { Done, Close, ExpandMoreRounded } from \"@material-ui/icons\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageOrange: {\n    backgroundColor: '#F5A623',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  paperWrong: {\n    width: '88%',\n    backgroundColor: '#ef9a9a',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  paperRight: {\n    width: '88%',\n    backgroundColor: '#80cbc4',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  checkedCancel: {\n    color: '#f44336'\n  },\n  lineQuestion: {\n    marginLeft: 20,\n  },\n}));\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationResultsOverviewQuestion = props => {\n  const { className, history, result, numberQuestion, ...rest } = props;\n  const [ answerStudents, setAnswerStudents ] = useState([]);\n  const [expanded, setExpanded] = React.useState(false);\n  const [cancel, setCancel] = React.useState(false);\n\n  const classes = useStyles();\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  useEffect(() => {\n\n  }, [cancel]);\n\n\n  return (\n      <div>\n            <div>\n              <Card className={classes.root}>\n                <CardHeader\n                    action={\n                      <div>\n                        <Typography variant=\"button\" color=\"body1\" component=\"p\">\n                          Total de Repostas: {result.total_asnwer}\n                        </Typography>\n                        <TooltipCustomized\n                            title={\n                              <React.Fragment>\n                                <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                              </React.Fragment>\n                            }>\n                            <Typography variant=\"button\" color=\"body1\" component=\"p\">\n                              {result.percentage_correct < 30 ?\n                                  <span className={classes.percentageRed}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                  : result.percentage_correct < 70 ?\n                                      <span className={classes.percentageOrange}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                      : <span className={classes.percentageGreen}>{'Correto: '+result.percentage_correct+'%'}</span> }\n                            </Typography>\n                        </TooltipCustomized>\n                        <IconButton\n                            className={clsx(classes.expand, {\n                              [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\">\n                          <ExpandMoreRounded />\n                        </IconButton>\n                      </div>\n                    }\n                    title={ 'Questão ' + (numberQuestion+1)}/>\n\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                  <CardContent>\n                    <div className={classes.lineQuestion}>\n                      <div>\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                          {\n                            result.idQuestion < 10 ? 'Questão - 00000' + result.idQuestion :\n                                result.idQuestion < 100 ? 'Questão - 0000' + result.idQuestion :\n                                    result.idQuestion < 1000 ? 'Questão - 000' + result.idQuestion :\n                                        result.idQuestion < 10000 ? 'Questão - 00' + result.idQuestion :\n                                            result.idQuestion < 100000 ? 'Questão - 0' + result.idQuestion :\n                                                result.idQuestion\n                          }\n                        </Typography>\n\n                        <br />\n                      </div>\n                      { result.reference != \"\" && result.reference != null ?\n                          <div>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                              Referência:\n                            </Typography>\n                            <div> { result.reference } </div>\n                            <br />\n                          </div>\n                          : null}\n                      { result.skill != null ?\n                          <div>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                              Competência:\n                            </Typography>\n                            <div> { result.skill } </div>\n                            <br />\n                          </div>\n                          : null}\n                      { result.objects != null ?\n                          <div>\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                              Objeto(s) de Conhecimento:\n                            </Typography>\n                            {result.objects.map(item => (\n                                <div> { ReactHtmlParser (item.description) } </div>\n                            ))}\n                            <br />\n                          </div>\n                          : null}\n\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Texto base:\n                      </Typography>\n                      <div> { ReactHtmlParser (result.base_text) } </div>\n\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Enunciado:\n                      </Typography>\n                      <div> { ReactHtmlParser (result.stem) } </div>\n\n                      <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\n                        Alternativas:\n                      </Typography>\n                      <br />\n\n                      {result.itens.map(item => (\n                          item.correct == 1 ?\n                              <div>\n                                <Box display=\"flex\"\n                                     flexWrap=\"nowrap\">\n                                  { item.ordem }\n                                  <Paper className={clsx(classes.paper, classes.paperRight)} elevation={3} variant=\"outlined\">\n                                    { ReactHtmlParser ( item.description)  }\n                                  </Paper>\n                                  <TooltipCustomized\n                                      title={\n                                        <React.Fragment>\n                                          {'Representa o total e a porcentagem de respostas para a alternativa. O cálculo da porcentagem é ' +\n                                          'baseado no total de respostas de cada questão. A cor verde na alternativa representa o gabarito, ' +\n                                          'a cor vermelha representa um distrator.'}\n                                        </React.Fragment>\n                                      }>\n                                      <Box display=\"column\">\n                                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          { item.total_answer_item > 1 ? item.total_answer_item + ' Respostas.'\n                                              : item.total_answer_item + ' Resposta.'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          {item.percentage_answer + '%'}\n                                        </Typography>\n                                      </Box>\n                                  </TooltipCustomized>\n                                </Box>\n                              </div>\n                              :\n                              <div>\n                                <Box display=\"flex\"\n                                     flexWrap=\"nowrap\">\n                                  {item.ordem}\n                                  <Paper className={clsx(classes.paper, classes.paperWrong)} variant=\"outlined\">\n                                    { ReactHtmlParser(item.description) } </Paper>\n                                  <TooltipCustomized\n                                      title={\n                                        <React.Fragment>\n                                          {'Representa o total e a porcentagem de respostas para a alternativa. O cálculo da porcentagem é ' +\n                                          'baseado no total de respostas de cada questão. A cor verde na alternativa representa o gabarito, ' +\n                                          'a cor vermelha representa um distrator.'}\n                                        </React.Fragment>\n                                      }>\n                                      <Box display=\"column\">\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          { item.total_answer_item > 1 ? item.total_answer_item + ' Respostas.'\n                                              : item.total_answer_item + ' Resposta.'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          {item.percentage_answer + '%'}\n                                        </Typography>\n                                      </Box>\n                                  </TooltipCustomized>\n                                </Box>\n                              </div>\n                      ))}\n                    </div>\n\n                  </CardContent>\n                </Collapse>\n              </Card>\n            </div>\n      </div>\n  );\n};\n\nEvaluationApplicationResultsOverviewQuestion.propTypes = {\n  className: PropTypes.string,\n  result: PropTypes.object,\n  numberQuestion: PropTypes.number,\n};\n\nexport default EvaluationApplicationResultsOverviewQuestion;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent, Paper,\n  Box, Typography, Tooltip, Tab, Tabs, LinearProgress,\n} from '@material-ui/core';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageOrange: {\n    backgroundColor: '#F5A623',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  paperWrong: {\n    width: '88%',\n    backgroundColor: '#ef9a9a',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  paperRight: {\n    width: '88%',\n    backgroundColor: '#80cbc4',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  checkedCancel: {\n    color: '#f44336'\n  },\n  lineQuestion: {\n    marginLeft: 20,\n  },\n  labelRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '10px',\n    padding: '5px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n}));\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`nav-tabpanel-${index}`}\n          aria-labelledby={`nav-tab-${index}`}\n          {...other}\n      >\n        {value === index && (\n            <Box p={3}>\n              <Typography>{children}</Typography>\n            </Box>\n        )}\n      </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n      <Tab\n          component=\"a\"\n          onClick={(event) => {\n            event.preventDefault();\n          }}\n          {...props}\n      />\n  );\n}\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationResultsSkillObjects = props => {\n  const { className, history, result, objects, skills, ...rest } = props;\n  const [ value, setValue] = React.useState(0);\n\n  const classes = useStyles();\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n\n  }, []);\n\n  return (\n      <div>\n        <Paper className={classes.root}>\n          <Tabs\n              variant=\"fullWidth\"\n              value={value}\n              onChange={handleChangeTab}\n              aria-label=\"nav tabs example\">\n            <LinkTab label=\"Competências\" href=\"#\" {...a11yProps(0)} />\n            <LinkTab label=\"Objetos de Conhecimento\" href=\"/#\" {...a11yProps(1)} />\n\n          </Tabs>\n          <TabPanel value={value} index={0}>\n            { skills == null ?\n                <LinearProgress color=\"secondary\" />\n                :\n                skills.length == 0 ?\n                    <span className={classes.labelRed}>Esta avaliação não possui competências associadas.</span>\n                :\n                skills.map(result => (\n                  <Card\n                      {...rest}\n                      className={classes.root}>\n                    <CardHeader\n                        className={classes.head}\n                        avatar={\n                          <div>\n                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                              {'Curso : '+result.course }\n                            </Typography>\n                          </div>\n                        }\n                        action={\n                          <div>\n                            <TooltipCustomized\n                                title={\n                                  <React.Fragment>\n                                    {'O Total de questões representa a quantidade de todas as questões que foram aplicadas na avaliação com a competência '}\n                                    <b>{result.description}</b>{' associada.'}\n                                  </React.Fragment>\n                                }>\n                              <Typography variant=\"body1\" component=\"p\">\n                                {'Total de questões: '+result.total_questions}\n                              </Typography>\n                            </TooltipCustomized>\n                            <TooltipCustomized\n                                title={\n                                  <React.Fragment>\n                                    {'O Total de respostas representa a quantidade de todas as respostas cadastradas para todas as questões com a competência '}\n                                    <b>{result.description}</b>{' associada.'}\n                                  </React.Fragment>\n                                }>\n                              <Typography variant=\"body1\" component=\"p\">\n                                {'Total de respostas: '+result.total_answer}\n                              </Typography>\n                            </TooltipCustomized>\n\n                            <TooltipCustomized\n                                title={\n                                  <React.Fragment>\n                                    <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                    <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                    <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                  </React.Fragment>\n                                }>\n                              <Typography variant=\"body1\" component=\"p\">\n                                {result.percentage_correct < 30 ?\n                                    <span className={classes.percentageRed}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                    : result.percentage_correct < 70 ?\n                                        <span className={classes.percentageOrange}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                        : <span className={classes.percentageGreen}>{'Correto: '+result.percentage_correct+'%'}</span> }\n                              </Typography>\n                            </TooltipCustomized>\n\n                          </div>\n                        }/>\n                        <CardContent>\n                          <Typography variant=\"h4\" color=\"textPrimary\" component=\"h2\">\n                            {result.description }\n                          </Typography>\n                        </CardContent>\n                  </Card>\n            ))}\n\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            {objects == null ?\n                <LinearProgress color=\"secondary\"    />\n                :\n                objects.length == 0 ?\n                <span className={classes.labelRed}>Esta avaliação não possui objetos de conhecimento associados.</span>\n                :\n              objects.map(result => (\n                <Card\n                    {...rest}\n                    className={classes.root}>\n                  <CardHeader\n                      className={classes.head}\n                      avatar={\n                        <div>\n                          <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                            {'Curso : '+result.course }\n                          </Typography>\n                        </div>\n                      }\n                      action={\n                        <div>\n                          <TooltipCustomized\n                              title={\n                                <React.Fragment>\n                                  {'O Total de questões representa a quantidade de todas as questões que foram aplicadas na avaliação com o objeto de conhecimento '}\n                                  <b>{result.description}</b>{' associado.'}\n                                </React.Fragment>\n                              }>\n                            <Typography variant=\"body1\" component=\"p\">\n                              {'Total de questões: '+result.total_questions}\n                            </Typography>\n                          </TooltipCustomized>\n                          <TooltipCustomized\n                              title={\n                                <React.Fragment>\n                                  {'O Total de respostas representa a quantidade de todas as respostas cadastradas para todas as questões com o objeto de conhecimento '}\n                                  <b>{result.description}</b>{' associado.'}\n                                </React.Fragment>\n                              }>\n                            <Typography variant=\"body1\" component=\"p\">\n                              {'Total de respostas: '+result.total_answer}\n                            </Typography>\n                          </TooltipCustomized>\n\n                          <TooltipCustomized\n                              title={\n                                <React.Fragment>\n                                  <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                  <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                  <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                </React.Fragment>\n                              }>\n                            <Typography variant=\"body1\" component=\"p\">\n                              {result.percentage_correct < 30 ?\n                                  <span className={classes.percentageRed}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                  : result.percentage_correct < 70 ?\n                                      <span className={classes.percentageOrange}>{'Correto: '+result.percentage_correct+'%'}</span>\n                                      : <span className={classes.percentageGreen}>{'Correto: '+result.percentage_correct+'%'}</span> }\n                            </Typography>\n                          </TooltipCustomized>\n\n                        </div>\n                      }/>\n                      <CardContent>\n                        <Typography variant=\"h4\" color=\"textPrimary\" component=\"h2\">\n                          {result.description }\n                        </Typography>\n                      </CardContent>\n                </Card>\n\n            ))}\n\n          </TabPanel>\n\n\n        </Paper>\n\n      </div>\n  );\n};\n\nEvaluationApplicationResultsSkillObjects.propTypes = {\n  className: PropTypes.string,\n  skills: PropTypes.array.isRequired,\n  objects: PropTypes.array.isRequired,\n};\n\nexport default EvaluationApplicationResultsSkillObjects;\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider, IconButton, Table, TableHead, TableRow,\n  TableCell, TableBody, Tab, Paper, Tabs,\n  Box, Typography, AppBar, Tooltip, LinearProgress\n} from '@material-ui/core';\nimport api from \"../../../../services/api\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Done, Close, Block } from \"@material-ui/icons\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport EvaluationApplicationResultsOverviewQuestion from \"./EvaluationApplicationResultsOverViewQuestion\";\nimport EvaluationApplicationResultsSkillObjects from \"./EvaluationApplicationResultsSkillObjects\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 10,\n  },\n  content: {\n    padding: 0\n  },\n  headStudent: {\n    width: '100px ',\n    height: '115px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    paddingLeft: '12px',\n    boxSizing: 'border-box',\n    border: '1px solid #f2f2f2',\n    lineHeight: '40px',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial'\n  },\n  headPercentage: {\n    width: '30px',\n    height: '90px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    paddingLeft: '12px',\n    boxSizing: 'border-box',\n    border: '1px solid #f2f2f2',\n    lineHeight: '40px',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial'\n  },\n  bodyStudent: {\n    maxWidth: '170px',\n    width: '100px',\n    height: '82px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    paddingLeft: '6px',\n    boxSizing: 'border-box',\n    fontWeight: 'bold',\n    border: '1px solid #f2f2f2',\n    lineHeight: '20px',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'auto',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial',\n  },\n  bodyPercentage: {\n    width: '20%',\n    height: '82px',\n    textAlign: 'center',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    boxSizing: 'border-box',\n    fontWeight: 'bold',\n    border: '1px solid #f2f2f2',\n    lineHeight: '15px',\n    fontSize: '12px',\n    whiteSpace: 'nowrap',\n    overflow: 'auto',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Open Sans, sans-serif, Helvetica, Arial'\n  },\n  headQuestion: {\n    width: '90px',\n    backgroundColor: '#FFF',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '115px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  percentageRed: {\n    backgroundColor: '#EC0B43',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageOrange: {\n    backgroundColor: '#F5A623',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageGreen: {\n    backgroundColor: '#5DE2A5',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    color: '#fff',\n    borderRadius: 4\n  },\n  percentageNull: {\n    backgroundColor: '#90a4ae',\n    color: '#fff',\n    display: 'block',\n    margin: '8px',\n    padding: '0 4px',\n    textAlign: 'center',\n    borderRadius: 4\n  },\n  answerCorrect: {\n    width: '90.0px',\n    backgroundColor: '#5DE2A5',\n    //display: 'inline-block',\n    color: '#ffffff',\n    textAlign: 'center',\n    height: '82px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '25px',\n  },\n  answerIncorrect: {\n    width: '90.0px',\n    backgroundColor: '#F14D76',\n    //display: 'inline-block',\n    color: '#ffffff',\n    textAlign: 'center',\n    height: '82px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '25px',\n  },\n  answerNull: {\n    width: '90.0px',\n    backgroundColor: '#cfd8dc',\n    //display: 'inline-block',\n    color: '#393A68',\n    textAlign: 'center',\n    height: '82px',\n    boxSizing: 'border-box',\n    border: '1px solid #F2F2F2',\n    minWidth: '80px',\n    padding: '12px',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  },\n  paperWrong: {\n    width: '88%',\n    backgroundColor: '#ef9a9a',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  paperRight: {\n    width: '88%',\n    backgroundColor: '#80cbc4',\n    color: '#212121',\n    margin: 3,\n    padding: 8\n  },\n  labelStudent: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <div\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`nav-tabpanel-${index}`}\n          aria-labelledby={`nav-tab-${index}`}\n          {...other}\n      >\n        {value === index && (\n            <Box p={3}>\n              <Typography>{children}</Typography>\n            </Box>\n        )}\n      </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n      <Tab\n          component=\"a\"\n          onClick={(event) => {\n            event.preventDefault();\n          }}\n          {...props}\n      />\n  );\n}\n\nconst TooltipCustomized = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst EvaluationApplicationResults = props => {\n  const { className, history, ...rest } = props;\n  const { idApplication } = props.match.params;\n  const [ avgCorrectQuestions, setAvgCorrectQuestions ] = useState(0);\n  const [ totalVarianceQuestions, setTotalVarianceQuestions ] = useState(0);\n  const [ totalVarianceStudents, setTotalVarianceStudents ] = useState(0);\n  const [ answerStudents, setAnswerStudents ] = useState(null);\n  const [ overviewQuestions, setOverviewQuestions ] = useState(null);\n  const [ overviewQuestionsHead, setOverviewQuestionsHead ] = useState([]);\n  const [ objects, setObjects ] = useState(null);\n  const [ skills, setSkills ] = useState(null);\n  const [ expanded, setExpanded] = React.useState(false);\n  const [ value, setValueTab] = React.useState(0);\n\n  const classes = useStyles();\n\n  async function findResultsSkill(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-percentage-question-by-skill/'+id);\n      if (response.status === 200) {\n        setSkills(response.data);\n      } else {\n        setSkills([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findResultsObjects(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-percentage-question-by-objects/'+id);\n      if (response.status === 200) {\n        setObjects(response.data);\n      } else {\n        setObjects([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findOverviewQuestions(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-percentage-question/'+id);\n\n      if (response.status === 200) {\n        setOverviewQuestions(response.data[0].questions);\n        setOverviewQuestionsHead(response.data[0]);\n        setTotalVarianceQuestions(response.data[0].variance_total);\n      } else {\n        setOverviewQuestions([]);\n      }\n    } catch (error) {\n\n    }\n  }\n\n  async function findResults(id){\n    try {\n      const response = await api.get('/evaluation/applications/result-answer-students/'+id);\n\n      if (response.status === 200) {\n        setAnswerStudents(response.data.students);\n        setTotalVarianceStudents(response.data.variance_total);\n        setAvgCorrectQuestions(response.data.avg_correct_question);\n      } else {\n        setAnswerStudents([]);\n      }\n\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n\n  }, [answerStudents]);\n\n  useEffect(() => {\n    if(idApplication){\n      findResults(idApplication);\n      findOverviewQuestions(idApplication);\n      findResultsSkill(idApplication);\n      findResultsObjects(idApplication);\n    }\n\n  }, []);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValueTab(newValue);\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n      <div>\n        <Card\n            {...rest}\n            className={clsx(classes.root, className)}>\n          <div className={classes.contentHeader}>\n            <IconButton onClick={handleBack}>\n              <ArrowBackIcon />\n            </IconButton>\n          </div>\n          <CardHeader\n              subheader=\"\"\n              title=\"Resultado da Aplicação\"/>\n          <Divider />\n          <Card className={classes.root}>\n            {overviewQuestionsHead.idApplication!= null ?\n              <CardContent>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {'Código da aplicação: '+overviewQuestionsHead.idApplication +'.'}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {'Descrição da aplicação: '+overviewQuestionsHead.description_application + '.'}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {overviewQuestionsHead.qtdQuestions > 1 ?\n                      'Esta avaliação possui '+ overviewQuestionsHead.qtdQuestions + ' questões.' :\n                      'Esta avaliação possui '+ overviewQuestionsHead.qtdQuestions + ' questão.'}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {overviewQuestionsHead.qtdStudents > 1 ?\n                      'Esta avaliação foi respondida por '+ overviewQuestionsHead.qtdStudents +' estudantes.' :\n                      'Esta avaliação foi respondida por '+ overviewQuestionsHead.qtdStudents +' estudante.'\n                      }\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  { avgCorrectQuestions != 0 ?\n                    avgCorrectQuestions > 1 ?\n                      'Esta avaliação possui uma média de acerto igual a '+ avgCorrectQuestions + ' questões por estudante.' :\n                      'Esta avaliação possui uma média de acerto igual a '+ avgCorrectQuestions + ' questão por estudante.' :\n                  null}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                { overviewQuestionsHead.percentagem_geral_correct_evaluation != 0 ?\n                  'A porcentagem média de questões corretas é: '+ overviewQuestionsHead.percentagem_geral_correct_evaluation+'%.' :\n                  null}\n                </Typography>\n                { overviewQuestionsHead.qtdStudents > 1 && totalVarianceStudents > 0 ?\n                <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n                  {'Alfa de Cronbach: '+\n                  (overviewQuestionsHead.qtdQuestions/(overviewQuestionsHead.qtdQuestions-1) *\n                      (1-(totalVarianceQuestions/totalVarianceStudents))).toFixed(3)\n                      + '.'}\n                </Typography> : null }\n                { answerStudents == null ? null :\n                  !answerStudents[0] ?\n                    <span className={classes.percentageRed}>SEM RESULTADO</span>\n                   : null }\n              </CardContent> : null }\n          </Card>\n          { answerStudents == null ?\n              <LinearProgress color=\"secondary\"    />\n              :\n            answerStudents[0] ?\n            <CardContent className={classes.content}>\n                <AppBar position=\"static\">\n                  <Tabs\n                      variant=\"fullWidth\"\n                      value={value}\n                      onChange={handleChange}\n                      aria-label=\"nav tabs example\">\n                    <LinkTab label=\"Visão Geral\" href=\"/drafts\" {...a11yProps(0)} />\n                    <LinkTab label=\"Questões\" href=\"/trash\" {...a11yProps(1)} />\n                    <LinkTab label=\"Outros Dados\" href=\"/spam\" {...a11yProps(2)} />\n                  </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0}>\n                  <Box\n                      display=\"flex\"\n                      flexWrap=\"nowrap\"\n                      p={1}\n                      m={1}\n                      bgcolor=\"background.paper\">\n                      <Box p={1}>\n                          <Table>\n                            <TableHead>\n                              <TableRow>\n                                <TableCell  className={classes.headStudent}>Aluno(a)</TableCell>\n                                <TooltipCustomized\n                                    title={\n                                      <React.Fragment>\n                                        <Typography color=\"inherit\">\n                                          {'Dado um conjunto de dados, a variância ('}σ<sup>2</sup>{')  é uma medida de dispersão que mostra o quão ' +\n                                        'distante cada valor desse conjunto está do valor central (médio). Quanto menor é a variância, ' +\n                                        'mais próximos os valores estão da média; mas quanto maior ' +\n                                        'ela é, mais os valores estão distantes da média.'}\n                                        </Typography>\n                                        <Typography color=\"inherit\">\n                                          <b>{'Abaixo está o significado das cores para o cabeçalho da questão:'}</b>\n                                        </Typography>\n                                        <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                        <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                        <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                      </React.Fragment>\n                                    }>\n                                    <TableCell className={classes.headPercentage}>% de Acerto</TableCell>\n                                </TooltipCustomized>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {answerStudents.map(result => (\n                                  <TableRow\n                                      className={classes.tableRow}\n                                      hover\n                                      key={result.fk_user_id}>\n                                    <TooltipCustomized\n                                        title={\n                                          <React.Fragment>\n                                            <Typography align=\"center\" color=\"inherit\" style={{fontWeight: 'bold'}}>\n                                              {result.student}\n                                              </Typography>\n                                            <p>\n                                              <Typography color=\"textPrimary\" variant=\"caption\">\n                                                {'O estudante iniciou em '+ moment(result.hr_start).utc().format('MMMM Do YYYY, h:mm:ss a')+'.'}\n                                              </Typography>\n                                            </p>\n                                            <p>\n                                              <Typography color=\"textPrimary\" variant=\"caption\">\n                                                {result.hr_finished != null ?\n                                                    'O estudante finalizou em '+ moment(result.hr_finished).format('MMMM Do YYYY, h:mm:ss a')+'.' :\n                                                    'A avaliação não foi finalizada pelo estudante.'}\n                                              </Typography>\n                                            </p>\n                                            <p>\n                                              {result.hr_finished != null ?\n                                                  <Typography color=\"textPrimary\" variant=\"caption\">\n                                                    {'Tempo de prova: '+result.total_time}\n                                                  </Typography> : null }\n                                            </p>\n                                          </React.Fragment>\n                                        }>\n                                        <TableCell className={classes.bodyStudent}>\n                                          <div className={classes.labelStudent}>\n                                            {result.student}\n                                            <Typography color=\"textSecondary\" variant=\"caption\">\n                                              {result.total_time == 'Avaliação não finalizada.' ? result.total_time : 'Tempo: '+result.total_time}\n                                            </Typography>\n                                          </div>\n                                        </TableCell>\n                                    </TooltipCustomized>\n                                    <TableCell align=\"center\" style={{margin: '0px'}} className={classes.bodyPercentage}>\n                                      {result.percentage_correct < 30 ?\n                                          <span className={classes.percentageRed}>{result.percentage_correct+'%'}</span>\n                                          : result.percentage_correct < 70 ?\n                                              <span className={classes.percentageOrange}>{result.percentage_correct+'%'}</span>\n                                              : <span className={classes.percentageGreen}>{result.percentage_correct+'%'}</span> }\n                                      <Typography style={{margin: '0px'}} variant=\"caption\" color=\"textPrimary\" display=\"block\" gutterBottom>\n                                        σ<sup>2</sup>{' = '+result.variance}\n                                      </Typography>\n                                    </TableCell>\n\n                                  </TableRow>\n                              ))}\n                            </TableBody>\n                          </Table>\n                      </Box>\n                    <PerfectScrollbar>\n                      <Box p={1}>\n\n                            <div className={classes.inner}>\n                                <Table>\n                                  <TableHead>\n                                    <TableRow>\n                                      {!overviewQuestions ? null :\n                                          overviewQuestions.map((result, i) => (\n                                          <TooltipCustomized\n                                              title={\n                                                <React.Fragment>\n                                                  <Typography color=\"inherit\">\n                                                    {'Dado um conjunto de dados, a variância ('}σ<sup>2</sup>{')  é uma medida de dispersão que mostra o quão ' +\n                                                                    'distante cada valor desse conjunto está do valor central (médio). Quanto menor é a variância, ' +\n                                                    'mais próximos os valores estão da média; mas quanto maior ' +\n                                                    'ela é, mais os valores estão distantes da média.'}\n                                                  </Typography>\n                                                  <Typography color=\"inherit\">\n                                                    <b>{'Abaixo está o significado das cores para o cabeçalho da questão:'}</b>\n                                                  </Typography>\n                                                  <span className={classes.percentageRed}>{'De 0% a 29% de acerto'}</span>\n                                                  <span className={classes.percentageOrange}>{'De 30% a 69% de acerto'}</span>\n                                                  <span className={classes.percentageGreen}>{'De 70% a 100% de acerto'}</span>\n                                                </React.Fragment>\n                                              }>\n                                            <TableCell className={classes.headQuestion}>\n                                              {'Q' + (i+1)}\n                                              {result.percentage_correct_round < 30 ?\n                                                  <span className={classes.percentageRed}>{result.percentage_correct_round+'%'}</span>\n                                                  : result.percentage_correct_round < 70 ?\n                                                      <span className={classes.percentageOrange}>{result.percentage_correct_round+'%'}</span>\n                                                      : <span className={classes.percentageGreen}>{result.percentage_correct_round+'%'}</span> }\n                                              <Typography variant=\"caption\" color=\"textPrimary\" gutterBottom>\n                                                        σ<sup>2</sup>{'='+result.variance}\n                                              </Typography>\n                                            </TableCell>\n                                          </TooltipCustomized>\n                                      ))}\n                                    </TableRow>\n                                  </TableHead>\n                                  <TableBody>\n                                    {!answerStudents ? null :\n                                        answerStudents.map(result => (\n                                        <TooltipCustomized\n                                            title={\n                                              <React.Fragment>\n                                                <Typography align=\"center\" color=\"inherit\">\n                                                    A letra informa a alternativa que o estudante selecionou.</Typography>\n                                                <span className={classes.percentageRed}>{'Errou'}</span>\n                                                <span className={classes.percentageGreen}>{'Acertou'}</span>\n                                                <span className={classes.percentageNull}>{'Não respondeu'}</span>\n                                              </React.Fragment>\n                                            }>\n                                            <TableRow\n                                                className={classes.tableRow}\n                                                hover\n                                                key={result.fk_user_id}>\n                                              {result.questions.map(quest => (\n                                                  quest.itemSelected == null ?\n                                                      <TableCell className={classes.answerNull}>\n                                                        <Block />\n                                                      </TableCell>\n                                                      :\n                                                  quest.correct == 1 ?\n                                                      <TableCell className={classes.answerCorrect}>\n                                                        {quest.ordemQuestion}\n                                                        <Done />\n\n                                                      </TableCell> :\n                                                      <TableCell className={classes.answerIncorrect}>\n                                                        {quest.ordemQuestion}\n                                                        <Close />\n                                                      </TableCell>\n                                              ))}\n\n                                            </TableRow>\n                                        </TooltipCustomized>\n                                    ))}\n                                  </TableBody>\n                                </Table>\n                            </div>\n\n                      </Box>\n                    </PerfectScrollbar>\n                  </Box>\n                </TabPanel>\n               {/*visão geral das questões */}\n                <TabPanel value={value} index={1}>\n                  { !overviewQuestions ? null :\n                      overviewQuestions.map((result, i) => (\n                    <EvaluationApplicationResultsOverviewQuestion\n                                                      result={result} numberQuestion={i}/>\n                      ))}\n                </TabPanel>\n                {/* competências e objetos de conhecimento */}\n                <TabPanel value={value} index={2}>\n                  <EvaluationApplicationResultsSkillObjects\n                                skills={skills}\n                                objects={objects}/>\n                </TabPanel>\n          </CardContent>\n              : null }\n       </Card>\n      </div>\n  );\n};\n\nEvaluationApplicationResults.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EvaluationApplicationResults;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button,\n  MenuItem,\n  TextField,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio, Tooltip, Card, CardActions, CardContent, Collapse,\n  IconButton, Hidden, Grid} from '@material-ui/core';\nimport {withRouter} from \"react-router-dom\";\nimport api from \"../../../../../../services/api\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FcClearFilters, FcSearch } from 'react-icons/fc';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n  }\n}));\n\nconst QuestionToolbar = props => {\n  const { className, onClickSearch, onChangeSearch, searchText, onClickCleanSearch,\n                        history, ...rest } = props;\n  const [courses, setCourses] = useState([{'id': '0', 'description': 'Todos as áreas'}]);\n  const [objects, setObjects] = useState([]);\n  const [skills, setSkills] = useState([]);\n  const [courseSelect, setCourseSelect] = useState([]);\n  const [objectSelect, setObjectSelect] = useState([]);\n  const [skillSelect, setSkillSelect] = useState([]);\n  const [idSelect, setIdSelect] = useState('');\n  const [keywordsAll, setKeywordsAll] = useState([]);\n  /* S - suas questões\n     T - todas as questões\n   */\n  const [valueSelect, setValueSelect] = React.useState('S');\n\n  const classes = useStyles();\n\n\n  const onClickNewCourse = e => {\n    history.push('/question-details');\n  }\n\n  const onChangeCourse = (e) =>{\n    setCourseSelect(e.target.value);\n    searchText[1] = {\"fk_course_id\" : e.target.value};\n    searchText[2] = {\"fk_object_id\" : 0};\n    searchText[3] = {\"fk_skill_id\" : 0};\n  }\n\n  const onChangeObject = (e) =>{\n    setObjectSelect(e.target.value);\n    searchText[2] = {\"fk_object_id\" : e.target.value};\n  }\n\n  const onChangeId = (e) =>{\n    setIdSelect(e.target.value);\n    searchText[5] = {\"id\" : e.target.value};\n  }\n\n  const onChangeSkill = (e) =>{\n    setSkillSelect(e.target.value);\n    searchText[3] = {\"fk_skill_id\" : e.target.value};\n  }\n\n  async function loadCourses(){\n    try {\n      const response = await api.get('all/courses-user');\n      setCourses([...courses, ...response.data]);\n\n    } catch (error) {\n\n    }\n  }\n\n  async function loadObjects(){\n    try {\n      const fk_course_id = courseSelect;\n      const data = {\n        fk_course_id\n      }\n      const response = await api.get('all/objects?fk_course_id='+courseSelect);\n\n      setObjects([{'id': '0', 'description': 'Todos os objetos'}, ...response.data]);\n\n    } catch (error) {\n\n    }\n  }\n\n  async function loadSkills(){\n    try {\n      const fk_course_id = courseSelect;\n      const data = {\n        fk_course_id\n      }\n      const response = await api.get('all/skills?fk_course_id='+courseSelect);\n\n      setSkills([{'id': '0', 'description': 'Todas as competências'}, ...response.data]);\n\n    } catch (error) {\n\n    }\n  }\n\n  async function loadKeywordsAll(){\n    try {\n      const response = await api.get('all/keywords');\n      if(response.status === 200){\n        setKeywordsAll(response.data);\n      }\n    } catch (error) {\n    }\n  }\n\n  const handleChangeSelect = (e) => {\n    setValueSelect(e.target.value);\n    searchText[0] = {\"value\" : e.target.value};\n  };\n\n  useEffect(() => {\n    loadCourses();\n    searchText[0] = {\"value\" : \"S\"};\n    searchText[1] = {\"fk_course_id\" : 0};\n    searchText[2] = {\"fk_object_id\" : 0};\n    searchText[3] = {\"fk_skill_id\" : 0};\n    searchText[4] = {\"keyword\" : ''};\n    searchText[5] = {\"id\" : ''};\n  }, []);\n\n  useEffect(() => {\n    if(localStorage.getItem('@Questione-search-course') != null){\n      setCourseSelect(localStorage.getItem('@Questione-search-course'));\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    loadKeywordsAll();\n    if(courseSelect != 0) {\n      loadObjects();\n      loadSkills();\n    } else {\n      setObjects([{'id': '0', 'description': 'Todos os objetos'}]);\n      setSkills([{'id': '0', 'description': 'Todas as competências'}]);\n    }\n  }, [courseSelect]);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const selectKeyWord = (event, newValue) => {\n    if(newValue!=null){\n      searchText[4].keyword = newValue.keyword;\n    } else {\n      searchText[4].keyword = '';\n    }\n  }\n\n  const [value, setValue] = React.useState('');\n  const [inputValue, setInputValue] = React.useState('');\n\n  return (\n      <div\n          {...rest}\n          className={clsx(classes.root, className)}>\n        <div className={classes.row}>\n          <Typography variant=\"h3\" className={classes.title}>{'Questões'}</Typography>\n          <span className={classes.spacer} />\n        </div>\n        <div className={classes.row}>\n          <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={onClickNewCourse}>\n            Nova Questão\n          </Button>\n        </div>\n        <Card className={classes.root}>\n          <div style={{ margin: '16px' }}>\n            Para mais informações sobre o módulo questões,&nbsp;\n            <a\n              href=\"https://docs.google.com/document/d/1JzpLbCMDaOQbGubzB6l1KDBaPjGro10-x2OHxdFLtqU/edit?usp=sharing\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              clique aqui\n            </a>\n          </div>\n          <CardContent>\n              <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={searchText[0] ? searchText[0].value : 'S'} onChange={handleChangeSelect}>\n                  <FormControlLabel value=\"S\" control={<Radio />} label=\"Listar apenas suas questões.\" />\n                  <FormControlLabel value=\"T\" control={<Radio />} label=\"Listar questões de todos os usuários.\" />\n                </RadioGroup>\n              </FormControl>\n              <Tooltip title=\"Clique para buscar\">\n                <Button\n                    onClick={onClickSearch}>\n                  <FcSearch size=\"30\"/>\n                </Button>\n              </Tooltip>\n            <Tooltip title=\"Clique para limpar o filtro da busca\">\n              <Button\n                  onClick={onClickCleanSearch}>\n                <FcClearFilters size=\"30\"/>\n              </Button>\n            </Tooltip>\n\n          </CardContent>\n          <CardActions disableSpacing>\n            <Tooltip title=\"Clique para mais opções de pesquisa\">\n              <IconButton\n                  className={clsx(classes.expand, {\n                    [classes.expandOpen]: expanded,\n                  })}\n                  onClick={handleExpandClick}\n                  aria-expanded={expanded}\n                  aria-label=\"show more\">\n                <ExpandMoreIcon />\n              </IconButton>\n              </Tooltip>\n          </CardActions>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <div className={classes.row}>\n                <TextField\n                    label=\"Código\"\n                    helperText=\"Código da Questão\"\n                    margin=\"dense\"\n                    onChange={onChangeId}\n                    value={searchText[5] != null  ? searchText[5].id : \"\"}\n                    style={{width: '140px'}}\n                    variant=\"outlined\"\n                />\n                <TextField className={classes.textField}\n                    id=\"filled-select-currency\"\n                    select\n                    label=\"Área\"\n                    value={searchText[1] ? searchText[1].fk_course_id : 0}\n                    onChange={onChangeCourse}\n                    helperText=\"Selecione a àrea.\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                   style={{width: '300px'}}>\n                  {courses.map((option) => (\n                      <MenuItem key={option.id} value={option.id}>\n                        {option.description}\n                      </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                    className={classes.textField}\n                    id=\"filled-select-currency\"\n                    select\n                    label=\"Competência\"\n                    value={searchText[3] ? searchText[3].fk_skill_id : 0}\n                    onChange={onChangeSkill}\n                    helperText=\"Selecione a competência.\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style={{width: '300px'}}>\n                  {skills.map((option) => (\n                      <MenuItem key={option.id} value={option.id}>\n                        {option.description}\n                      </MenuItem>\n                  ))}\n                </TextField>\n\n              </div>\n              <div className={classes.row}>\n                <TextField\n                    id=\"filled-select-currency\"\n                    select\n                    label=\"Objeto de conhecimento\"\n                    value={searchText[2] ? searchText[2].fk_object_id : 0}\n                    onChange={onChangeObject}\n                    helperText=\"Selecione o objeto de conhecimento.\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style={{width: '300px'}}>\n                  {objects.map((option) => (\n                      <MenuItem key={option.id} value={option.id}>\n                        {option.description}\n                      </MenuItem>\n                  ))}\n                </TextField>\n                <Autocomplete\n                    id=\"keywords\"\n                    value={value}\n                    onChange={(event, newValue) => {\n                      setValue(newValue);\n                    }}\n                    inputValue={searchText[4] ? searchText[4].keyword : inputValue}\n                    onInputChange={(event, newInputValue) => {\n                      searchText[4].keyword = newInputValue;\n                      setInputValue(newInputValue);\n                    }}\n                    id=\"controllable-states-demo\"\n                    options={keywordsAll}\n                    getOptionLabel={(option) => option.keyword}\n                    style={{ marginLeft: '10px', width: '200px' }}\n                    renderInput={(params) => <TextField {...params} label=\"Palavra-chave\" variant=\"outlined\" />}\n                />\n              </div>\n\n            </CardContent>\n          </Collapse>\n        </Card>\n\n    </div>\n  );\n};\n\nQuestionToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearch: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  onClickCleanSearch: PropTypes.func,\n  searchText: PropTypes.array,\n  history: PropTypes.object\n};\n\nexport default withRouter(QuestionToolbar);\n","import React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  LinearProgress,\n  TablePagination, Grid, CardHeader\n} from '@material-ui/core';\nimport api from '../../../../services/api';\nimport UsersToolbar from \"./components/QuestionToolbar\";\nimport PropTypes from \"prop-types\";\nimport QuestionCard from \"../../../../components/QuestionCard/QuestionCard\";\nimport {QUESTION_SEARCH_SKILL, searchQuestions, searchQuestionsPage} from \"../../../../services/seacrhQuestions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  content: {\n    padding: 0,\n    marginTop: theme.spacing(1)\n  },\n  inner: {\n    minWidth: '100%'\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  headTable: {\n    fontWeight: \"bold\"\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst QuestionTable = props => {\n  const { className, history } = props;\n\n  const [questions, setQuestions] = useState(null);\n\n  const classes = useStyles();\n\n  const [rowsPerPage, setRowsPerPage] = useState(8);\n  const [total, setTotal] = useState(0);\n  const [searchText, setSearchText] = useState([]);\n  const [refresh, setRefresh] = React.useState(0);\n  const [page, setPage] = useState(0);\n\n  async function loadQuestions(page){\n    try {\n      let url = 'question?page='+page;\n\n      let QUESTION_SEARCH_TYPE = \"\";\n      if(searchText[0].value == \"S\"){\n        url += '&user=S';\n        QUESTION_SEARCH_TYPE = 'S';\n      } else {\n        url += '&user=T';\n        QUESTION_SEARCH_TYPE = 'T';\n      }\n      let QUESTION_SEARCH_COURSE = 0;\n      let QUESTION_SEARCH_SKILL = 0;\n      let QUESTION_SEARCH_OBJECT = 0;\n      if(searchText[1].fk_course_id > 0){\n        url += '&fk_course_id='+searchText[1].fk_course_id;\n        QUESTION_SEARCH_COURSE = searchText[1].fk_course_id;\n\n        if(searchText[2].fk_object_id > 0){\n          url += '&fk_object_id='+searchText[2].fk_object_id;\n          QUESTION_SEARCH_OBJECT = searchText[2].fk_object_id;\n        }\n\n        if(searchText[3].fk_skill_id > 0){\n          url += '&fk_skill_id='+searchText[3].fk_skill_id;\n          QUESTION_SEARCH_SKILL = searchText[3].fk_skill_id;\n        }\n\n      }\n      let data = {};\n      let QUESTION_SEARCH_KEYWORD = \"\";\n      if(searchText[4].keyword != ''){\n        const keyword = searchText[4].keyword.split(\" \").join(\"%20\");\n        url += '&keyword='+keyword;\n        QUESTION_SEARCH_KEYWORD = searchText[4].keyword;\n      }\n\n      let QUESTION_SEARCH_ID = \"\";\n      if(searchText[5].id != \"\"){\n        url += '&id='+searchText[5].id;\n        QUESTION_SEARCH_ID = searchText[5].id;\n      }\n\n      const response = await api.get(url);\n      if(response.status == 200) {\n        searchQuestions(QUESTION_SEARCH_TYPE, QUESTION_SEARCH_ID, QUESTION_SEARCH_COURSE,\n            QUESTION_SEARCH_SKILL, QUESTION_SEARCH_OBJECT, QUESTION_SEARCH_KEYWORD);\n        setTotal(response.data.total);\n        setQuestions(response.data.data);\n      } else {\n        setQuestions([]);\n      }\n    } catch (error) {\n      //toast.error( 'Erro de conexão.');\n    }\n  }\n\n  useEffect(() => {\n    if(localStorage.getItem('@Questione-search-type') != null){\n      searchText[0].value = localStorage.getItem('@Questione-search-type');\n    }\n    if(localStorage.getItem('@Questione-search-course') != 0){\n      searchText[1].fk_course_id = localStorage.getItem('@Questione-search-course');\n    }\n    if(localStorage.getItem('@Questione-search-object') != 0){\n      searchText[2].fk_object_id = localStorage.getItem('@Questione-search-object');\n    }\n    if(localStorage.getItem('@Questione-search-skill') != 0){\n      searchText[3].fk_skill_id = localStorage.getItem('@Questione-search-skill');\n    }\n    if(localStorage.getItem('@Questione-search-id') != ''){\n      searchText[5].id = localStorage.getItem('@Questione-search-id');\n    }\n    if(localStorage.getItem('@Questione-search-show-keyword') != ''){\n      searchText[4].keyword = localStorage.getItem('@Questione-search-show-keyword');\n    }\n    if(localStorage.getItem('@Questione-search-page') != 0){\n      handlePageChange(null,  Number(localStorage.getItem('@Questione-search-page')));\n\n    }\n\n    loadQuestions(page+1);\n  }, [refresh]);\n\n  const updateSearch = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onClickSearch = (e) => {\n    setPage(0);\n    loadQuestions(1);\n    searchQuestionsPage(0);\n  }\n\n  const onClickCleanSearch = (e) => {\n    searchText[0] = {\"value\" : \"S\"};\n    searchText[1] = {\"fk_course_id\" : 0};\n    searchText[2] = {\"fk_object_id\" : 0};\n    searchText[3] = {\"fk_skill_id\" : 0};\n    searchText[4] = {\"keyword\" : ''};\n    searchText[5] = {\"id\" : ''};\n    onClickSearch();\n  }\n\n  const handlePageChange = (event, newPage) => {\n    loadQuestions(newPage+1);\n    setPage(newPage);\n    searchQuestionsPage(newPage);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n      <div className={classes.root}>\n          <UsersToolbar\n              onChangeSearch={updateSearch.bind(this)}\n              searchText={searchText}\n              onClickSearch={onClickSearch}\n              onClickCleanSearch={onClickCleanSearch}/>\n        <div className={classes.content}>\n          <Card\n              className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                  <div>\n\n                  </div>\n                }\n                action={\n                  <TablePagination\n                      component=\"div\"\n                      count={total}\n                      onChangePage={handlePageChange}\n                      onChangeRowsPerPage={handleRowsPerPageChange}\n                      page={page}\n                      rowsPerPage={rowsPerPage}\n                      rowsPerPageOptions={[8]}/>\n\n                }/>\n              <CardContent>\n                {questions == null ?\n                    <LinearProgress color=\"secondary\"    />\n                    :\n                    <Grid\n                        container\n                        spacing={1}>\n                      <Grid\n                          item\n                          md={12}\n                          xs={12}>\n                        <Table>\n                          <TableBody>\n                            {questions.map(question => (\n                                <QuestionCard\n                                    question={question}\n                                    setRefresh={setRefresh}\n                                    refresh={refresh}/>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </Grid>\n                    </Grid> }\n              </CardContent>\n            <CardActions className={classes.actions}>\n              <TablePagination\n                  component=\"div\"\n                  count={total}\n                  onChangePage={handlePageChange}\n                  onChangeRowsPerPage={handleRowsPerPageChange}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[8]}/>\n            </CardActions>\n          </Card>\n        </div>\n      </div>\n  );\n};\n\nQuestionTable.propTypes = {\n  history: PropTypes.object\n};\n\nexport default QuestionTable;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Switch,\n    FormControlLabel,\n    Tooltip, Grid\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport api from \"../../../../../services/api\";\nimport Save from \"@material-ui/icons/Save\";\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    btRemove: {\n        color: '#f44336',\n        marginRight: 2,\n    },\n    btnRemoveWrapper: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '8px',\n    }\n});\n\n\n\nconst QuestionItens = props => {\n    const { className, history, idQuestion, imageUploadHandler, ...rest } = props;\n    const [inputItens, setInputItens] = useState([\n        { idItem: 0, description: '', correct: 0 },\n        { idItem: 0, description: '', correct: 0 }\n    ]);\n    const [btAddItem, setBtAddItem] = useState(false);\n    const [btRemoveItem, setBtRemoveItem] = useState(false);\n    const [itemDelete, setItensDelete] = useState([]);\n    const timer = React.useRef();\n\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        const length = inputItens.length;\n        if (length == 2) {\n            setBtAddItem(true);\n            setBtRemoveItem(false);\n        } else if (length == 5) {\n            setBtAddItem(false);\n            setBtRemoveItem(true);\n        } else {\n            setBtAddItem(true);\n            setBtRemoveItem(true);\n        }\n\n    }, [inputItens]);\n\n    async function loadItens() {\n        try {\n            const response = await api.get('questionitem?fk_question_id=' + idQuestion);\n            if (response.status === 200) {\n                const values = [];\n                if (response.data.length > 0) {\n                    response.data.forEach(function logArrayElements(element, index, array) {\n                        values.push({\n                            idItem: response.data[index].id,\n                            description: response.data[index].description,\n                            correct: response.data[index].correct_item\n                        });\n\n                    });\n                    setInputItens(values);\n                }\n\n            }\n        } catch (error) {\n\n        }\n    }\n\n    useEffect(() => {\n        loadItens()\n    }, []);\n\n    const handleAddItem = () => {\n        const values = [...inputItens];\n        const length = inputItens.length;\n        //o máximo são três objetos de conhecimento\n        if (length == 5) {\n            return;\n        }\n        values.push({ idItem: 0, description: '', correct: 0 });\n        setInputItens(values);\n\n    };\n\n    const handleRemoveItem = () => {\n        const values = [...inputItens];\n        const length = inputItens.length;\n        //se só tiver um elemento ele retorna pois não pode excluir\n        if (length == 2) {\n            return;\n        }\n        const element = values[length - 1];\n        if (element.idItem > 0) {\n            itemDelete.push({ idItem: element.idItem })\n        }\n        values.splice(length - 1, 1);\n        setInputItens(values);\n    };\n\n    const handleChangeCorrect = (event, indexCorrect) => {\n        const values = [...inputItens];\n        values[indexCorrect].correct = 1;\n        values.forEach(function logArrayElements(element, index, array) {\n            if (index == indexCorrect) {\n            } else {\n                values[index].correct = 0;\n            }\n        });\n        setInputItens(values);\n    }\n\n    async function deleteItem(element) {\n        try {\n            const response = await api.delete('questionitem/' + element.idItem);\n            if (response.status == 200 || response.status == 201) {\n\n            } else {\n\n            }\n        } catch (error) {\n\n        }\n    }\n\n    async function saveItem(elements) {\n        try {\n            //elements.forEach(async function logArrayElements(element, index, array) {\n            for (var i = 0; i < elements.length; i++) {\n                let element = elements[i];\n                let response = {};\n                const description = element.description;\n                const fk_question_id = idQuestion;\n                const correct_item = element.correct;\n\n                const data = {\n                    description, fk_question_id, correct_item\n                }\n\n                //return ;\n                const id = element.idItem;\n                let acao = \"\";\n\n                if (id === 0) {\n                    response = await api.post('questionitem', data);\n                    acao = \"cadastradas\";\n                } else {\n                    response = await api.put('questionitem/' + id, data);\n                    acao = \"atualizadas\";\n                }\n\n                if (response.status == 200 || response.status == 201) {\n                    toast.success('Alternativas da questão ' + acao + '.');\n                    inputItens[i].idItem = response.data.id;\n                } else {\n\n                    toast.error( 'Erro ao inserir alternativa.');\n                }\n            }\n\n        } catch (error) {\n\n        }\n    }\n\n    const onClickItens = () => {\n        let correct = false;\n        let text = true;\n        inputItens.forEach(function logArrayElements(element, index, array) {\n            if (inputItens[index].description === '') {\n                text = false;\n            }\n            if (inputItens[index].correct === 1) {\n                correct = true;\n            }\n        });\n        //verifica se faltou alguma descrição\n        if (text === false) {\n            toast.error( 'Informe a descrição de todas as alternativas');\n            return;\n        }\n        //verifica se marcou algum item como correto\n        if (correct === false) {\n            toast.error('Informe a alternativa correta');\n            return;\n        }\n        itemDelete.forEach(function logArrayElements(element, index, array) {\n            deleteItem(element);\n        });\n\n        saveItem(inputItens, 0);\n\n    }\n\n    const handleChangeItem = (e, indexEdit) => {\n        const values = [...inputItens];\n        values.forEach(function logArrayElements(element, index, array) {\n            if (index == indexEdit) {\n                values[index].description = e;\n            }\n        });\n        setInputItens(values);\n    }\n\n    return (\n        <div>\n            {inputItens.map((inputField, index) => (\n                <div style={{ padding: \"30px\" }}>\n                    <div className={classes.btnRemoveWrapper}>\n                        <b className=\"item1\">Alternativa de resposta {index + 1} *:</b>\n                        {(index > 1 && inputItens.length === index + 1) && (\n                            <Button style={{ marginLeft: \"10px\" }} className={clsx(classes.btRemove, className)} variant=\"outlined\" onClick={handleRemoveItem}>Remover</Button>\n                        )}\n                    </div>\n                    <Editor\n                        key={\"item\" + index}\n                        apiKey=\"ndvo85oqtt9mclsdb6g3jc5inqot9gxupxd0scnyypzakm18\"\n                        init={{\n                            height: 150,\n                            menubar: false,\n                            file_picker_types: 'image',\n                            images_upload_url: 'postAcceptor.php',\n                            images_upload_handler: imageUploadHandler,\n                            automatic_uploads: true,\n                            plugins: [\n                                'textpattern advlist autolink lists link image charmap print',\n                                ' preview hr anchor pagebreak code media save',\n                                'table contextmenu charmap'\n                            ],\n                            toolbar:\n                                'insertfile undo redo | fontselect fontsizeselect | bold italic underline superscript subscript | alignleft aligncenter alignright alignjustify | bullist numlist indent outdent | link image table print preview FMathEditor  charmap'\n                        }}\n                        name={\"item\" + index}\n                        value={inputItens[index].description}\n                        onEditorChange={(e) => handleChangeItem(e, index)} />\n                    <FormControlLabel\n                        control={\n                            <Tooltip title=\"Se marcado, indica que o item está correto\">\n                                <Switch\n                                    id={'sw' + index}\n                                    onChange={(event) => handleChangeCorrect(event, index)}\n                                    checked={inputItens[index].correct}\n                                    name={\"checked\" + index}\n                                    color=\"primary\"\n                                    label\n                                />\n                            </Tooltip>\n                        }\n                        label=\"É correto?\"\n                    />\n\n                </div>\n            ))}\n            <div style={{ margin: \"20px 0px\", paddingLeft: '30px' }}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\">\n                    <Tooltip title=\"A questão deverá ter no mínimo 02 e no máximo 05 alternativas, sendo apenas UMA correta.\">\n                        {btAddItem == true ?\n                            <Button color=\"primary\" variant=\"outlined\" onClick={handleAddItem}>Adicionar Alternativa</Button> :\n                            <Button color=\"primary\" variant=\"outlined\" disabled>Adicionar Alternativa</Button>\n                        }\n                    </Tooltip>\n                    {/* <Tooltip title=\"A questão deverá ter no mínimo 02 e no máximo 05 alternativas, sendo apenas UMA correta.\">\n                       {btRemoveItem == true ?\n                           <Button style={{marginLeft: \"10px\"}} className={clsx(classes.btRemove, className)} variant=\"outlined\"  onClick={handleRemoveItem}>Remover Alternativa</Button> :\n                           <Button style={{marginLeft: \"10px\"}} className={clsx(classes.btRemove, className)} variant=\"outlined\"  disabled>Remover Alternativa</Button>\n                       }\n                   </Tooltip> */}\n                </Grid>\n            </div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    endIcon={<Save />}\n                    onClick={onClickItens}>\n                    Salvar\n               </Button>\n            </Grid>\n        </div>\n\n    );\n}\n\nQuestionItens.propTypes = {\n    className: PropTypes.string,\n    idQuestion: PropTypes.number,\n    indexTab: PropTypes.number,\n};\n\nexport default withRouter(QuestionItens);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { uniqueId } from 'lodash';\nimport {\n    MenuItem,\n    TextField,\n    Button, Grid, Tooltip\n} from \"@material-ui/core\";\nimport api from \"../../../../../services/api\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport Save from \"@material-ui/icons/Save\";\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    btRemove: {\n        color: '#f44336',\n        marginRight: 2\n    }\n});\n\nconst QuestionSkill = props => {\n    const { className, idQuestion, history, ...rest } = props;\n    const [courses, setCourses] = useState([{ 'id': '0', 'description': 'Todas as áreas' }]);\n    const [objects, setObjects] = useState([{ 'id': '0', 'description': 'Todos os objetos' }]);\n    const [skills, setSkills] = useState([{ 'id': '0', 'description': 'Todas as competências' }]);\n    const [courseSelect, setCourseSelect] = useState(0);\n    const [objectSelect, setObjectSelect] = useState([]);\n    const [skillSelect, setSkillSelect] = useState([]);\n    const [inputObjects, setInputObjects] = useState([\n        { idItem: 0, objectSelected: 0 }\n    ]);\n    const [btAddObject, setBtAddObject] = useState(false);\n    const [btRemoveObject, setBtRemoveObject] = useState(false);\n    const [question, setQuestion] = useState(false);\n    const [objectsDelete, setObjectsDelete] = useState([]);\n    const [objectLoading, setObjectLoading] = useState(false);\n\n    const classes = useStyles();\n\n    async function loadQuestion() {\n        try {\n            const response = await api.get('question/show/' + idQuestion);\n            if (response.status === 200) {\n                setQuestion(response.data[0]);\n            }\n        } catch (error) {\n        }\n    }\n\n    async function loadCourses() {\n        try {\n            const response = await api.get('all/courses-user');\n            setCourses([{ 'id': '0', 'description': 'Todos as áreas' }, ...response.data]);\n\n            if (question.fk_course_id != null) {\n                setCourseSelect(question.fk_course_id);\n            } else {\n                setCourseSelect(0);\n            }\n\n        } catch (error) {\n\n        }\n    }\n\n    async function loadObjectsSelectQuestion() {\n        try {\n            setObjectLoading(true);\n\n            const response = await api.get('question/object-question/' + idQuestion);\n\n            if (response.status === 200) {\n                const values = [];\n                if (response.data.length > 0) {\n                    response.data.forEach(function logArrayElements(element, index, array) {\n                        if (element.object.fk_course_id == courseSelect) {\n                            values.push({\n                                idItem: response.data[index].id,\n                                objectSelected: response.data[index].fk_knowledge_object,\n                            });\n                        } else {\n                            deleteObject(element.id);\n                        }\n\n                    });\n\n                    if (values[0]) {\n                        setInputObjects(values);\n                    } else {\n                        setInputObjects([{ idItem: 0, objectSelected: 0 }]);\n                    }\n                }\n            }\n\n            setObjectLoading(false);\n        } catch (error) {\n            setObjectLoading(false);\n        }\n    }\n\n    async function loadObjects() {\n        try {\n            setObjectLoading(true);\n\n            const response = await api.get('all/objects?fk_course_id=' + courseSelect);\n            setObjects([{ 'id': '0', 'description': 'Todos os objetos' }, ...response.data]);\n            //setObjectSelect(0);\n            loadObjectsSelectQuestion();\n            setObjectLoading(false);\n        } catch (error) {\n            setObjectLoading(false);\n        }\n    }\n\n    async function loadSkills() {\n        try {\n            const response = await api.get('all/skills?fk_course_id=' + courseSelect);\n            if (response.status == 200) {\n                setSkills([{ 'id': '0', 'description': 'Todas as competências' }, ...response.data]);\n                setSkillSelect(0);\n                if (question.fk_skill_id != null) {\n                    response.data.forEach(function logArrayElements(element, index, array) {\n                        if (element.id == question.fk_skill_id) {\n                            setSkillSelect(question.fk_skill_id);\n                        }\n                    });\n                }\n            }\n\n\n        } catch (error) {\n\n        }\n    }\n\n    useEffect(() => {\n        const length = inputObjects.length;\n        if (length == 0) {\n            setBtAddObject(true);\n            setBtRemoveObject(false);\n        } else if (length == 3) {\n            setBtAddObject(false);\n            setBtRemoveObject(true);\n        } else {\n            setBtAddObject(true);\n            setBtRemoveObject(true);\n        }\n\n    }, [inputObjects]);\n\n    useEffect(() => {\n        if (idQuestion) {\n            loadQuestion();\n        } else {\n            setObjects([{ 'id': '0', 'description': 'Todos os objetos' }]);\n            setObjectSelect(0);\n            setSkills([{ 'id': '0', 'description': 'Todas as competências' }]);\n            setSkillSelect(0);\n        }\n    }, []);\n\n    useEffect(() => {\n        loadCourses();\n        if (question.fk_course_id != null) {\n            setCourseSelect(question.fk_course_id);\n        } else {\n            setCourseSelect(0);\n        }\n\n    }, [question]);\n\n    useEffect(() => {\n        loadSkills();\n        loadObjects();\n    }, [courseSelect]);\n\n    useEffect(() => {\n\n    }, [inputObjects]);\n\n    /*const onChangeObject = (e) =>{\n        setObjectSelect(e.target.value);\n    }*/\n\n    const onChangeSkill = (e) => {\n        setSkillSelect(e.target.value);\n    }\n\n    const handleAddObjects = () => {\n        const values = [...inputObjects];\n        const length = inputObjects.length;\n        //o máximo são três objetos de conhecimento\n        if (length == 3) {\n            return;\n        }\n\n        values.push({ idItem: `knowledge-object-${uniqueId()}${Date.now()}`, objectSelected: 0 });\n        setInputObjects(values);\n    };\n\n    const handleRemoveObjects = (idItem) => {\n        const length = inputObjects.length;\n        //se só tiver um elemento ele retorna pois não pode excluir\n        if (length == 0) {\n            return;\n        }\n        setObjectsDelete((lastObjectsDelete) => {\n            lastObjectsDelete.push({ idItem });\n            return lastObjectsDelete;\n        });\n        setInputObjects((lastObjects) => lastObjects.filter((object) => object.idItem !== idItem));\n\n    };\n\n    const handleInputChangeObject = (event, index) => {\n        // const alreadyAdded = inputObjects.some((object) => object.objectSelected === event.target.value);\n        // if (alreadyAdded) {\n        //     return;\n        // }\n\n        const values = [...inputObjects];\n        values[index].objectSelected = event.target.value;\n\n        setInputObjects(values);\n    };\n\n    async function saveSkill() {\n        try {\n            const fk_course_id = courseSelect;\n            let fk_skill_id = skillSelect;\n            if (skillSelect == 0) {\n                fk_skill_id = null;\n            }\n            const data = {\n                fk_course_id, fk_skill_id\n            }\n            const response = await api.put('question/update-course-skill/' + idQuestion, data);\n            if (response.status === 200) {\n                toast.success('Questão atualizada.');\n            }\n        } catch (error) {\n\n        }\n    }\n\n    async function deleteObject(idObject) {\n        try {\n            setObjectLoading(true);\n            const response = await api.delete('question/deleteobject/' + idObject);\n            if (response.status === 200 || response.status === 201) {\n                // console.log('Sucesso');\n            }\n            setObjectLoading(false);\n        } catch (error) {\n            setObjectLoading(false);\n        }\n    }\n\n    async function saveObject(element, index) {\n        try {\n            setObjectLoading(true);\n\n            const fk_question_id = question.id;\n            const fk_knowledge_object = element.objectSelected;\n            const data = {\n                fk_question_id, fk_knowledge_object\n            }\n\n            let response = {};\n            if (element.idItem !== 0 && `${element.idItem}`.indexOf('knowledge-object-') === -1) {\n                response = await api.put('question/update-object/' + element.idItem, data);\n            } else {\n                response = await api.post('question/addobject', data);\n            }\n\n            if (response.status === 200) {\n                inputObjects[index].idItem = response.data[0].id;\n                setInputObjects(inputObjects);\n                toast.success( 'Objetos de conhecimento atualizados.');\n            }\n\n            setObjectLoading(false);\n        } catch (error) {\n            setObjectLoading(false);\n        }\n    }\n\n    const onClickSkill = () => {\n        if (courseSelect == 0) {\n            toast.error('Informe a área.');\n            return;\n        } else {\n            saveSkill();\n            objectsDelete.forEach(function logArrayElements(element, index, array) {\n                deleteObject(element.idItem);\n            });\n\n            if (inputObjects.length > 0) {\n                const reduced = [];\n\n                inputObjects.forEach((item) => {\n                    var duplicated  = reduced.findIndex(redItem => {\n                        return item.objectSelected === redItem.objectSelected;\n                    }) > -1;\n\n                    if(!duplicated) {\n                        reduced.push(item);\n                    }\n                });\n\n                reduced.forEach(function logArrayElements(element, index, array) {\n                    if (element.objectSelected != 0) {\n                        saveObject(element, index);\n                    } else {\n                        deleteObject(element);\n                    }\n                });\n            }\n        }\n    }\n\n    const handleChangeCourse = (event) => {\n        setCourseSelect(event.target.value);\n    }\n\n    return (\n        <div>\n            <div style={{ marginTop: \"10px\" }}>\n                <TextField\n                    key=\"area\"\n                    select\n                    label=\"Selecione a área\"\n                    value={courseSelect}\n                    onChange={handleChangeCourse}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style={{ width: \"100%\" }}>\n                    {courses.map((option) => (\n                        <MenuItem key={option.id} value={option.id}>\n                            {option.description}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </div>\n\n            <div style={{ marginTop: \"10px\" }}>\n                <TextField\n                    id=\"filled-select-currency\"\n                    select\n                    label=\"Selecione a competência\"\n                    value={skillSelect}\n                    onChange={onChangeSkill}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style={{ width: \"100%\" }}>\n                    {skills.map((option) => (\n                        <MenuItem key={option.id} value={option.id}>\n                            {option.description}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </div>\n            {inputObjects.map((inputField, index) => (\n                <div style={{ marginTop: \"10px\", display: 'flex', alignItems: 'center' }}>\n                    <TextField\n                        id={\"obj\" + index}\n                        select\n                        label=\"Selecione o objeto de conhecimento\"\n                        value={inputObjects[index].objectSelected}\n                        onChange={(event) => handleInputChangeObject(event, index)}\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        style={{ width: \"100%\" }}\n                        name={'obj' + index}>\n                        {objects.map((option) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.description}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <Button style={{ marginLeft: \"10px\", marginTop: '2px', maxHeight: '38px' }} className={clsx(classes.btRemove, className)} variant=\"outlined\" onClick={() => handleRemoveObjects(inputField.idItem)}>Remover</Button>\n                </div>\n            ))}\n            <div style={{ margin: \"20px 0px\" }}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\">\n                    <Tooltip title=\"A questão deverá ter no máximo 03 objetos de conhecimento.\">\n                        {btAddObject == true ?\n                            <Button color=\"primary\" variant=\"outlined\" onClick={handleAddObjects}>Adicionar Objeto</Button> :\n                            <Button color=\"primary\" variant=\"outlined\" disabled>Adicionar Objeto</Button>\n                        }\n                    </Tooltip>\n                    {/* {btRemoveObject == true ?\n                       <Button style={{marginLeft: \"10px\"}} className={clsx(classes.btRemove, className)} variant=\"outlined\" onClick={() => handleRemoveObjects()}>Remover Objeto</Button> :\n                       <Button style={{marginLeft: \"10px\"}} className={clsx(classes.btRemove, className)} variant=\"outlined\" disabled>Remover Objeto</Button>\n                   } */}\n                </Grid>\n            </div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={onClickSkill}\n                    endIcon={<Save />}\n                    style={{ marginTop: '20px' }}\n                    disabled={objectLoading}\n                >\n                    Salvar\n               </Button>\n            </Grid>\n        </div>\n\n    );\n}\n\nQuestionSkill.propTypes = {\n    className: PropTypes.string,\n    idQuestion: PropTypes.number,\n};\n\nexport default withRouter(QuestionSkill);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    TextField,\n    Grid, Tooltip, Chip, IconButton, DialogTitle, Dialog, DialogContent,\n    DialogContentText, Button, DialogActions, Typography\n} from \"@material-ui/core\";\nimport api from \"../../../../../services/api\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\nimport clsx from \"clsx\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    btRemove: {\n        color: '#f44336',\n        marginRight: 2\n    },\n    chip: {\n        backgroundColor: '#448aff',\n        color: '#ffebee',\n    },\n    mb1: {\n        marginBottom: '8px',\n    },\n    textButton: {\n        textTransform: 'initial',\n        marginTop: '2px',\n    },\n    textButtonLarge: {\n        width: '100%',\n        textTransform: 'initial',\n        marginTop: '16px',\n        marginBottom: '16px',\n    }\n});\n\nconst QuestionKeywords = props => {\n    const { className, idQuestion, history, ...rest } = props;\n    const [keywordsAll, setKeywordsAll] = useState([]);\n    const [keywordsQuestion, setKeywordsQuestion] = useState([]);\n    const [open, setOpen] = React.useState(false);\n    const [keyWordNew, setKeyWordNew] = React.useState('');\n\n    const classes = useStyles();\n\n    async function loadKeywordsAll() {\n        try {\n            const response = await api.get('all/keywords');\n            if (response.status === 200) {\n                setKeywordsAll(response.data);\n            }\n        } catch (error) {\n        }\n    }\n\n    async function loadKeywordsQuestion() {\n        try {\n            const response = await api.get('question/keyword/' + idQuestion);\n            if (response.status === 200) {\n                setKeywordsQuestion(response.data);\n            }\n        } catch (error) {\n        }\n    }\n\n    useEffect(() => {\n        loadKeywordsAll();\n        loadKeywordsQuestion();\n    }, []);\n\n    async function addKeyWord(value) {\n        try {\n            const fk_question_id = idQuestion;\n            const keyword = value;\n            const data = {\n                fk_question_id, keyword\n            }\n\n            const response = await api.post('question/keyword', data);\n\n            if (response.status === 202) {\n                if (response.data.message) {\n                    toast.error( response.data.message);\n                }\n            } else if (response.status === 200) {\n                loadKeywordsQuestion();\n                loadKeywordsAll();\n                toast.success('Palavra-chave ' + value + ', cadastrada.');\n            }\n        } catch (error) {\n\n        }\n    }\n\n    async function deleteKeyword(value) {\n        try {\n            let url = 'question/keyword/' + value + '?fk_question_id=' + idQuestion;\n\n            const response = await api.delete(url);\n            if (response.status === 202) {\n                if (response.data.message) {\n                    toast.error( response.data.message);\n                }\n            } else if (response.status === 200) {\n                loadKeywordsQuestion();\n                loadKeywordsAll();\n                toast.success('Palavra-chave excluida.');\n            }\n        } catch (error) {\n\n        }\n    }\n\n    const selectKeyWord = (event, newValue) => {\n        if (newValue != null) {\n            addKeyWord(newValue.keyword);\n        }\n    }\n\n    /*const onClickDeleteKeyword = (id) => {\n        deleteKeyword(id);\n    }*/\n\n    const handleClickOpen = () => {\n        setOpen(true);\n        setKeyWordNew('');\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setKeyWordNew('')\n    };\n\n    const handleSaveKeyword = () => {\n        setOpen(false);\n        addKeyWord(keyWordNew);\n    };\n\n    const handleChangeKeyword = (event) => {\n        setKeyWordNew(event.target.value);\n    };\n\n    return (\n        <div>\n\n            <div style={{ marginTop: \"10px\" }}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-star\"\n                    alignItems=\"center\"\n                >\n                    <Tooltip placement=\"top\" title=\"Selecione a palavra-chave que deseja adicionar. Caso NÃO encontre nesta listagem, clique no ícone ao lado para adicionar.\">\n                        <div style={{ display: 'flex', alignItems: 'flex-start', marginLeft: '16px', flexDirection: 'column' }}>\n                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\" className={classes.mb1}>Pesquise por palavras-chave</Typography>\n                            <Autocomplete\n                                autoSelect={true}\n                                style={{ marginTop: '100px' }}\n                                id=\"keywords\"\n                                options={keywordsAll}\n                                getOptionLabel={(option) => option.keyword}\n                                onChange={(event, newValue) => selectKeyWord(event, newValue)}\n                                style={{ width: 300 }}\n                                renderInput={(params) =>\n                                    <TextField {...params} label=\"Palavra-chave\" variant=\"outlined\" />}\n                            />\n                        </div>\n                    </Tooltip>\n                    <Tooltip title=\"Adicionar uma palavra chave.\" aria-label=\"add\" style={{ marginLeft: '8px' }}>\n                        <div style={{ display: 'flex', alignItems: 'center', marginLeft: '16px', marginTop: '30px' }}>\n                            <Button aria-label=\"delete\"\n                                onClick={handleClickOpen}>\n                                <AddIcon />\n                                <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\" className={classes.textButton}>\n                                    Adicionar nova palavra chave\n                                </Typography>\n                            </Button>\n                        </div>\n                    </Tooltip>\n                </Grid>\n            </div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-star\"\n                alignItems=\"flex-start\" style={{ marginTop: '20px', paddingLeft: '16px' }}>\n                {keywordsQuestion.length > 0 && (\n                    <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\" className={classes.textButtonLarge}>\n                        Palavras-chave cadastradas:\n                    </Typography>\n                )}\n                {keywordsQuestion.map((row) => (\n                    <div style={{ marginRight: '7px', marginTop: '7px' }}>\n                        <Chip\n                            label={row.keyword}\n                            clickable\n                            color=\"secondary\"\n                            onDelete={() => deleteKeyword(row.id)}\n                            deleteIcon={<HighlightOff />}\n                            className={clsx(classes.chip, className)} />\n                    </div>\n                ))}\n            </Grid>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Palavra-chave</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Informe a a palavra chave que deseja adicionar a sua questão.\n                   </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        value={keyWordNew}\n                        onChange={handleChangeKeyword}\n                        id=\"name\"\n                        label=\"Palavra-chave\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancelar\n                   </Button>\n                    <Button onClick={handleSaveKeyword} color=\"primary\">\n                        Salvar\n                   </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n\n    );\n}\n\nQuestionKeywords.propTypes = {\n    className: PropTypes.string,\n    idQuestion: PropTypes.number,\n};\n\nexport default withRouter(QuestionKeywords);\n","import React, { useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {\n    Box, Grid, IconButton, TextField, Typography,\n    Button, Tooltip, Select, MenuItem\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\";\nimport QuestionItens from \"./QuestionItens\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Save from \"@material-ui/icons/Save\";\nimport api from \"../../../../services/api\";\nimport QuestionSkill from \"./QuestionSkill\";\nimport QuestionKeywords from \"./QuestionKeywords\";\nimport useTypeOfEvaluations from '../../../../hooks/useTypeOfEvaluations';\nimport { EXTERNAL_QUESTION } from '../../../../services/auth';\nimport { toast } from 'react-toastify';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  selectGroup: {\n    width: '100%',\n    padding: '30px',\n    display: 'flex',\n  }\n});\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}>\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `nav-tab-${index}`,\n        'aria-controls': `nav-tabpanel-${index}`,\n    };\n}\n\nfunction LinkTab(props) {\n    return (\n        <Tab\n            component=\"a\"\n            onClick={(event) => {\n                event.preventDefault();\n            }}\n            {...props}\n        />\n    );\n}\n\nconst QuestionDetails = props => {\n    const { className, history, ...rest } = props;\n    const { idQuestion } = props.match.params;\n\n    // lista de referencias (tipos de avaliação)\n    const typeOfEvaluationList = useTypeOfEvaluations();\n\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(0);\n    //visibilidade das abas\n    const [tabItens, setTabItens] = React.useState(false);\n    const [tabSkill, setTabSkill] = React.useState(false);\n\n    // controlador de abertua do select\n    const [openReference, setReferenceOpen] = React.useState(false);\n    const [openYear, setYearOpen] = React.useState(false);\n\n    //campos\n    const [baseText, setBaseText] = React.useState('');\n    const [stem, setStem] = React.useState('');\n    const [reference, setReference] = React.useState('select'); // type of evaluation\n    const [year, setYear] = React.useState('year');\n    const [yearList, setYearList] = React.useState([]);\n    const [validated, setValidated] = React.useState(0);\n\n    //utilizado pra quando for nova questão\n    const [idQuestionNew, setIdQuestionNew] = React.useState(0);\n\n    const timer = React.useRef();\n\n  const handleChangeTab = (event, newValue) => {\n      timer.current = setTimeout(() => {\n          setValue(newValue);\n      }, 400);\n\n  };\n\n    const handleBack = () => {\n        history.goBack();\n    };\n\n    async function imageUploadHandler (blobInfo, success, failure, progress) {\n        try {\n            let formData = new FormData();\n            formData.append('image', blobInfo.blob(), blobInfo.filename());\n\n            if (blobInfo.blob().size > 150000) {\n                failure('A imagem deve ter no máximo 150kb');\n                return;\n            }\n\n            const response = await api.post('question/upload-image', formData);\n\n            if(response.status === 200){\n                success(response.data.url_image);\n            } else if (response.status === 202) {\n                failure('Ocorreu um erro ao realizar o upload');\n            }\n        } catch (error) {\n            failure('Ocorreu um erro ao realizar o upload');\n        }\n    };\n\n    async function saveQuestion(){\n        try {\n            const base_text = baseText;\n            const data = {\n                base_text,\n                stem,\n                year: year === 'year' ? yearList[0] : year,\n            }\n\n            if (reference !== 'select') {\n                data.fk_type_of_evaluation_id = reference;\n            }\n\n            let response = {};\n            let acao = \"\";\n            if(!idQuestion){\n                response= await api.post('question', data);\n                acao = \"cadastrada\";\n            } else {\n                response= await api.put('question/'+idQuestion, data);\n                acao = \"atualizada\";\n            }\n\n            if(response.status === 200){\n                toast.success( 'Questão '+acao+'.');\n                setIdQuestionNew(response.data[0].id);\n            } else if (response.status === 202) {\n                if(response.data.message){\n                    toast.error( response.data.message);\n                } else if(response.data.errors[0].description){\n                    toast.error(response.data.errors[0].description);\n                }\n            }\n        } catch (error) {\n        }\n    }\n\n    const onClickTab1 = () => {\n        if(baseText === ''){\n            toast.error('Informe o texto base.');\n            return ;\n        } else if(stem === ''){\n            toast.error('Informe o enunciado.');\n            return ;\n        }\n        saveQuestion();\n        if(idQuestion){\n\n        } else {\n            timer.current = setTimeout(() => {\n                history.push('/questions');\n            }, 500);\n        }\n\n    }\n\n    // const loadEvaluationTypes = useCallback(async () => {\n    //     try {\n\n    //     } catch (error) {\n\n    //     }\n    // });\n\n    async function findAQuestion(id){\n        try {\n            const response = await api.get('question/show/'+id);\n            if (response.status === 202) {\n                if(response.data.message){\n                    toast.error( response.data.message);\n                }\n            } else {\n                setValidated(response.data[0].validated)\n                setReference(response.data[0].fk_type_of_evaluation_id);\n                setBaseText(response.data[0].base_text);\n                setYear(response.data[0].year);\n                setStem(response.data[0].stem);\n            }\n        } catch (error) {\n\n        }\n    }\n\n    const getYearList = useCallback(() => {\n        const currentYear = parseInt(new Date().getFullYear());\n        const yearList = [];\n\n        for (let i = currentYear; i > currentYear - 52; i -= 1) {\n            yearList.push(i);\n        }\n\n        setYearList(yearList);\n    });\n\n    useEffect(() => {\n        if(idQuestion){\n            findAQuestion(idQuestion);\n            setTabItens(true);\n            setTabSkill(true);\n        }\n\n        getYearList();\n    }, []);\n\n    useEffect(() => {\n        if(validated == 1){\n            setValue(2);\n        }\n    }, [validated]);\n\n    useEffect(() => {\n\n    }, [tabItens, value, idQuestionNew]);\n\n    const handleChangeReference = (event) =>{\n        setReference(event.target.value);\n    }\n\n    const handleChangeBaseText = (event) => {\n        setBaseText(event);\n    };\n\n    const handleChangeStem = (event) => {\n        setStem(event);\n    };\n\n    // const handleChangeReference = (event) => {\n    //     setReference(event.target.value);\n    // };\n\n    const handleReferenceClose = () => {\n        setReferenceOpen(false);\n    };\n\n    const handleReferenceOpen = () => {\n        setReferenceOpen(true);\n    };\n\n    const handleChangeYear = (event) => {\n        setYear(event.target.value);\n    };\n\n    const handleYearClose = () => {\n        setYearOpen(false);\n    };\n\n    const handleYearOpen = () => {\n        setYearOpen(true);\n    };\n\n  return (\n      <Paper className={classes.root}>\n          <div className={classes.contentHeader}>\n              <IconButton onClick={handleBack}>\n                  <ArrowBackIcon />\n              </IconButton>\n          </div>\n          <Tabs\n              variant=\"fullWidth\"\n              value={value}\n              onChange={handleChangeTab}\n              aria-label=\"nav tabs example\">\n              { validated != 1 ?\n              <LinkTab label=\"Texto base & Enunciado\" href=\"/drafts\" {...a11yProps(0)} />\n                : <LinkTab label=\"Texto base & Enunciado\" disabled href=\"/drafts\" {...a11yProps(0)} />\n              }\n              { validated == 1 ?\n                  <LinkTab label=\"Alternativas\" disabled href=\"#\"  {...a11yProps(1)} />\n                  : tabItens == true ?\n                      <LinkTab label=\"Alternativas\" href=\"#\"  {...a11yProps(1)} />\n                           : null  }\n              { tabSkill==true ?\n              <LinkTab label=\"Área de Conhecimento\" href=\"#\" {...a11yProps(2)} />\n                    :  null }\n              { tabSkill==true ?\n                  <LinkTab label=\"Palavras-chave\" href=\"#\" {...a11yProps(3)} />\n                  :  null }\n          </Tabs>\n          {/*texto base e enunciado*/}\n          <TabPanel value={value} index={0}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\">\n                    {\n                        localStorage.getItem(EXTERNAL_QUESTION) == 1 && (\n                        <>\n                            <div className={classes.selectGroup}>\n                                <b className=\"item1\" style={{ marginRight: '32px' }}>Tipo de avaliação</b>\n                                <Tooltip title=\"Caso a questão tenha sido construída baseada em alguma já aplicada, você pode selecionar no campo tipo de avaliação.\">\n                                    <Select\n                                        labelId=\"type-of-evaluation-label\"\n                                        id=\"type-of-evaluation\"\n                                        open={openReference}\n                                        onClose={handleReferenceClose}\n                                        onOpen={handleReferenceOpen}\n                                        value={reference}\n                                        onChange={handleChangeReference}\n                                        className={classes.root}\n                                    >\n                                        <MenuItem value=\"select\">Selecione</MenuItem>\n                                        {typeOfEvaluationList.map((type) => (\n                                            <MenuItem value={type.id}>{type.description}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </Tooltip>\n                            </div>\n                            <div className={classes.selectGroup}>\n                                <b className=\"item1\" style={{ marginRight: '120px' }}>Ano</b>\n                                <Tooltip title=\"Caso a questão tenha sido construída baseada em alguma já aplicada, você pode selecionar o ano de tal questão.\">\n                                        <Select\n                                            labelId=\"year-label\"\n                                            id=\"year\"\n                                            open={openYear}\n                                            onClose={handleYearClose}\n                                            onOpen={handleYearOpen}\n                                            value={year}\n                                            onChange={handleChangeYear}\n                                            className={classes.root}\n                                        >\n                                            <MenuItem value=\"year\">Selecione o ano</MenuItem>\n\n                                            {yearList.map((year) => (\n                                                <MenuItem value={year}>{year}</MenuItem>\n                                            ))}\n                                        </Select>\n                                </Tooltip>\n                            </div>\n                        </>\n                    )}\n              </Grid>\n              <div style={{padding: \"30px\"}}>\n                  <b className=\"item1\">Texto base *</b>\n                      <Editor\n                          apiKey=\"viwc1vmqpf6f7ozb7m90ayace892e32hsg99bhpo06p6bz3d\"\n                          init={{\n                              height: 200,\n                              menubar: false,\n                              file_picker_types: 'image',\n                              images_upload_url: 'postAcceptor.php',\n                              images_upload_handler: imageUploadHandler,\n                              automatic_uploads: true,\n                              plugins: [\n                                  'textpattern advlist autolink lists link image charmap print',\n                                  ' preview hr anchor pagebreak code media save',\n                                  'table contextmenu charmap'\n                              ],\n                              toolbar:\n                                  'insertfile undo redo | fontselect fontsizeselect | bold italic underline superscript subscript | alignleft aligncenter alignright alignjustify | bullist numlist indent outdent | link image table print preview  charmap'\n                          }}\n                          value={baseText}imageUploadHandler\n                          onEditorChange={handleChangeBaseText}\n                          name=\"base_text\"\n                          key=\"base_text\"/>\n              </div>\n              <div style={{padding: \"30px\"}}>\n                  <b className=\"item1\">Enunciado *</b>\n                  <Editor\n                      apiKey=\"ndvo85oqtt9mclsdb6g3jc5inqot9gxupxd0scnyypzakm18\"\n                      init={{\n                          height: 200,\n                          menubar: false,\n                          file_picker_types: 'image',\n                          images_upload_url: 'postAcceptor.php',\n                          images_upload_handler: imageUploadHandler,\n                          automatic_uploads: true,\n                          plugins: [\n                              'textpattern advlist autolink lists link image charmap print',\n                              ' preview hr anchor pagebreak code media save',\n                              'table contextmenu charmap'\n                          ],\n                          toolbar:\n                              'insertfile undo redo | fontselect fontsizeselect | bold italic underline superscript subscript | alignleft aligncenter alignright alignjustify | bullist numlist indent outdent | link image table print preview  charmap'\n                      }}\n                      value={stem}\n                      onEditorChange={handleChangeStem}\n                      name=\"stem\"\n                        key=\"stem\"/>\n              </div>\n              <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\">\n                      <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.button}\n                          endIcon={<Save/>}\n                            onClick={onClickTab1}>\n                          Salvar\n                      </Button>\n              </Grid>\n\n          </TabPanel>\n          {/* INTES */}\n          <TabPanel value={value} index={1}>\n                <QuestionItens idQuestion={idQuestion} imageUploadHandler={imageUploadHandler} />\n\n          </TabPanel>\n          {/* CURSO E COMPETÊNCIA*/}\n          <TabPanel value={value} index={2}>\n            <QuestionSkill idQuestion={idQuestion}/>\n\n          </TabPanel>\n          {/* PALAVRAS-CHAVE*/}\n          <TabPanel value={value} index={3}>\n                <QuestionKeywords idQuestion={idQuestion}/>\n\n          </TabPanel>\n\n      </Paper>\n  );\n}\n\nQuestionDetails.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default withRouter(QuestionDetails);\n","import React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\nimport { RouteWithLayout } from './../components';\nimport { Main as MainLayout, Minimal as MinimalLayout } from './../layouts';\nimport {\n    SignUp,\n    SignIn,\n    UserTable,\n    ProfileTable,\n    ProfileDetails,\n    RedefinePassword,\n    ResetPassword,\n    CourseTable,\n    SkillTable,\n    ObjectTable,\n    PageNotFound,\n    RequestUserTable,\n    AccountDetails,\n    Dashboard,\n    EvaluationTable,\n    EvaluationArchiveTable,\n    EvaluationDetails,\n    EvaluationQuestions,\n    SkillDetails,\n    ObjectDetails,\n    RequestUserDetails,\n    CourseDetails,\n    UserRequestCourseTable,\n    EvaluationApplicationTable,\n    DoEvaluation,\n    EvaluationApplicationDetails,\n    EvaluationApplicationResults,\n    StartEvaluation, EvaluationsResultStudent, EvaluationsResultStudentDetails,\n    UserRequestCourseDetails,\n    Unauthorized,\n    TypeOfEvaluationTable,\n    TypeOfEvaluationDetails,\n    EvaluationPracticeTable,\n    EvaluationPracticeArchiveTable,\n    EvaluationPracticeDetails,\n    GenerateEvaluationQuestions,\n    GenerateEvaluation,\n    EvaluationPracticeApplicationTable,\n    EvaluationPracticeApplicationDetails,\n    EvaluationPracticeApplicationResults,\n} from '../pages';\nimport QuestionTable from \"../pages/Professor/Question/QuestionTable\";\nimport QuestionDetails from \"../pages/Professor/Question/QuestionDetails\";\n\nconst Routes = () => (\n    <BrowserRouter>\n        <Switch>\n            <Redirect\n                exact\n                from=\"/\"\n                to=\"/home\"\n            />\n            {/*ROTAS COMUNS*/}\n            <RouteWithLayout\n                component={Dashboard}\n                exact\n                needToBeLogged={true}\n                typeUser={-1}\n                layout={MainLayout}\n                path=\"/home\" />\n            <RouteWithLayout\n                component={SignUp}\n                exact\n                layout={MinimalLayout}\n                needToBeLogged={false}\n                path=\"/sign-up\" />\n            <RouteWithLayout\n                component={SignIn}\n                exact\n                layout={MinimalLayout}\n                needToBeLogged={false}\n                path=\"/sign-in\" />\n            <RouteWithLayout\n                component={RedefinePassword}\n                exact\n                layout={MinimalLayout}\n                needToBeLogged={false}\n                path=\"/redefine-password\" />\n            <RouteWithLayout\n                component={ResetPassword}\n                exact\n                layout={MinimalLayout}\n                needToBeLogged={false}\n                path=\"/reset-password/:token\" />\n            <RouteWithLayout\n                component={AccountDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/account\" />\n            <RouteWithLayout\n                component={UserRequestCourseTable}\n                exact\n                needToBeLogged={true}\n                typeUser={-1}\n                layout={MainLayout}\n                path=\"/requests\" />\n            <RouteWithLayout\n                component={UserRequestCourseDetails}\n                exact\n                needToBeLogged={true}\n                typeUser={-1}\n                layout={MainLayout}\n                path=\"/new-request\" />\n            {/* ROTAS DO ALUNO */}\n            <RouteWithLayout\n                component={EvaluationPracticeTable}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={-1}\n                path=\"/evaluation-practice\" />\n            <RouteWithLayout\n                component={EvaluationPracticeArchiveTable}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={-1}\n                path=\"/evaluation-practice-archive\" />\n            <RouteWithLayout\n                component={EvaluationPracticeDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/evaluation-practice-details/:codigoEvaluation?\" />\n            <RouteWithLayout\n                component={GenerateEvaluation}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/generate-evaluation/:codigoEvaluation?\" />\n            <RouteWithLayout\n                component={GenerateEvaluationQuestions}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/generate-evaluation/:codigoEvaluation/questions\" />\n            \n            <RouteWithLayout\n                component={EvaluationPracticeApplicationTable}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/evaluation-practice/applications-evaluation/:idApplication\" />\n            <RouteWithLayout\n                component={EvaluationPracticeApplicationDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/evaluation-practice/:codigoEvaluation/applications-evaluation/details/:idApplication\" />\n            <RouteWithLayout\n                component={EvaluationPracticeApplicationResults}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/evaluation-practice/applications-evaluation/results/:idApplication\" />\n\n            <RouteWithLayout\n                component={StartEvaluation}\n                exact\n                layout={MinimalLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/student/start-evaluation\" />\n            <RouteWithLayout\n                component={EvaluationsResultStudent}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/student/result-evaluations\" />\n            <RouteWithLayout\n                component={EvaluationsResultStudentDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/student/result-evaluations/details/:idHead\" />\n            <RouteWithLayout\n                component={DoEvaluation}\n                exact\n                layout={MinimalLayout}\n                needToBeLogged={true}\n                typeUser={-1}\n                path=\"/code/:codeAplication\" />s\n        {/*ROTAS DO ADMINISTRADOR*/}\n            <RouteWithLayout\n                component={CourseTable}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={1}\n                path=\"/courses\" />\n            <RouteWithLayout\n                component={CourseDetails}\n                exact\n                layout={MainLayout}\n                typeUser={1}\n                needToBeLogged={true}\n                path=\"/course-details/:codigoCourse?\" />\n            <RouteWithLayout\n                component={TypeOfEvaluationTable}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={1}\n                path=\"/type-of-evaluation\" />\n            <RouteWithLayout\n                component={TypeOfEvaluationDetails}\n                exact\n                layout={MainLayout}\n                typeUser={1}\n                needToBeLogged={true}\n                path=\"/type-of-evaluation-details/:typeOfEvaluationCode?\" />\n            <RouteWithLayout\n                component={SkillTable}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={1}\n                path=\"/skills\" />\n            <RouteWithLayout\n                component={SkillDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={1}\n                path=\"/skill-details/:codigoSkill?\" />\n            <RouteWithLayout\n                component={ObjectTable}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={1}\n                path=\"/objects\" />\n            <RouteWithLayout\n                component={ObjectDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={1}\n                path=\"/object-details/:codigoObject?\" />\n            <RouteWithLayout\n                component={UserTable}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={1}\n                path=\"/users\" />\n            <RouteWithLayout\n                component={RequestUserTable}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={1}\n                path=\"/users/requests\" />\n            <RouteWithLayout\n                component={RequestUserDetails}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={1}\n                path=\"/users/requests/:codigoCourseProfessor\" />\n            {/*ROTAS DO PROFESSOR*/}\n            <RouteWithLayout\n                component={EvaluationTable}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={2}\n                path=\"/evaluations\" />\n            <RouteWithLayout\n                component={EvaluationArchiveTable}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={2}\n                path=\"/evaluations-archive\" />\n            <RouteWithLayout\n                component={EvaluationQuestions}\n                exact\n                needToBeLogged={true}\n                layout={MainLayout}\n                typeUser={2}\n                path=\"/evaluation-questions/:evaluationId\" />\n            <RouteWithLayout\n                component={EvaluationDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={2}\n                path=\"/evaluation-details/:codigoEvaluation?\" />\n            <RouteWithLayout\n                component={EvaluationApplicationTable}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={2}\n                path=\"/applications-evaluation\" />\n            <RouteWithLayout\n                component={EvaluationApplicationDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={2}\n                path=\"/applications-evaluation/details/:idApplication\" />\n            <RouteWithLayout\n                component={EvaluationApplicationResults}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={2}\n                path=\"/applications-evaluation/results/:idApplication\" />\n            <RouteWithLayout\n                component={QuestionTable}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={2}\n                path=\"/questions\" />\n            <RouteWithLayout\n                component={QuestionDetails}\n                exact\n                layout={MainLayout}\n                needToBeLogged={true}\n                typeUser={2}\n                path=\"/question-details/:idQuestion?\" />\n\n            <RouteWithLayout\n                component={Unauthorized}\n                exact\n                layout={MinimalLayout}\n                needToBeLogged={false}\n                typeUser={2}\n                path=\"/unauthorized\" />\n            <RouteWithLayout\n                path=\"*\"\n                layout={MinimalLayout}\n                needToBeLogged={false}\n                component={PageNotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport './global.css';\nimport { ThemeProvider } from '@material-ui/styles';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport theme from './theme';\nimport Routes from './routes/routes.js';\nimport { createBrowserHistory } from 'history';\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst browserHistory = createBrowserHistory();\n\nexport default class App extends Component {\n    render() {\n        document.title = 'Questione - IFCE'\n        return (\n            <ThemeProvider theme={theme}>\n                <ToastContainer autoClose={8000} position=\"bottom-center\"/>\n                <Router history={browserHistory}>\n                    <Routes history={browserHistory}/>\n                </Router>\n            </ThemeProvider>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}